ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 32x40
	 presence de 255 dans l'entete... PASS


[DHT]
		Huffman table type DC
		path: 00 symbol: 0
		path: 010 symbol: 1
		path: 011 symbol: 2
		path: 100 symbol: 3
		path: 101 symbol: 4
		path: 110 symbol: 5
		path: 1110 symbol: 6
		path: 11110 symbol: 7
		path: 111110 symbol: 8
		path: 1111110 symbol: 9
		path: 11111110 symbol: a
		path: 111111110 symbol: b


[DHT]
		Huffman table type DC
		path: 00 symbol: 0
		path: 01 symbol: 1
		path: 10 symbol: 2
		path: 110 symbol: 3
		path: 1110 symbol: 4
		path: 11110 symbol: 5
		path: 111110 symbol: 6
		path: 1111110 symbol: 7
		path: 11111110 symbol: 8
		path: 111111110 symbol: 9
		path: 1111111110 symbol: a
		path: 11111111110 symbol: b


[DHT]
		Huffman table type AC
		path: 00 symbol: 1
		path: 01 symbol: 2
		path: 100 symbol: 3
		path: 1010 symbol: 0
		path: 1011 symbol: 4
		path: 1100 symbol: 11
		path: 11010 symbol: 5
		path: 11011 symbol: 12
		path: 11100 symbol: 21
		path: 111010 symbol: 31
		path: 111011 symbol: 41
		path: 1111000 symbol: 6
		path: 1111001 symbol: 13
		path: 1111010 symbol: 51
		path: 1111011 symbol: 61
		path: 11111000 symbol: 7
		path: 11111001 symbol: 22
		path: 11111010 symbol: 71
		path: 111110110 symbol: 14
		path: 111110111 symbol: 32
		path: 111111000 symbol: 81
		path: 111111001 symbol: 91
		path: 111111010 symbol: a1
		path: 1111110110 symbol: 8
		path: 1111110111 symbol: 23
		path: 1111111000 symbol: 42
		path: 1111111001 symbol: b1
		path: 1111111010 symbol: c1
		path: 11111110110 symbol: 15
		path: 11111110111 symbol: 52
		path: 11111111000 symbol: d1
		path: 11111111001 symbol: f0
		path: 111111110100 symbol: 24
		path: 111111110101 symbol: 33
		path: 111111110110 symbol: 62
		path: 111111110111 symbol: 72
		path: 111111111000000 symbol: 82
		path: 1111111110000010 symbol: 9
		path: 1111111110000011 symbol: a
		path: 1111111110000100 symbol: 16
		path: 1111111110000101 symbol: 17
		path: 1111111110000110 symbol: 18
		path: 1111111110000111 symbol: 19
		path: 1111111110001000 symbol: 1a
		path: 1111111110001001 symbol: 25
		path: 1111111110001010 symbol: 26
		path: 1111111110001011 symbol: 27
		path: 1111111110001100 symbol: 28
		path: 1111111110001101 symbol: 29
		path: 1111111110001110 symbol: 2a
		path: 1111111110001111 symbol: 34
		path: 1111111110010000 symbol: 35
		path: 1111111110010001 symbol: 36
		path: 1111111110010010 symbol: 37
		path: 1111111110010011 symbol: 38
		path: 1111111110010100 symbol: 39
		path: 1111111110010101 symbol: 3a
		path: 1111111110010110 symbol: 43
		path: 1111111110010111 symbol: 44
		path: 1111111110011000 symbol: 45
		path: 1111111110011001 symbol: 46
		path: 1111111110011010 symbol: 47
		path: 1111111110011011 symbol: 48
		path: 1111111110011100 symbol: 49
		path: 1111111110011101 symbol: 4a
		path: 1111111110011110 symbol: 53
		path: 1111111110011111 symbol: 54
		path: 1111111110100000 symbol: 55
		path: 1111111110100001 symbol: 56
		path: 1111111110100010 symbol: 57
		path: 1111111110100011 symbol: 58
		path: 1111111110100100 symbol: 59
		path: 1111111110100101 symbol: 5a
		path: 1111111110100110 symbol: 63
		path: 1111111110100111 symbol: 64
		path: 1111111110101000 symbol: 65
		path: 1111111110101001 symbol: 66
		path: 1111111110101010 symbol: 67
		path: 1111111110101011 symbol: 68
		path: 1111111110101100 symbol: 69
		path: 1111111110101101 symbol: 6a
		path: 1111111110101110 symbol: 73
		path: 1111111110101111 symbol: 74
		path: 1111111110110000 symbol: 75
		path: 1111111110110001 symbol: 76
		path: 1111111110110010 symbol: 77
		path: 1111111110110011 symbol: 78
		path: 1111111110110100 symbol: 79
		path: 1111111110110101 symbol: 7a
		path: 1111111110110110 symbol: 83
		path: 1111111110110111 symbol: 84
		path: 1111111110111000 symbol: 85
		path: 1111111110111001 symbol: 86
		path: 1111111110111010 symbol: 87
		path: 1111111110111011 symbol: 88
		path: 1111111110111100 symbol: 89
		path: 1111111110111101 symbol: 8a
		path: 1111111110111110 symbol: 92
		path: 1111111110111111 symbol: 93
		path: 1111111111000000 symbol: 94
		path: 1111111111000001 symbol: 95
		path: 1111111111000010 symbol: 96
		path: 1111111111000011 symbol: 97
		path: 1111111111000100 symbol: 98
		path: 1111111111000101 symbol: 99
		path: 1111111111000110 symbol: 9a
		path: 1111111111000111 symbol: a2
		path: 1111111111001000 symbol: a3
		path: 1111111111001001 symbol: a4
		path: 1111111111001010 symbol: a5
		path: 1111111111001011 symbol: a6
		path: 1111111111001100 symbol: a7
		path: 1111111111001101 symbol: a8
		path: 1111111111001110 symbol: a9
		path: 1111111111001111 symbol: aa
		path: 1111111111010000 symbol: b2
		path: 1111111111010001 symbol: b3
		path: 1111111111010010 symbol: b4
		path: 1111111111010011 symbol: b5
		path: 1111111111010100 symbol: b6
		path: 1111111111010101 symbol: b7
		path: 1111111111010110 symbol: b8
		path: 1111111111010111 symbol: b9
		path: 1111111111011000 symbol: ba
		path: 1111111111011001 symbol: c2
		path: 1111111111011010 symbol: c3
		path: 1111111111011011 symbol: c4
		path: 1111111111011100 symbol: c5
		path: 1111111111011101 symbol: c6
		path: 1111111111011110 symbol: c7
		path: 1111111111011111 symbol: c8
		path: 1111111111100000 symbol: c9
		path: 1111111111100001 symbol: ca
		path: 1111111111100010 symbol: d2
		path: 1111111111100011 symbol: d3
		path: 1111111111100100 symbol: d4
		path: 1111111111100101 symbol: d5
		path: 1111111111100110 symbol: d6
		path: 1111111111100111 symbol: d7
		path: 1111111111101000 symbol: d8
		path: 1111111111101001 symbol: d9
		path: 1111111111101010 symbol: da
		path: 1111111111101011 symbol: e1
		path: 1111111111101100 symbol: e2
		path: 1111111111101101 symbol: e3
		path: 1111111111101110 symbol: e4
		path: 1111111111101111 symbol: e5
		path: 1111111111110000 symbol: e6
		path: 1111111111110001 symbol: e7
		path: 1111111111110010 symbol: e8
		path: 1111111111110011 symbol: e9
		path: 1111111111110100 symbol: ea
		path: 1111111111110101 symbol: f1
		path: 1111111111110110 symbol: f2
		path: 1111111111110111 symbol: f3
		path: 1111111111111000 symbol: f4
		path: 1111111111111001 symbol: f5
		path: 1111111111111010 symbol: f6
		path: 1111111111111011 symbol: f7
		path: 1111111111111100 symbol: f8
		path: 1111111111111101 symbol: f9
		path: 1111111111111110 symbol: fa


[DHT]
		Huffman table type AC
		path: 00 symbol: 0
		path: 01 symbol: 1
		path: 100 symbol: 2
		path: 1010 symbol: 3
		path: 1011 symbol: 11
		path: 11000 symbol: 4
		path: 11001 symbol: 5
		path: 11010 symbol: 21
		path: 11011 symbol: 31
		path: 111000 symbol: 6
		path: 111001 symbol: 12
		path: 111010 symbol: 41
		path: 111011 symbol: 51
		path: 1111000 symbol: 7
		path: 1111001 symbol: 61
		path: 1111010 symbol: 71
		path: 11110110 symbol: 13
		path: 11110111 symbol: 22
		path: 11111000 symbol: 32
		path: 11111001 symbol: 81
		path: 111110100 symbol: 8
		path: 111110101 symbol: 14
		path: 111110110 symbol: 42
		path: 111110111 symbol: 91
		path: 111111000 symbol: a1
		path: 111111001 symbol: b1
		path: 111111010 symbol: c1
		path: 1111110110 symbol: 9
		path: 1111110111 symbol: 23
		path: 1111111000 symbol: 33
		path: 1111111001 symbol: 52
		path: 1111111010 symbol: f0
		path: 11111110110 symbol: 15
		path: 11111110111 symbol: 62
		path: 11111111000 symbol: 72
		path: 11111111001 symbol: d1
		path: 111111110100 symbol: a
		path: 111111110101 symbol: 16
		path: 111111110110 symbol: 24
		path: 111111110111 symbol: 34
		path: 11111111100000 symbol: e1
		path: 111111111000010 symbol: 25
		path: 111111111000011 symbol: f1
		path: 1111111110001000 symbol: 17
		path: 1111111110001001 symbol: 18
		path: 1111111110001010 symbol: 19
		path: 1111111110001011 symbol: 1a
		path: 1111111110001100 symbol: 26
		path: 1111111110001101 symbol: 27
		path: 1111111110001110 symbol: 28
		path: 1111111110001111 symbol: 29
		path: 1111111110010000 symbol: 2a
		path: 1111111110010001 symbol: 35
		path: 1111111110010010 symbol: 36
		path: 1111111110010011 symbol: 37
		path: 1111111110010100 symbol: 38
		path: 1111111110010101 symbol: 39
		path: 1111111110010110 symbol: 3a
		path: 1111111110010111 symbol: 43
		path: 1111111110011000 symbol: 44
		path: 1111111110011001 symbol: 45
		path: 1111111110011010 symbol: 46
		path: 1111111110011011 symbol: 47
		path: 1111111110011100 symbol: 48
		path: 1111111110011101 symbol: 49
		path: 1111111110011110 symbol: 4a
		path: 1111111110011111 symbol: 53
		path: 1111111110100000 symbol: 54
		path: 1111111110100001 symbol: 55
		path: 1111111110100010 symbol: 56
		path: 1111111110100011 symbol: 57
		path: 1111111110100100 symbol: 58
		path: 1111111110100101 symbol: 59
		path: 1111111110100110 symbol: 5a
		path: 1111111110100111 symbol: 63
		path: 1111111110101000 symbol: 64
		path: 1111111110101001 symbol: 65
		path: 1111111110101010 symbol: 66
		path: 1111111110101011 symbol: 67
		path: 1111111110101100 symbol: 68
		path: 1111111110101101 symbol: 69
		path: 1111111110101110 symbol: 6a
		path: 1111111110101111 symbol: 73
		path: 1111111110110000 symbol: 74
		path: 1111111110110001 symbol: 75
		path: 1111111110110010 symbol: 76
		path: 1111111110110011 symbol: 77
		path: 1111111110110100 symbol: 78
		path: 1111111110110101 symbol: 79
		path: 1111111110110110 symbol: 7a
		path: 1111111110110111 symbol: 82
		path: 1111111110111000 symbol: 83
		path: 1111111110111001 symbol: 84
		path: 1111111110111010 symbol: 85
		path: 1111111110111011 symbol: 86
		path: 1111111110111100 symbol: 87
		path: 1111111110111101 symbol: 88
		path: 1111111110111110 symbol: 89
		path: 1111111110111111 symbol: 8a
		path: 1111111111000000 symbol: 92
		path: 1111111111000001 symbol: 93
		path: 1111111111000010 symbol: 94
		path: 1111111111000011 symbol: 95
		path: 1111111111000100 symbol: 96
		path: 1111111111000101 symbol: 97
		path: 1111111111000110 symbol: 98
		path: 1111111111000111 symbol: 99
		path: 1111111111001000 symbol: 9a
		path: 1111111111001001 symbol: a2
		path: 1111111111001010 symbol: a3
		path: 1111111111001011 symbol: a4
		path: 1111111111001100 symbol: a5
		path: 1111111111001101 symbol: a6
		path: 1111111111001110 symbol: a7
		path: 1111111111001111 symbol: a8
		path: 1111111111010000 symbol: a9
		path: 1111111111010001 symbol: aa
		path: 1111111111010010 symbol: b2
		path: 1111111111010011 symbol: b3
		path: 1111111111010100 symbol: b4
		path: 1111111111010101 symbol: b5
		path: 1111111111010110 symbol: b6
		path: 1111111111010111 symbol: b7
		path: 1111111111011000 symbol: b8
		path: 1111111111011001 symbol: b9
		path: 1111111111011010 symbol: ba
		path: 1111111111011011 symbol: c2
		path: 1111111111011100 symbol: c3
		path: 1111111111011101 symbol: c4
		path: 1111111111011110 symbol: c5
		path: 1111111111011111 symbol: c6
		path: 1111111111100000 symbol: c7
		path: 1111111111100001 symbol: c8
		path: 1111111111100010 symbol: c9
		path: 1111111111100011 symbol: ca
		path: 1111111111100100 symbol: d2
		path: 1111111111100101 symbol: d3
		path: 1111111111100110 symbol: d4
		path: 1111111111100111 symbol: d5
		path: 1111111111101000 symbol: d6
		path: 1111111111101001 symbol: d7
		path: 1111111111101010 symbol: d8
		path: 1111111111101011 symbol: d9
		path: 1111111111101100 symbol: da
		path: 1111111111101101 symbol: e2
		path: 1111111111101110 symbol: e3
		path: 1111111111101111 symbol: e4
		path: 1111111111110000 symbol: e5
		path: 1111111111110001 symbol: e6
		path: 1111111111110010 symbol: e7
		path: 1111111111110011 symbol: e8
		path: 1111111111110100 symbol: e9
		path: 1111111111110101 symbol: ea
		path: 1111111111110110 symbol: f2
		path: 1111111111110111 symbol: f3
		path: 1111111111111000 symbol: f4
		path: 1111111111111001 symbol: f5
		path: 1111111111111010 symbol: f6
		path: 1111111111111011 symbol: f7
		path: 1111111111111100 symbol: f8
		path: 1111111111111101 symbol: f9
		path: 1111111111111110 symbol: fa

[MCU #0] Valeurs RGB initiales:
2c7128 472fdc a56efc 2ba5c6 e56b17 38931d 1dc20d b592c8    
c5d6e1 6a98e2 f50746 4b8f25 a6c39b 2264b7 75063f d00a85    
384f6e fa066f 1c5f65 421cea 90a2b5 79f707 cf2763 1d434b    
ad943e 9172dc cb261e eb54b9 6af2b5 182775 123845 015f7f    
1118dd 35a868 8c562d 8214e0 2e09f8 a26eba e1a2a4 0c08e3    
e57905 f6a84f 7166fb 84bb03 d2171f 3b1cf5 ccd368 981b89    
9d90fb b9bbb8 6daeaa 8c7ff1 514b81 87e5c4 c66842 ebdeba    
081641 64d0b5 b2229f 445781 a1541e 8e81b8 f8bc0a 7713c3    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	54 4a 8f 84 86 6a 7c a3 
	d2 93 55 6f b6 5a 2e 53 
	4c 5b 4c 3f 9f b6 60 39 
	92 87 56 8d c2 2b 2e 47 
	2c 7e 61 4c 2f 86 b5 22 
	8c b5 7a 96 50 3e c5 4d 
	a0 ba 9a 90 53 c5 80 de 
	17 ad 5b 56 65 8b ba 45 

[Cb]:
	67 d2 be a5 41 54 41 95 
	88 ad 77 56 71 b5 8a 9c 
	93 8b 8e e1 8d 1d 82 8a 
	51 b0 60 99 78 aa 8d a0 
	e4 73 62 d3 f1 9d 76 ed 
	34 46 c9 2d 64 e7 4c a2 
	b3 7f 89 b7 9a 7f 5d 6c 
	98 85 a6 98 58 99 1d c7 

[Cr]:
	63 7e 90 40 c4 5c 3c 8d 
	77 63 f2 67 75 58 b3 d9 
	72 f1 5e 82 75 55 cf 6c 
	93 87 d3 c3 41 72 6c 4e 
	6c 4c 9e a6 7f 94 9f 70 
	bf ae 79 73 dd 7e 85 b6 
	7e 7f 60 7d 7f 54 b2 89 
	76 4c be 73 ab 82 ac a4 

[MCU #0] Downsampling:
[Y]:
	54 4a 8f 84 86 6a 7c a3 
	d2 93 55 6f b6 5a 2e 53 
	4c 5b 4c 3f 9f b6 60 39 
	92 87 56 8d c2 2b 2e 47 
	2c 7e 61 4c 2f 86 b5 22 
	8c b5 7a 96 50 3e c5 4d 
	a0 ba 9a 90 53 c5 80 de 
	17 ad 5b 56 65 8b ba 45 

[Cb]:
	67 d2 be a5 41 54 41 95 
	88 ad 77 56 71 b5 8a 9c 
	93 8b 8e e1 8d 1d 82 8a 
	51 b0 60 99 78 aa 8d a0 
	e4 73 62 d3 f1 9d 76 ed 
	34 46 c9 2d 64 e7 4c a2 
	b3 7f 89 b7 9a 7f 5d 6c 
	98 85 a6 98 58 99 1d c7 

[Cr]:
	63 7e 90 40 c4 5c 3c 8d 
	77 63 f2 67 75 58 b3 d9 
	72 f1 5e 82 75 55 cf 6c 
	93 87 d3 c3 41 72 6c 4e 
	6c 4c 9e a6 7f 94 9f 70 
	bf ae 79 73 dd 7e 85 b6 
	7e 7f 60 7d 7f 54 b2 89 
	76 4c be 73 ab 82 ac a4 

[MCU #0] DCT:
[Y]:
	ffa6 0016 fff1 0024 ffd1 ffe9 ffbf fff8 
	ffd1 001e ffcc 0028 007f ffdf 0036 003b 
	0041 ffc9 0017 ffda 0000 ffec 0024 fff3 
	0030 fffd 003a ffac fff1 0053 fffa fff9 
	ffb4 ffd0 ffd2 ffdc ffdb 000c ffda 0017 
	004b ffee 0005 ffcd 004b ffe6 003f fff1 
	ffcb ffc5 ffd9 0000 ffba 0026 ffd2 001b 
	ffef ff8d 0000 000f ff92 0003 0047 ffda 

[Cb]:
	0051 0014 0000 ffbc 0033 ffca 0042 ffb6 
	fffd 0019 001a ffd4 ffd5 0004 ff98 fffb 
	ffcc 005b 001a ffc1 ffcf fff6 0029 ffe7 
	fffe ffe6 fff4 000f ffd6 ffdc 004b 0014 
	002d 0008 0013 ffe0 0030 ffe2 fff7 ffc9 
	ffd6 0033 ffd5 ffd2 ffe2 0020 ffc1 fff2 
	ffc8 0004 ffee ffa0 ffe6 0003 0032 000e 
	004b 0051 ffef fff3 00a8 003f ffb6 001e 

[Cr]:
	003e fff9 0009 ffbd fff9 0007 ffec 0059 
	ffe3 0024 0009 ffcc ffe1 ffda 0006 0004 
	ffeb ffc1 0015 fff5 001d ffb9 001b 0055 
	fff8 fff6 fff4 002f 0049 ffb5 0022 0017 
	ffd4 000f ffa6 fffb ffff 001b 005c fffd 
	ffc9 0049 0000 001b 0002 ffed ffc5 ffcc 
	001c 0018 0006 0042 000f ffa5 ffc0 fffc 
	ffd1 ffd7 fff9 0023 ffe7 0005 ffb0 ffe8 

[MCU #0] ZZ:
[Y]:
	ffa6 0016 ffd1 0041 001e fff1 0024 ffcc 
	ffc9 0030 ffb4 fffd 0017 0028 ffd1 ffe9 
	007f ffda 003a ffd0 004b ffcb ffee ffd2 
	ffac 0000 ffdf ffbf fff8 0036 ffec fff1 
	ffdc 0005 ffc5 ffef ff8d ffd9 ffcd ffdb 
	0053 0024 003b fff3 fffa 000c 004b 0000 
	0000 000f ffba ffe6 ffda fff9 0017 003f 
	0026 ff92 0003 ffd2 fff1 001b 0047 ffda 

[Cb]:
	0051 0014 fffd ffcc 0019 0000 ffbc 001a 
	005b fffe 002d ffe6 001a ffd4 0033 ffca 
	ffd5 ffc1 fff4 0008 ffd6 ffc8 0033 0013 
	000f ffcf 0004 0042 ffb6 ff98 fff6 ffd6 
	ffe0 ffd5 0004 004b 0051 ffee ffd2 0030 
	ffdc 0029 fffb ffe7 004b ffe2 ffe2 ffa0 
	ffef fff3 ffe6 0020 fff7 0014 ffc9 ffc1 
	0003 00a8 003f 0032 fff2 000e ffb6 001e 

[Cr]:
	003e fff9 ffe3 ffeb 0024 0009 ffbd 0009 
	ffc1 fff8 ffd4 fff6 0015 ffcc fff9 0007 
	ffe1 fff5 fff4 000f ffc9 001c 0049 ffa6 
	002f 001d ffda ffec 0059 0006 ffb9 0049 
	fffb 0000 0018 ffd1 ffd7 0006 001b ffff 
	ffb5 001b 0004 0055 0022 001b 0002 0042 
	fff9 0023 000f ffed 005c 0017 fffd ffc5 
	ffa5 ffe7 0005 ffc0 ffcc fffc ffb0 ffe8 

[MCU #0] Quantification:
[Y]:
	ffee 0007 fff1 000d 0004 ffff 0002 fffe 
	fff3 000c ffed 0000 0002 0002 fffe ffff 
	001f fff7 000b fffa 0006 fffd 0000 fffe 
	ffeb 0000 fffc fff9 0000 0002 0000 0000 
	fff9 0000 fffb ffff fffb ffff ffff ffff 
	000b 0003 0003 0000 0000 0000 0002 0000 
	0000 0000 fffd ffff ffff 0000 0000 0002 
	0001 fffd 0000 ffff 0000 0000 0002 ffff 

[Cb]:
	0010 0004 0000 fffd 0000 0000 fffe 0000 
	0012 0000 0005 ffff 0000 ffff 0001 ffff 
	fffa fff9 0000 0000 ffff ffff 0001 0000 
	0001 fffe 0000 0002 fffe fffd 0000 ffff 
	ffff ffff 0000 0002 0002 0000 ffff 0001 
	ffff 0001 0000 0000 0002 ffff ffff fffd 
	0000 0000 0000 0001 0000 0000 ffff fffe 
	0000 0005 0002 0001 0000 0000 fffe 0001 

[Cr]:
	000c ffff fffc ffff 0001 0000 fffe 0000 
	fff4 ffff fffb 0000 0000 ffff 0000 0000 
	fffc ffff 0000 0000 ffff 0000 0002 fffd 
	0003 0001 ffff 0000 0002 0000 fffe 0002 
	0000 0000 0000 ffff ffff 0000 0000 0000 
	fffe 0000 0000 0002 0001 0000 0000 0002 
	0000 0001 0000 0000 0003 0000 0000 ffff 
	fffd 0000 0000 fffe ffff 0000 fffe 0000 

[MCU #0] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -18, magnitude = 5, index = 13
		bitstream => writing 6 over 3 bits
		bitstream => writing 13 over 5 bits

AC:
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -21, magnitude = 5, index = 10
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 10 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 0 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 50, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 16, magnitude = 5, index = 16
		bitstream => writing 30 over 5 bits
		bitstream => writing 16 over 5 bits

AC:
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 21, huffman path = 2038, nb_bits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 18 over 5 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 14 over 4 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #1] Valeurs RGB initiales:
316150 59a2f9 9ccf6a c51699 a1bb08 9de6ad 63cb18 7a04ab    
8c1380 47ef9c c4b472 a61e0a 881312 cf5fa1 f40564 8f27c9    
aa3c5b 3cc506 77fd55 e5f75c 5513bb ba56d7 a4e679 595f70    
23632b ee3f9d 48ec31 867da3 6248ca 80331e 399e10 efb637    
13e012 3c1564 0f267c ec5b24 55e87a 826a8e 629898 5b3a06    
db0abe a5c683 e2acfd e7a2a5 36140b 3298c7 356ade 54a5fb    
9a0daf b6a21f 263faf 22f86b da6619 85f298 7643e3 f7cac8    
c32703 013978 53418f 95a55f 4a5882 ea9cd9 6b3d2e 89ccaf    

[MCU #1] Conversion RGB -> YCbCr:
[Y]:
	51 96 b4 59 9f ca 97 3a 
	44 b3 b1 44 36 88 57 59 
	60 86 c2 e0 3a 83 c6 5f 
	49 7e a6 84 5f 48 70 b9 
	8b 2a 29 80 b0 75 88 3e 
	5d b4 c5 b7 1d 7f 67 97 
	4a 99 44 a8 80 c7 64 d7 
	52 2f 4f 98 59 ba 49 b5 

[Cb]:
	80 b8 56 a4 2b 70 38 c0 
	a2 73 5c 5f 6c 8e 87 bf 
	7d 38 43 36 c9 b0 55 8a 
	6f 91 3e 91 bd 69 4a 37 
	3c a1 af 4c 62 8e 89 60 
	b7 64 9f 76 76 a9 c3 b9 
	b9 3b bc 5e 46 65 c7 77 
	54 a9 a4 60 97 91 71 7d 

[Cr]:
	69 54 6f cd 82 60 5b ad 
	b4 33 8d c6 bb b3 f0 a7 
	b4 4b 4b 84 93 a8 68 7c 
	65 d0 3d 81 82 a8 59 a7 
	2a 8d 6e cd 3f 89 65 95 
	da 75 94 a2 92 49 5c 51 
	b9 95 6a 20 c0 51 8c 97 
	d1 5f 83 7e 76 a2 98 61 

[MCU #1] Downsampling:
[Y]:
	51 96 b4 59 9f ca 97 3a 
	44 b3 b1 44 36 88 57 59 
	60 86 c2 e0 3a 83 c6 5f 
	49 7e a6 84 5f 48 70 b9 
	8b 2a 29 80 b0 75 88 3e 
	5d b4 c5 b7 1d 7f 67 97 
	4a 99 44 a8 80 c7 64 d7 
	52 2f 4f 98 59 ba 49 b5 

[Cb]:
	80 b8 56 a4 2b 70 38 c0 
	a2 73 5c 5f 6c 8e 87 bf 
	7d 38 43 36 c9 b0 55 8a 
	6f 91 3e 91 bd 69 4a 37 
	3c a1 af 4c 62 8e 89 60 
	b7 64 9f 76 76 a9 c3 b9 
	b9 3b bc 5e 46 65 c7 77 
	54 a9 a4 60 97 91 71 7d 

[Cr]:
	69 54 6f cd 82 60 5b ad 
	b4 33 8d c6 bb b3 f0 a7 
	b4 4b 4b 84 93 a8 68 7c 
	65 d0 3d 81 82 a8 59 a7 
	2a 8d 6e cd 3f 89 65 95 
	da 75 94 a2 92 49 5c 51 
	b9 95 6a 20 c0 51 8c 97 
	d1 5f 83 7e 76 a2 98 61 

[MCU #1] DCT:
[Y]:
	ffde ffd4 ffcd ffb7 ffb9 0008 0024 ffa8 
	0005 0051 ffe7 0000 ff7a 000f ffe6 005f 
	000a ffdf ffee 002e ffcd ffbe 0038 ffd9 
	000b 0022 fff2 0038 ffe6 ffd7 fff4 0017 
	ffcf ffd0 ffe4 005a 0047 fffa 0009 004b 
	0050 ffdc 0000 ffce fffe ffe2 fff0 fff0 
	0030 001f ffe6 ffcf ffd8 005e 0007 fff5 
	0013 ffd7 ffc8 007c 002c 0037 ffd1 000b 

[Cb]:
	ffec ffe6 002d 0015 fff3 ffe4 0026 0007 
	ffd4 fffb 0015 0012 0059 ffc0 fff3 ffa1 
	0018 0008 0047 ffc1 000c 000a 0015 ffd3 
	0031 000b 0053 ffb0 ffdb 004e 000d ffd5 
	ffd6 004b ffb6 ffc5 ffd8 ffab ffbc ffb7 
	ffe0 0028 fff3 000e 003b 002f fff1 fffc 
	0018 ffde ffec 0019 001c ffc8 0017 ffec 
	ffd6 fff1 0002 fff0 ffcb fffe 0026 001b 

[Cr]:
	0027 fff8 0003 002b 005e 001f 0004 ffe5 
	001d ffa5 ffc6 ffdd 002b 001c 0005 ffc7 
	0024 fff5 000d 001f 0023 0045 0019 005f 
	ffe3 0027 ffe2 ff98 001e 0005 ffe7 0004 
	ffd7 ffeb ffe7 ffb1 ffd7 ffde fff8 ff86 
	ffd0 001c 0036 000c 0013 ff7e ffe5 0012 
	ffcf 0050 ffe8 000f 0027 0025 0029 ffec 
	ffc8 ffdf fffe ffe5 fffd fff5 0009 ffef 

[MCU #1] ZZ:
[Y]:
	ffde ffd4 0005 000a 0051 ffcd ffb7 ffe7 
	ffdf 000b ffcf 0022 ffee 0000 ffb9 0008 
	ff7a 002e fff2 ffd0 0050 0030 ffdc ffe4 
	0038 ffcd 000f 0024 ffa8 ffe6 ffbe ffe6 
	005a 0000 001f 0013 ffd7 ffe6 ffce 0047 
	ffd7 0038 005f ffd9 fff4 fffa fffe ffcf 
	ffc8 007c ffd8 ffe2 0009 0017 004b fff0 
	005e 002c 0037 0007 fff0 fff5 ffd1 000b 

[Cb]:
	ffec ffe6 ffd4 0018 fffb 002d 0015 0015 
	0008 0031 ffd6 000b 0047 0012 fff3 ffe4 
	0059 ffc1 0053 004b ffe0 0018 0028 ffb6 
	ffb0 000c ffc0 0026 0007 fff3 000a ffdb 
	ffc5 fff3 ffde ffd6 fff1 ffec 000e ffd8 
	004e 0015 ffa1 ffd3 000d ffab 003b 0019 
	0002 fff0 001c 002f ffbc ffd5 ffb7 fff1 
	ffc8 ffcb fffe 0017 fffc ffec 0026 001b 

[Cr]:
	0027 fff8 001d 0024 ffa5 0003 002b ffc6 
	fff5 ffe3 ffd7 0027 000d ffdd 005e 001f 
	002b 001f ffe2 ffeb ffd0 ffcf 001c ffe7 
	ff98 0023 001c 0004 ffe5 0005 0045 001e 
	ffb1 0036 0050 ffc8 ffdf ffe8 000c ffd7 
	0005 0019 ffc7 005f ffe7 ffde 0013 000f 
	fffe ffe5 0027 ff7e fff8 0004 ff86 ffe5 
	0025 fffd fff5 0029 0012 ffec 0009 ffef 

[MCU #1] Quantification:
[Y]:
	fffa fff2 0001 0002 000b fffc fffc ffff 
	fff8 0002 fff4 0005 fffe 0000 fffd 0000 
	ffdf 000b fffe fffa 0006 0002 ffff ffff 
	000e fff6 0002 0004 fffb ffff fffe ffff 
	0012 0000 0002 0001 fffe 0000 ffff 0003 
	fffb 0005 0005 fffe 0000 0000 0000 ffff 
	fffd 0006 ffff ffff 0000 0000 0002 0000 
	0004 0001 0001 0000 0000 0000 ffff 0000 

[Cb]:
	fffc fffb fffa 0001 0000 0001 0000 0000 
	0001 0008 fffb 0000 0002 0000 0000 0000 
	000c fff9 0004 0002 ffff 0000 0001 fffe 
	fffb 0000 fffe 0001 0000 0000 0000 ffff 
	ffff 0000 ffff ffff 0000 0000 0000 ffff 
	0002 0000 fffd ffff 0000 fffe 0001 0000 
	0000 0000 0000 0001 fffe ffff fffe 0000 
	ffff ffff 0000 0000 0000 0000 0001 0000 

[Cr]:
	0007 ffff 0004 0002 fffd 0000 0001 ffff 
	fffe fffc fffb 0001 0000 ffff 0003 0001 
	0006 0003 ffff 0000 ffff ffff 0000 0000 
	fff9 0001 0000 0000 0000 0000 0002 0001 
	fffe 0001 0002 ffff ffff 0000 0000 ffff 
	0000 0000 ffff 0003 0000 ffff 0000 0000 
	0000 0000 0001 fffc 0000 0000 fffc 0000 
	0001 0000 0000 0001 0000 0000 0000 0000 

[MCU #1] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 5 over 3 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 22, huffman path = 65412, nb_bits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 30 over 6 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -20, magnitude = 5, index = 11
		bitstream => writing 30 over 5 bits
		bitstream => writing 11 over 5 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 52, huffman path = 4087, nb_bits = 12
		bitstream => writing 4087 over 12 bits
		bitstream => writing 12 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -5, magnitude = 3, index = 2
		bitstream => writing 6 over 3 bits
		bitstream => writing 2 over 3 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #2] Valeurs RGB initiales:
98216e a5d700 6d0862 bd6104 b6fed3 20c3e9 ba64a4 c2018b    
469ccf 866cda 0bf8ed 8b3fdc 280490 9aaaaf a532c2 b70121    
602e97 c44bdb 0ff617 6b32dc 71a9d9 c68fd0 22e4e4 dd9e3a    
64c86f a9cacf 29ed32 54db71 f1235e 22a9db c60b24 908b57    
151ba9 b928b1 9c3b91 af77a7 1386cd 907329 b4c811 2f4a7b    
4a71ce b209e9 3be5f3 fa8ab9 7d6d65 7a5408 208b1c 2bbdb4    
bb9130 fd7c0e b7161b 67ccbe 86f2fd 3614f6 a1ef5c ba744e    
41c46c 4c3b7f 0ffea6 12ffe0 8b5321 1ae8c7 79321f fb1cbb    

[MCU #2] Conversion RGB -> YCbCr:
[Y]:
	4d b0 30 72 e4 97 85 4a 
	88 80 b0 68 1f a6 65 3b 
	49 80 98 56 9e a7 aa a5 
	a0 c1 9d a7 67 86 46 87 
	29 63 62 8d 6c 73 ad 48 
	70 55 b4 b1 71 57 5e 90 
	93 96 47 ac d3 38 c7 85 
	93 48 ad b5 5e a7 45 71 

[Cb]:
	92 1d 9c 42 77 ae 91 a4 
	a8 b3 a2 c2 c0 85 b5 71 
	ac b4 37 cb a1 97 a1 43 
	64 88 44 62 7b b0 6d 65 
	c8 ac 9b 8f b7 56 28 9d 
	b5 d3 a4 85 79 54 5b 94 
	48 33 67 8a 98 eb 44 61 
	6a 9f 7c 98 5e 92 6b aa 

[Cr]:
	b5 78 ab b6 5f 2b a6 d5 
	51 84 0a 99 87 78 ae d8 
	90 b1 1f 8f 60 96 1f a8 
	55 6f 2d 45 e2 38 db 87 
	71 bd aa 98 41 95 85 6f 
	65 c2 2a b4 89 99 54 38 
	9d c9 d0 4f 49 7f 65 a6 
	46 83 10 0c a0 1c a5 e3 

[MCU #2] Downsampling:
[Y]:
	4d b0 30 72 e4 97 85 4a 
	88 80 b0 68 1f a6 65 3b 
	49 80 98 56 9e a7 aa a5 
	a0 c1 9d a7 67 86 46 87 
	29 63 62 8d 6c 73 ad 48 
	70 55 b4 b1 71 57 5e 90 
	93 96 47 ac d3 38 c7 85 
	93 48 ad b5 5e a7 45 71 

[Cb]:
	92 1d 9c 42 77 ae 91 a4 
	a8 b3 a2 c2 c0 85 b5 71 
	ac b4 37 cb a1 97 a1 43 
	64 88 44 62 7b b0 6d 65 
	c8 ac 9b 8f b7 56 28 9d 
	b5 d3 a4 85 79 54 5b 94 
	48 33 67 8a 98 eb 44 61 
	6a 9f 7c 98 5e 92 6b aa 

[Cr]:
	b5 78 ab b6 5f 2b a6 d5 
	51 84 0a 99 87 78 ae d8 
	90 b1 1f 8f 60 96 1f a8 
	55 6f 2d 45 e2 38 db 87 
	71 bd aa 98 41 95 85 6f 
	65 c2 2a b4 89 99 54 38 
	9d c9 d0 4f 49 7f 65 a6 
	46 83 10 0c a0 1c a5 e3 

[MCU #2] DCT:
[Y]:
	fff7 0007 ffbb fff4 ffec 000a ffef ffef 
	ffef fffb 0006 003a ffa3 ffb6 fff7 fff8 
	0004 000a ffe9 0042 0017 fff5 fffe 0004 
	ffd9 ffed ffda 000c 0020 fffe ff9e 0018 
	ffee 0012 ffd6 0020 0002 ffe9 fffa ffce 
	0053 fffb 000e 001b 004f ffb0 ff8f 001c 
	000b ffcb ffe1 ffe6 000d ffdd 0035 0012 
	fff8 ff87 ffea 0034 ffee fff1 ff8e 0039 

[Cb]:
	0036 0021 ffe4 002f 001e ffde 0011 ffd6 
	002b fff1 0009 0032 fffb 003c ffdf 003a 
	ffff ffa0 fff7 fff0 ffdd 0032 0040 000c 
	fffd 0018 002a ffd2 0019 ffea 005c 004f 
	ffcc ffd9 0039 ffe6 0004 ffe3 0042 0012 
	ff94 ff90 ffd7 0055 ffd4 000d 0046 ffe3 
	0008 0028 004b ffe9 0000 000e ffd8 fff6 
	0000 0002 ffda 0020 0036 0007 0018 ffff 

[Cr]:
	ffec ffcf 0062 ffde 0029 ffb7 ff8e ffd2 
	002c ffe1 fffb ffee 004e 0045 fffb ffdc 
	0008 ffd3 0063 ffb5 0038 0003 000e 002d 
	0046 006f ffc3 ffd3 ffc4 0059 002d ffd7 
	ffff ffc9 0021 ffd4 0004 002b ffd4 008a 
	001f 003e 0012 ffee fffe 000c 002a 004b 
	ffd5 002a ffe3 0026 0038 ffea fff3 ffbf 
	002b 0070 002b ffb8 ffca 000c 0083 ffbb 

[MCU #2] ZZ:
[Y]:
	fff7 0007 ffef 0004 fffb ffbb fff4 0006 
	000a ffd9 ffee ffed ffe9 003a ffec 000a 
	ffa3 0042 ffda 0012 0053 000b fffb ffd6 
	000c 0017 ffb6 ffef ffef fff7 fff5 0020 
	0020 000e ffcb fff8 ff87 ffe1 001b 0002 
	fffe fffe fff8 0004 ff9e ffe9 004f ffe6 
	ffea 0034 000d ffb0 fffa 0018 ffce ff8f 
	ffdd ffee fff1 0035 001c 0012 ff8e 0039 

[Cb]:
	0036 0021 002b ffff fff1 ffe4 002f 0009 
	ffa0 fffd ffcc 0018 fff7 0032 001e ffde 
	fffb fff0 002a ffd9 ff94 0008 ff90 0039 
	ffd2 ffdd 003c 0011 ffd6 ffdf 0032 0019 
	ffe6 ffd7 0028 0000 0002 004b 0055 0004 
	ffea 0040 003a 000c 005c ffe3 ffd4 ffe9 
	ffda 0020 0000 000d 0042 004f 0012 0046 
	000e 0036 0007 ffd8 ffe3 fff6 0018 ffff 

[Cr]:
	ffec ffcf 002c 0008 ffe1 0062 ffde fffb 
	ffd3 0046 ffff 006f 0063 ffee 0029 ffb7 
	004e ffb5 ffc3 ffc9 001f ffd5 003e 0021 
	ffd3 0038 0045 ff8e ffd2 fffb 0003 ffc4 
	ffd4 0012 002a 002b 0070 ffe3 ffee 0004 
	0059 000e ffdc 002d 002d 002b fffe 0026 
	002b ffb8 0038 000c ffd4 ffd7 008a 002a 
	ffea ffca 000c fff3 004b ffbf 0083 ffbb 

[MCU #2] Quantification:
[Y]:
	ffff 0002 fffb 0000 0000 fffb 0000 0000 
	0002 fff7 fffc fffd fffe 0003 ffff 0000 
	ffe9 0010 fff9 0002 0006 0000 0000 fffe 
	0003 0004 fff6 ffff ffff 0000 0000 0001 
	0006 0002 fffc 0000 fffa 0000 0000 0000 
	0000 0000 0000 0000 fffc 0000 0002 0000 
	ffff 0002 0000 fffd 0000 0000 ffff fffd 
	ffff 0000 0000 0001 0000 0000 fffd 0001 

[Cb]:
	000a 0006 0006 0000 0000 0000 0001 0000 
	ffed 0000 fffa 0001 0000 0001 0001 ffff 
	0000 fffe 0002 ffff fffd 0000 fffd 0001 
	fffd ffff 0002 0000 ffff ffff 0001 0000 
	0000 ffff 0001 0000 0000 0002 0002 0000 
	0000 0002 0001 0000 0003 0000 ffff 0000 
	ffff 0001 0000 0000 0002 0002 0000 0002 
	0000 0001 0000 ffff 0000 0000 0000 0000 

[Cr]:
	fffc fff7 0006 0000 ffff 0003 ffff 0000 
	fff7 000b 0000 0005 0003 0000 0001 fffe 
	000b fff7 fffd ffff 0001 ffff 0002 0001 
	fffd 0002 0002 fffd ffff 0000 0000 fffe 
	ffff 0000 0001 0001 0003 0000 0000 0000 
	0002 0000 ffff 0001 0001 0001 0000 0001 
	0001 fffe 0001 0000 ffff ffff 0004 0001 
	0000 ffff 0000 0000 0002 fffe 0004 fffe 

[MCU #2] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 5, magnitude = 3, index = 5
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits

AC:
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nb_bits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 115, huffman path = 65454, nb_bits = 16
		bitstream => writing 65454 over 16 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 14, magnitude = 4, index = 14
		bitstream => writing 14 over 4 bits
		bitstream => writing 14 over 4 bits

AC:
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nb_bits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -11, magnitude = 4, index = 4
		bitstream => writing 14 over 4 bits
		bitstream => writing 4 over 4 bits

AC:
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 6 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 5 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
[MCU #3] Valeurs RGB initiales:
6f6456 88de5a 33767c a11b53 a2885b 0445bc 08fbba dc1c7d    
58f526 bd854d 86cbe9 555155 2f5c4e 1ce88d f81091 89aa3b    
b44220 2d9b7f 9efcae 35c0f9 10cfef 273a21 03abcb dc725a    
aec4f5 beb3ac f51874 65c13e 34ea2b 663e06 d72f29 3552d2    
bdac13 55074d 5c1c69 05d691 b672cc 482143 ef35ca bcc53d    
f2f21f d146c4 cc9036 9a423f 837e24 7678af 2ff51c 957070    
52ea92 35e15c fd9ded 2d9a69 3b527f 56b94b 143f3e 127552    
d587f9 0310c5 b25289 1e9ec4 9dadc3 44c0c2 244b15 4565fd    

[MCU #3] Conversion RGB -> YCbCr:
[Y]:
	66 b5 63 49 8b 3f ab 60 
	ae 8f ba 53 4d a1 64 93 
	60 77 d7 9d 9a 31 7c 8f 
	c3 b5 65 97 9e 44 61 58 
	a0 26 38 90 91 31 7e b3 
	da 7e 98 5c 75 7e a1 7b 
	b3 9e c3 74 50 8f 32 53 
	ab 21 75 7c ab 9b 39 6d 

[Cb]:
	77 4d 8e 85 65 c6 88 90 
	33 5b 9b 81 81 75 99 4e 
	5c 85 69 b4 b0 77 ac 62 
	9c 7b 89 4e 3f 5d 61 c5 
	31 96 9c 81 a2 8a ab 3e 
	17 a8 49 70 52 9c 35 7a 
	6e 5b 98 7a 9a 5a 87 7f 
	ac dd 8b a9 8e 96 6c d1 

[Cr]:
	87 60 5e be 91 56 0c d8 
	42 a1 5b 82 6b 21 ea 79 
	bc 4b 57 36 1e 79 29 b7 
	71 86 e7 5d 35 99 d4 67 
	95 a1 9a 1d 9b 91 d1 87 
	91 bb a5 ac 8a 7b 2f 93 
	3b 35 a9 4d 71 57 6b 51 
	9e 6b ac 3d 76 42 71 64 

[MCU #3] Downsampling:
[Y]:
	66 b5 63 49 8b 3f ab 60 
	ae 8f ba 53 4d a1 64 93 
	60 77 d7 9d 9a 31 7c 8f 
	c3 b5 65 97 9e 44 61 58 
	a0 26 38 90 91 31 7e b3 
	da 7e 98 5c 75 7e a1 7b 
	b3 9e c3 74 50 8f 32 53 
	ab 21 75 7c ab 9b 39 6d 

[Cb]:
	77 4d 8e 85 65 c6 88 90 
	33 5b 9b 81 81 75 99 4e 
	5c 85 69 b4 b0 77 ac 62 
	9c 7b 89 4e 3f 5d 61 c5 
	31 96 9c 81 a2 8a ab 3e 
	17 a8 49 70 52 9c 35 7a 
	6e 5b 98 7a 9a 5a 87 7f 
	ac dd 8b a9 8e 96 6c d1 

[Cr]:
	87 60 5e be 91 56 0c d8 
	42 a1 5b 82 6b 21 ea 79 
	bc 4b 57 36 1e 79 29 b7 
	71 86 e7 5d 35 99 d4 67 
	95 a1 9a 1d 9b 91 d1 87 
	91 bb a5 ac 8a 7b 2f 93 
	3b 35 a9 4d 71 57 6b 51 
	9e 6b ac 3d 76 42 71 64 

[MCU #3] DCT:
[Y]:
	ffee 0061 0029 0001 0037 000b 001e 0040 
	0006 ffef 0019 ffc0 ffc5 ffe3 ffa4 0016 
	ffee 0000 ffee 001d ffb1 ffdf 0037 fff9 
	fff8 ffea 0051 0025 ffde 000e ffcf 0004 
	ffc8 ffcf ffed 0038 0061 fff9 ffa8 0002 
	0005 005d ffe8 ffee ffc8 ffe1 ffbc fff9 
	000a ffd0 ffe6 fff1 000a 0011 ffcf 0040 
	ffd8 ffca ffdd ffb6 0024 0009 fff6 0012 

[Cb]:
	fff1 ffd8 ffd5 ffd5 ffd7 ffe8 fff6 ffed 
	ffe2 ffd5 ffdc 0018 ffe6 004b 0014 001b 
	0042 fffb 0004 0008 001f 000f 0028 fff0 
	ffb3 ffde ffd1 0010 ffc4 fff5 0023 ffe8 
	0047 0013 004d 0000 0003 fffa 0032 fff1 
	fff4 fffa 004c fffd 003b 0015 0039 000f 
	0017 fffd 0002 0016 000b ffd2 ffef ff9d 
	0035 fff4 ffa3 0024 fff3 0030 ffc3 003d 

[Cr]:
	ffc2 0013 0044 ffbf ffec fffe 0021 003a 
	0007 ffcf 002b ffea 0046 0005 ffda ffae 
	ffb7 0009 ffd1 ffd5 007f fff0 ffea fff8 
	0045 0007 ffb1 ffea 0045 ffbc ffe5 ffd9 
	003f 0000 0009 0013 ffe5 0004 0014 002c 
	ffd4 0001 ffd2 ffe0 0013 0010 0070 ffdc 
	000a 004c 0027 0008 0080 ffbf 006d ffa4 
	ffc5 ffde 0031 003c 0033 ffdb 003a 0015 

[MCU #3] ZZ:
[Y]:
	ffee 0061 0006 ffee ffef 0029 0001 0019 
	0000 fff8 ffc8 ffea ffee ffc0 0037 000b 
	ffc5 001d 0051 ffcf 0005 000a 005d ffed 
	0025 ffb1 ffe3 001e 0040 ffa4 ffdf ffde 
	0038 ffe8 ffd0 ffd8 ffca ffe6 ffee 0061 
	000e 0037 0016 fff9 ffcf fff9 ffc8 fff1 
	ffdd ffb6 000a ffe1 ffa8 0004 0002 ffbc 
	0011 0024 0009 ffcf fff9 0040 fff6 0012 

[Cb]:
	fff1 ffd8 ffe2 0042 ffd5 ffd5 ffd5 ffdc 
	fffb ffb3 0047 ffde 0004 0018 ffd7 ffe8 
	ffe6 0008 ffd1 0013 fff4 0017 fffa 004d 
	0010 001f 004b fff6 ffed 0014 000f ffc4 
	0000 004c fffd 0035 fff4 0002 fffd 0003 
	fff5 0028 001b fff0 0023 fffa 003b 0016 
	ffa3 0024 000b 0015 0032 ffe8 fff1 0039 
	ffd2 fff3 0030 ffef 000f ff9d ffc3 003d 

[Cr]:
	ffc2 0013 0007 ffb7 ffcf 0044 ffbf 002b 
	0009 0045 003f 0007 ffd1 ffea ffec fffe 
	0046 ffd5 ffb1 0000 ffd4 000a 0001 0009 
	ffea 007f 0005 0021 003a ffda fff0 0045 
	0013 ffd2 004c ffc5 ffde 0027 ffe0 ffe5 
	ffbc ffea ffae fff8 ffe5 0004 0013 0008 
	0031 003c 0080 0010 0014 ffd9 002c 0070 
	ffbf 0033 ffdb 006d ffdc ffa4 003a 0015 

[MCU #3] Quantification:
[Y]:
	fffd 0020 0002 fffd fffe 0003 0000 0001 
	0000 fffe fff2 fffd fffe fffd 0003 0000 
	fff2 0007 0010 fff9 0000 0000 0004 ffff 
	0009 fff1 fffc 0003 0004 fffd ffff ffff 
	000b fffd fffc fffe fffe 0000 0000 0004 
	0002 0005 0001 0000 fffe 0000 ffff 0000 
	fffe fffd 0000 ffff fffe 0000 0000 fffe 
	0000 0001 0000 ffff 0000 0002 0000 0000 

[Cb]:
	fffd fff8 fffc 0004 ffff ffff ffff ffff 
	ffff fff4 0008 ffff 0000 0000 ffff 0000 
	fffd 0001 fffe 0000 0000 0000 0000 0002 
	0001 0001 0002 0000 0000 0000 0000 fffe 
	0000 0002 0000 0001 0000 0000 0000 0000 
	0000 0001 0000 0000 0001 0000 0001 0000 
	fffd 0001 0000 0000 0001 0000 0000 0001 
	ffff 0000 0001 0000 0000 fffd fffe 0002 

[Cr]:
	fff4 0003 0001 fffb ffff 0002 fffe 0001 
	0001 000b 0007 0000 ffff 0000 0000 0000 
	000a fffb fffc 0000 ffff 0000 0000 0000 
	ffff 0006 0000 0001 0001 ffff 0000 0002 
	0000 ffff 0002 ffff ffff 0001 ffff 0000 
	fffe 0000 fffe 0000 0000 0000 0000 0000 
	0001 0002 0004 0000 0000 ffff 0001 0003 
	fffe 0001 ffff 0003 ffff fffd 0001 0000 

[MCU #3] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -2, magnitude = 2, index = 1
		bitstream => writing 3 over 3 bits
		bitstream => writing 1 over 2 bits

AC:
	value = 32, magnitude = 6, index = 32
	RLE code = 6, huffman path = 120, nb_bits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 32 over 6 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -13, magnitude = 4, index = 2
		bitstream => writing 14 over 4 bits
		bitstream => writing 2 over 4 bits

AC:
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 3 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
[acdc] block 0
DC:
	value = -8, magnitude = 4, index = 7
		bitstream => writing 14 over 4 bits
		bitstream => writing 7 over 4 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 4087, nb_bits = 12
		bitstream => writing 4087 over 12 bits
		bitstream => writing 10 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #4] Valeurs RGB initiales:
0cde30 2bda4c e7afd4 e0b2e4 a56436 2e83d4 f22082 b56442    
03656a 9f48e0 083617 e39444 5ee53c 6c4981 c12655 d70345    
db0667 d6fe34 638eea e099c7 ba6a4a b227ca 9fd28a bb1acf    
c81e3e 1db250 f73915 101ed8 1c8863 b94940 a37b3f 562017    
dd71d8 b543e7 5ab078 e840f0 173c8e 8a1f92 980913 38c39f    
eea4ea be681a 509ae8 bb76e0 881c96 51941b 4ea310 d87320    
e2e32c 14df4c e817a6 e6a6ce 6021e1 a32bef 893718 fe396e    
1ddb76 a01240 988471 6551eb a9a49c efb69e 34be5f 82d7ec    

[MCU #4] Conversion RGB -> YCbCr:
[Y]:
	8b 95 c4 c5 72 73 6a 78 
	48 73 25 a3 a9 5a 5a 4a 
	51 db 8c b3 7e 63 bb 5f 
	54 7a 6e 2f 63 69 80 2f 
	9d 78 90 86 3a 4c 35 95 
	c2 79 8d 97 4a 72 79 88 
	ce 92 66 be 4a 65 4c 7a 
	97 42 88 69 a5 c4 8a c0 

[Cb]:
	4c 57 89 91 5e b7 8e 61 
	93 bd 78 4b 42 96 7d 7d 
	8d 22 b5 8b 63 ba 65 bf 
	73 68 4e df 80 69 5b 72 
	a1 bf 73 bc af a7 6d 85 
	97 4a b3 a9 ab 4f 45 45 
	25 59 a4 89 d5 ce 63 79 
	6e 7f 73 ca 7b 6a 68 99 

[Cr]:
	25 34 99 93 a4 4f e1 ab 
	4f 9f 6c ae 4a 8d ca e5 
	e3 7c 63 a0 ab b8 6c c2 
	d2 3d e2 6a 4d b9 99 9c 
	ae ac 5a c6 67 ac c7 3d 
	9f b1 55 9a ac 68 61 b9 
	8e 26 dd 9d 90 ac ac de 
	29 c3 8c 7d 83 9e 43 54 

[MCU #4] Downsampling:
[Y]:
	8b 95 c4 c5 72 73 6a 78 
	48 73 25 a3 a9 5a 5a 4a 
	51 db 8c b3 7e 63 bb 5f 
	54 7a 6e 2f 63 69 80 2f 
	9d 78 90 86 3a 4c 35 95 
	c2 79 8d 97 4a 72 79 88 
	ce 92 66 be 4a 65 4c 7a 
	97 42 88 69 a5 c4 8a c0 

[Cb]:
	4c 57 89 91 5e b7 8e 61 
	93 bd 78 4b 42 96 7d 7d 
	8d 22 b5 8b 63 ba 65 bf 
	73 68 4e df 80 69 5b 72 
	a1 bf 73 bc af a7 6d 85 
	97 4a b3 a9 ab 4f 45 45 
	25 59 a4 89 d5 ce 63 79 
	6e 7f 73 ca 7b 6a 68 99 

[Cr]:
	25 34 99 93 a4 4f e1 ab 
	4f 9f 6c ae 4a 8d ca e5 
	e3 7c 63 a0 ab b8 6c c2 
	d2 3d e2 6a 4d b9 99 9c 
	ae ac 5a c6 67 ac c7 3d 
	9f b1 55 9a ac 68 61 b9 
	8e 26 dd 9d 90 ac ac de 
	29 c3 8c 7d 83 9e 43 54 

[MCU #4] DCT:
[Y]:
	ffdf 0045 0000 ffe2 0019 0021 fff6 ffd4 
	ffe2 0011 ffa7 ffdd ffd1 ffeb ff9c 0005 
	0052 ffdb ffd6 0011 0037 0001 001f fff5 
	0007 0055 0028 ffcf 0039 002d 003f ffdb 
	fff6 ffe2 000d fffa ffe6 ffed 005a 0032 
	000f 003a 000d fff8 ffca 001a ffef fffb 
	0065 ffec 000c ffe0 ffc7 0016 0008 0018 
	0038 0033 000f ffb7 0011 0008 fff9 ffd5 

[Cb]:
	000c fffb ff9a fff1 0023 000b 003c ffc7 
	ffea fff0 0058 0016 ffbb 0021 001e ffe3 
	ffe3 ffcf 0008 fff4 ffb5 fffc 0009 0003 
	0000 0028 ffc7 0023 ffe0 fff5 ffeb 002a 
	000c 0005 fff8 fffb 0021 0015 ffaa ffb7 
	ffdf ffb0 ff99 fffa 0009 0013 0027 000f 
	ffee 0008 fff7 ffda 0036 004b 003b 0021 
	0045 ffbe fff5 0013 ffe0 ffdf 003b fffe 

[Cr]:
	0077 ffb3 000a ffe1 000d 002c 001a ffe6 
	000d ffae 002c ffea 0013 003b ffe0 0014 
	ffc6 ffa4 ffbc ff97 ffe4 ffc6 ffd7 0021 
	fff9 ffd5 fff4 ffe0 0018 0022 ffa6 0024 
	ffbf 0023 ffc5 000e ff9d 0029 fff0 001b 
	001f ffd0 0005 ffea 002a 0039 0090 007d 
	ffe2 003c ffeb 0030 0047 ff9d ffd3 fffc 
	001f fffd ffdb 0038 0012 0028 ffe7 fff8 

[MCU #4] ZZ:
[Y]:
	ffdf 0045 ffe2 0052 0011 0000 ffe2 ffa7 
	ffdb 0007 fff6 0055 ffd6 ffdd 0019 0021 
	ffd1 0011 0028 ffe2 000f 0065 003a 000d 
	ffcf 0037 ffeb fff6 ffd4 ff9c 0001 0039 
	fffa 000d ffec 0038 0033 000c fff8 ffe6 
	002d 001f 0005 fff5 003f ffed ffca ffe0 
	000f ffb7 ffc7 001a 005a ffdb 0032 ffef 
	0016 0011 0008 0008 fffb 0018 fff9 ffd5 

[Cb]:
	000c fffb ffea ffe3 fff0 ff9a fff1 0058 
	ffcf 0000 000c 0028 0008 0016 0023 000b 
	ffbb fff4 ffc7 0005 ffdf ffee ffb0 fff8 
	0023 ffb5 0021 003c ffc7 001e fffc ffe0 
	fffb ff99 0008 0045 ffbe fff7 fffa 0021 
	fff5 0009 ffe3 0003 ffeb 0015 0009 ffda 
	fff5 0013 0036 0013 ffaa 002a ffb7 0027 
	004b ffe0 ffdf 003b 000f 0021 003b fffe 

[Cr]:
	0077 ffb3 000d ffc6 ffae 000a ffe1 002c 
	ffa4 fff9 ffbf ffd5 ffbc ffea 000d 002c 
	0013 ff97 fff4 0023 001f ffe2 ffd0 ffc5 
	ffe0 ffe4 003b 001a ffe6 ffe0 ffc6 0018 
	000e 0005 003c 001f fffd ffeb ffea ff9d 
	0022 ffd7 0014 0021 ffa6 0029 002a 0030 
	ffdb 0038 0047 0039 fff0 0024 001b 0090 
	ff9d 0012 0028 ffd3 007d fffc ffe7 fff8 

[MCU #4] Quantification:
[Y]:
	fffa 0017 fff6 0010 0002 0000 fffe fffc 
	fff7 0001 fffe 000e fffb fffe 0001 0001 
	fff5 0004 0008 fffc 0001 0005 0002 0000 
	fff4 000b fffd ffff fffe fffd 0000 0003 
	ffff 0001 ffff 0003 0002 0000 0000 ffff 
	0006 0002 0000 0000 0002 0000 ffff ffff 
	0001 fffd fffe 0001 0002 ffff 0001 0000 
	0001 0000 0000 0000 0000 0000 0000 ffff 

[Cb]:
	0002 ffff fffd fffe 0000 fffd 0000 0002 
	fff7 0000 0001 0002 0000 0000 0001 0000 
	fff7 ffff fffd 0000 ffff 0000 fffe 0000 
	0002 fffd 0001 0002 ffff 0001 0000 ffff 
	0000 fffd 0000 0002 fffe 0000 0000 0001 
	0000 0000 0000 0000 0000 0000 0000 ffff 
	0000 0000 0001 0000 fffe 0001 fffe 0001 
	0002 ffff ffff 0001 0000 0001 0001 0000 

[Cr]:
	0017 fff1 0001 fffc fffe 0000 ffff 0001 
	ffee ffff fff8 fffe fffe 0000 0000 0001 
	0002 fff3 0000 0001 0001 ffff ffff ffff 
	fffe ffff 0001 0000 0000 ffff ffff 0000 
	0000 0000 0002 0001 0000 0000 0000 fffd 
	0001 ffff 0000 0001 fffd 0001 0001 0001 
	ffff 0001 0002 0001 0000 0001 0000 0004 
	fffd 0000 0001 ffff 0004 0000 0000 0000 

[MCU #4] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -3, magnitude = 2, index = 0
		bitstream => writing 3 over 3 bits
		bitstream => writing 0 over 2 bits

AC:
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 123, nb_bits = 7
		bitstream => writing 123 over 7 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 5, magnitude = 3, index = 5
		bitstream => writing 6 over 3 bits
		bitstream => writing 5 over 3 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 113, huffman path = 122, nb_bits = 7
		bitstream => writing 122 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = 35, magnitude = 6, index = 35
		bitstream => writing 62 over 6 bits
		bitstream => writing 35 over 6 bits

AC:
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 0 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 2 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #5] Valeurs RGB initiales:
78888d 8dcef2 8bdad0 bb06aa 07ed59 dbcd0b c07270 f6a0f3    
3aae43 75031f 440685 aea6cd 8fae03 a69297 eaf07c 265cc5    
7c02b7 2590c7 666bcd ce41cc 02a45a ec85f3 b33f5e fef285    
f7c88e eee073 07a892 46c544 96bc7d abcc9b 83e823 e6a16c    
582cab 00ecc7 75c939 4d7f7c 34d92d adc16d 9dd8aa 2b63c9    
eef211 05e91e 6cd7c2 56962a 70e6c5 58a13b 392a57 cf7bec    
09190e 16afba 7a919e a6a57d f28e94 98743a 67d45b 487886    
efae00 f5d639 3af314 b09327 f12cab 6291fc 4d3aa0 ea2956    

[MCU #5] Conversion RGB -> YCbCr:
[Y]:
	84 bf c1 4f 97 bb 89 c3 
	7f 28 27 ad 91 99 e1 58 
	3b 76 75 7b 6b b0 65 e9 
	cf d8 75 90 a9 bd b3 b0 
	48 a1 9f 70 94 b1 c1 5e 
	d7 8e b5 77 bf 80 34 a1 
	13 83 8c a1 ad 78 a6 6b 
	ae cd a2 8f 75 8f 4b 68 

[Cb]:
	85 9d 88 b3 5d 1d 72 9b 
	5e 7b b5 92 30 7f 47 be 
	c6 ae b2 ae 76 a6 7c 47 
	5b 47 90 55 67 6d 2f 5a 
	b8 95 46 87 46 59 73 bc 
	10 41 88 55 83 59 94 aa 
	7d 9f 8a 6c 72 5d 56 8f 
	1e 2c 30 45 9e bd b0 76 

[Cr]:
	78 5d 59 cd 19 97 a7 a4 
	4f b7 95 81 7e 8a 86 5c 
	ae 46 76 bb 35 ab b7 8f 
	9c 90 31 4b 72 73 5e a7 
	8c 0d 62 67 3b 7d 66 5c 
	90 1f 4c 69 48 64 84 a1 
	79 33 73 84 b2 97 53 67 
	af 9c 36 97 d8 60 81 dd 

[MCU #5] Downsampling:
[Y]:
	84 bf c1 4f 97 bb 89 c3 
	7f 28 27 ad 91 99 e1 58 
	3b 76 75 7b 6b b0 65 e9 
	cf d8 75 90 a9 bd b3 b0 
	48 a1 9f 70 94 b1 c1 5e 
	d7 8e b5 77 bf 80 34 a1 
	13 83 8c a1 ad 78 a6 6b 
	ae cd a2 8f 75 8f 4b 68 

[Cb]:
	85 9d 88 b3 5d 1d 72 9b 
	5e 7b b5 92 30 7f 47 be 
	c6 ae b2 ae 76 a6 7c 47 
	5b 47 90 55 67 6d 2f 5a 
	b8 95 46 87 46 59 73 bc 
	10 41 88 55 83 59 94 aa 
	7d 9f 8a 6c 72 5d 56 8f 
	1e 2c 30 45 9e bd b0 76 

[Cr]:
	78 5d 59 cd 19 97 a7 a4 
	4f b7 95 81 7e 8a 86 5c 
	ae 46 76 bb 35 ab b7 8f 
	9c 90 31 4b 72 73 5e a7 
	8c 0d 62 67 3b 7d 66 5c 
	90 1f 4c 69 48 64 84 a1 
	79 33 73 84 b2 97 53 67 
	af 9c 36 97 d8 60 81 dd 

[MCU #5] DCT:
[Y]:
	0075 ffdc ffee 0011 ffdc ffc9 0001 fff5 
	000f ff93 0030 001f 0000 0017 0009 fff3 
	ffdd 001a fff2 ffec fffe 0005 0009 0000 
	0015 001a ffec 0000 fff0 ffeb 0015 004f 
	0053 004d 0034 0011 ffb1 ffd6 0000 fffa 
	0036 fff3 0013 ffcb fff8 ffb5 0003 ffff 
	001a 004b 0048 ffca 0027 ff96 007b fff3 
	ffc1 ffa7 ffcb ffb2 ffa6 ffe6 fffb fffa 

[Cb]:
	ffb1 fff0 0016 ffb2 0008 fff7 001c ffed 
	0039 0085 0012 ffb1 0014 0028 0015 ffd2 
	0007 ffcb ffeb fff2 fff6 fffc ffde 0001 
	fff3 fff3 0041 ff97 0036 fff7 ffcc 000c 
	ffcc ffe0 0010 002c 0028 0009 ffde fffe 
	fff4 005a ffe0 fffc 0002 fff4 fff7 0025 
	0015 ffd4 ffcd 002c ffe8 0020 ffd4 0029 
	0066 0069 0044 0028 001f 001a ffcb ffcc 

[Cr]:
	ffc8 ffbc 0032 0020 004d 0047 001a ffc5 
	000f 000a 0006 ffd4 ff91 0044 fff7 ffb2 
	005f fff6 ffd4 ffde 000f ffe1 ffc4 ffec 
	ffa0 ffe7 fff5 ffee ffee 0046 0032 fffa 
	fffd fffb 003b 0002 0031 ffe2 ffe5 ffe6 
	0001 ffef 0005 0011 001a 0007 0016 ffe6 
	001f ffce 0050 ffef 002c 005e 0000 ffd8 
	fffa fff8 ffcb 000c fff8 0069 003d fff3 

[MCU #5] ZZ:
[Y]:
	0075 ffdc 000f ffdd ff93 ffee 0011 0030 
	001a 0015 0053 001a fff2 001f ffdc ffc9 
	0000 ffec ffec 004d 0036 001a fff3 0034 
	0000 fffe 0017 0001 fff5 0009 0005 fff0 
	0011 0013 004b ffc1 ffa7 0048 ffcb ffb1 
	ffeb 0009 fff3 0000 0015 ffd6 fff8 ffca 
	ffcb ffb2 0027 ffb5 0000 004f fffa 0003 
	ff96 ffa6 ffe6 007b ffff fff3 fffb fffa 

[Cb]:
	ffb1 fff0 0039 0007 0085 0016 ffb2 0012 
	ffcb fff3 ffcc fff3 ffeb ffb1 0008 fff7 
	0014 fff2 0041 ffe0 fff4 0015 005a 0010 
	ff97 fff6 0028 001c ffed 0015 fffc 0036 
	002c ffe0 ffd4 0066 0069 ffcd fffc 0028 
	fff7 ffde ffd2 0001 ffcc 0009 0002 002c 
	0044 0028 ffe8 fff4 ffde 000c fffe fff7 
	0020 001f 001a ffd4 0025 0029 ffcb ffcc 

[Cr]:
	ffc8 ffbc 000f 005f 000a 0032 0020 0006 
	fff6 ffa0 fffd ffe7 ffd4 ffd4 004d 0047 
	ff91 ffde fff5 fffb 0001 001f ffef 003b 
	ffee 000f 0044 001a ffc5 fff7 ffe1 ffee 
	0002 0005 ffce fffa fff8 0050 0011 0031 
	0046 ffc4 ffb2 ffec 0032 ffe2 001a ffef 
	ffcb 000c 002c 0007 ffe5 fffa ffe6 0016 
	005e fff8 0069 0000 ffe6 ffd8 003d fff3 

[MCU #5] Quantification:
[Y]:
	0017 fff4 0005 fff9 fff1 ffff 0001 0002 
	0006 0005 0014 0004 ffff 0001 fffe fffd 
	0000 fffb fffc 000b 0004 0001 0000 0003 
	0000 0000 0003 0000 0000 0000 0000 0000 
	0003 0002 0006 fffd fffc 0002 ffff fffd 
	fffd 0000 0000 0000 0000 ffff 0000 ffff 
	fffd fffc 0001 fffe 0000 0002 0000 0000 
	fffc fffd 0000 0004 0000 0000 0000 0000 

[Cb]:
	fff1 fffd 0008 0000 0004 0000 fffe 0000 
	fff6 fffe fffa 0000 0000 fffe 0000 0000 
	0002 ffff 0003 ffff 0000 0000 0003 0000 
	fff9 0000 0001 0000 0000 0000 0000 0001 
	0001 ffff ffff 0003 0003 ffff 0000 0001 
	0000 ffff ffff 0000 ffff 0000 0000 0001 
	0002 0001 0000 0000 ffff 0000 0000 0000 
	0001 0001 0000 ffff 0001 0001 ffff ffff 

[Cr]:
	fff5 fff3 0002 0006 0000 0001 0001 0000 
	fffe fff0 0000 ffff ffff ffff 0002 0002 
	fff1 fffc 0000 0000 0000 0001 0000 0001 
	ffff 0000 0002 0000 ffff 0000 ffff 0000 
	0000 0000 ffff 0000 0000 0002 0000 0001 
	0002 fffe fffe 0000 0001 ffff 0000 0000 
	ffff 0000 0001 0000 0000 0000 0000 0000 
	0003 0000 0003 0000 0000 ffff 0002 0000 

[MCU #5] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 29, magnitude = 5, index = 29
		bitstream => writing 6 over 3 bits
		bitstream => writing 29 over 5 bits

AC:
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 82, huffman path = 2039, nb_bits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -17, magnitude = 5, index = 14
		bitstream => writing 30 over 5 bits
		bitstream => writing 14 over 5 bits

AC:
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 5 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -34, magnitude = 6, index = 29
		bitstream => writing 62 over 6 bits
		bitstream => writing 29 over 6 bits

AC:
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 2 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 0 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 82, huffman path = 1017, nb_bits = 10
		bitstream => writing 1017 over 10 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #6] Valeurs RGB initiales:
cb9213 4d4878 8fc000 1c4dce 0ed8a9 de93af 899b9c e27669    
a71eeb fcf5ee 412f9d 84a4a0 a3e9a6 28974c f526fb f8cc8d    
c89157 524d71 21c973 d8ee03 a0556f 6d23b0 392555 9311da    
2644e7 669a07 7d92cf 0b80af 7f8757 11cd1c 5563d8 d20ea5    
bdfbd3 d03496 6f8cc2 1a8cae e20178 1b4ff7 9783d0 c43092    
eaca8f fba202 1b90f5 2c95de 4a01b6 0c574c 37c832 fc20d4    
3801be 50fff7 be0910 cc1fbf 879950 253ff5 a23183 37caf8    
885d15 e7dfec d3ce9a d3c370 0cfd63 21aef7 489f23 f301b4    

[MCU #6] Conversion RGB -> YCbCr:
[Y]:
	95 4f 9b 4d 96 ad 96 95 
	5e f6 41 9a cc 6d 7c d2 
	9b 53 8d cd 6e 49 30 4f 
	4e 7a 93 62 7f 81 6c 5a 
	e4 6e 89 6e 52 53 92 67 
	cd aa 79 7e 2b 3f 8c 76 
	27 ca 40 65 8b 4c 5c a3 
	62 e3 ca be a3 8c 77 5e 

[Cb]:
	37 97 28 c9 8b 81 84 67 
	cf 7b b4 83 6a 6d c8 59 
	5a 91 71 0e 80 ba 95 cf 
	d7 3f a2 ab 69 47 bd aa 
	76 97 a0 a4 96 dd a3 98 
	5d 21 c6 b6 ce 87 4d b5 
	d5 9a 65 b3 5f df 96 b0 
	55 85 65 54 5c bc 51 b1 

[Cr]:
	a7 7f 77 5d 1f a3 77 b7 
	b4 84 80 70 62 4f d6 9b 
	a0 80 33 88 a3 9a 86 b1 
	64 72 71 42 80 30 6f d6 
	64 c6 6d 44 e7 58 84 c2 
	95 ba 3d 46 96 5b 44 df 
	8c 29 da c9 7d 64 b2 33 
	9b 83 87 8f 14 34 5f ea 

[MCU #6] Downsampling:
[Y]:
	95 4f 9b 4d 96 ad 96 95 
	5e f6 41 9a cc 6d 7c d2 
	9b 53 8d cd 6e 49 30 4f 
	4e 7a 93 62 7f 81 6c 5a 
	e4 6e 89 6e 52 53 92 67 
	cd aa 79 7e 2b 3f 8c 76 
	27 ca 40 65 8b 4c 5c a3 
	62 e3 ca be a3 8c 77 5e 

[Cb]:
	37 97 28 c9 8b 81 84 67 
	cf 7b b4 83 6a 6d c8 59 
	5a 91 71 0e 80 ba 95 cf 
	d7 3f a2 ab 69 47 bd aa 
	76 97 a0 a4 96 dd a3 98 
	5d 21 c6 b6 ce 87 4d b5 
	d5 9a 65 b3 5f df 96 b0 
	55 85 65 54 5c bc 51 b1 

[Cr]:
	a7 7f 77 5d 1f a3 77 b7 
	b4 84 80 70 62 4f d6 9b 
	a0 80 33 88 a3 9a 86 b1 
	64 72 71 42 80 30 6f d6 
	64 c6 6d 44 e7 58 84 c2 
	95 ba 3d 46 96 5b 44 df 
	8c 29 da c9 7d 64 b2 33 
	9b 83 87 8f 14 34 5f ea 

[MCU #6] DCT:
[Y]:
	fffe 0048 000f ffd7 000a ffdb ffd0 fff7 
	0009 ffc5 fff8 002a 0032 0004 0032 0019 
	0051 ffc6 ffd1 fff1 ffea ff9e ffe2 fff3 
	fff9 ffe4 008a 002e fff9 0029 000f 0022 
	001f fff8 ffe1 002b ffb9 0031 0052 0040 
	ffa7 ffc9 ffde 0000 ffe8 ffeb 0029 0010 
	fffc 0056 fff6 0004 0005 0085 0051 000b 
	ffdf 0014 ffff 000a 0033 0033 0024 000e 

[Cb]:
	0057 ffb5 000e 0005 0008 0017 0030 ffdc 
	ffe1 0014 0005 0002 ffe8 0028 ff9f 002f 
	ffbe 000c fffa 001f ffeb ffd8 ffcf ffab 
	0020 000b ff74 ffed 0038 0018 ffe5 ffe1 
	ffe0 fff8 ffe6 fff2 0003 0003 ffce ffd0 
	0004 fff6 0023 0007 003b 001c ffe2 ffd3 
	ffac ffa5 ffc4 ffd5 000c ff7e 001a 0010 
	001a ffce 0016 0040 ffa7 ff9e ffee ffa7 

[Cr]:
	0005 ffde 0094 ffc1 004b ffe1 fff2 0017 
	000f ffdc 0031 0047 ffe1 fffe fffe ffee 
	fffc 002d 0020 ffdd ffd6 00a0 004a ffbe 
	0007 0011 fffc 001d ffe1 ffc5 0005 000a 
	ffde fff0 003f ffbb fffa ffba 001a fff1 
	ffdf 0000 ffb8 0004 fff3 004a 003e 0000 
	fff5 fff0 004b 001f 0037 ff90 0015 ff99 
	0033 fffe ffa2 0036 ffec 0017 fff9 0005 

[MCU #6] ZZ:
[Y]:
	fffe 0048 0009 0051 ffc5 000f ffd7 fff8 
	ffc6 fff9 001f ffe4 ffd1 002a 000a ffdb 
	0032 fff1 008a fff8 ffa7 fffc ffc9 ffe1 
	002e ffea 0004 ffd0 fff7 0032 ff9e fff9 
	002b ffde 0056 ffdf 0014 fff6 0000 ffb9 
	0029 ffe2 0019 fff3 000f 0031 ffe8 0004 
	ffff 000a 0005 ffeb 0052 0022 0040 0029 
	0085 0033 0033 0051 0010 000b 0024 000e 

[Cb]:
	0057 ffb5 ffe1 ffbe 0014 000e 0005 0005 
	000c 0020 ffe0 000b fffa 0002 0008 0017 
	ffe8 001f ff74 fff8 0004 ffac fff6 ffe6 
	ffed ffeb 0028 0030 ffdc ff9f ffd8 0038 
	fff2 0023 ffa5 001a ffce ffc4 0007 0003 
	0018 ffcf 002f ffab ffe5 0003 003b ffd5 
	0016 0040 000c 001c ffce ffe1 ffd0 ffe2 
	ff7e ffa7 ff9e 001a ffd3 0010 ffee ffa7 

[Cr]:
	0005 ffde 000f fffc ffdc 0094 ffc1 0031 
	002d 0007 ffde 0011 0020 0047 004b ffe1 
	ffe1 ffdd fffc fff0 ffdf fff5 0000 003f 
	001d ffd6 fffe fff2 0017 fffe 00a0 ffe1 
	ffbb ffb8 fff0 0033 fffe 004b 0004 fffa 
	ffc5 004a ffee ffbe 0005 ffba fff3 001f 
	ffa2 0036 0037 004a 001a 000a fff1 003e 
	ff90 ffec 0017 0015 0000 ff99 fff9 0005 

[MCU #6] Quantification:
[Y]:
	0000 0018 0003 0010 fff8 0001 fffe 0000 
	fff2 ffff 0007 fffc fffb 0002 0000 fffe 
	000c fffd 001b ffff fff9 0000 fffe ffff 
	000b fffc 0000 fffb 0000 0001 fffc 0000 
	0008 fffc 0007 ffff 0001 0000 0000 fffd 
	0005 fffe 0001 0000 0000 0001 0000 0000 
	0000 0000 0000 0000 0002 0000 0001 0001 
	0006 0001 0001 0002 0000 0000 0001 0000 

[Cb]:
	0011 fff1 fffc fffc 0000 0000 0000 0000 
	0002 0005 fffc 0000 0000 0000 0000 0000 
	fffd 0003 fff8 0000 0000 fffe 0000 0000 
	ffff ffff 0001 0001 ffff fffd ffff 0001 
	0000 0001 fffd 0000 ffff fffe 0000 0000 
	0000 ffff 0001 fffe 0000 0000 0001 ffff 
	0000 0002 0000 0000 ffff ffff ffff ffff 
	fffc fffe fffd 0000 ffff 0000 0000 fffe 

[Cr]:
	0001 fffa 0002 0000 ffff 0004 fffe 0001 
	0009 0001 fffc 0000 0001 0002 0002 ffff 
	fffc fffc 0000 0000 ffff 0000 0000 0002 
	0002 fffe 0000 0000 0000 0000 0005 ffff 
	fffe fffe 0000 0001 0000 0002 0000 0000 
	ffff 0002 0000 fffe 0000 fffe 0000 0001 
	fffd 0001 0001 0002 0000 0000 0000 0002 
	fffd 0000 0000 0000 0000 fffd 0000 0000 

[MCU #6] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -23, magnitude = 5, index = 8
		bitstream => writing 6 over 3 bits
		bitstream => writing 8 over 5 bits

AC:
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 98, huffman path = 4086, nb_bits = 12
		bitstream => writing 4086 over 12 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = 32, magnitude = 6, index = 32
		bitstream => writing 62 over 6 bits
		bitstream => writing 32 over 6 bits

AC:
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 0 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 82, huffman path = 1017, nb_bits = 10
		bitstream => writing 1017 over 10 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 14 over 4 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 67, huffman path = 65431, nb_bits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #7] Valeurs RGB initiales:
ee36db 5e2d7b 51f80d 644555 dcd415 ddf063 abfe3b 54dccf    
8fb67d 0bdcda d183f8 bc7fed abc01c 4844c0 e8e8a9 8e1041    
87c519 e5c30b 6a8b9d c1ddea 32ffb3 a5d7a1 a877f6 17e519    
6d918d 90772f fc9e73 e3040e ea81a0 b98c20 690ba7 c01c75    
32cd6a dcf8cd a5b5c9 7885fd 0ef589 d00f16 7ff117 f70c66    
3759fe 8f2879 7b1343 0a0ee5 0c2975 01550b e0a00c 96ac64    
7131cc cd7944 53b145 110245 08c04e 188d6d d71406 273945    
ef4fee 8f3918 e6c175 fba955 e77c23 8150e7 f25ce4 557d92    

[MCU #7] Conversion RGB -> YCbCr:
[Y]:
	80 45 ab 50 c1 da cf b2 
	a4 9d a8 9e a7 53 e1 3b 
	9f b8 83 d6 b9 c2 94 90 
	86 76 b5 48 a4 8d 39 57 
	93 eb b2 8f a4 4a b6 5d 
	62 50 38 25 29 33 a2 9d 
	56 8c 89 0e 7c 66 4d 35 
	91 4f c3 b8 92 70 98 73 

[Cb]:
	b3 9f 27 83 1f 3d 2d 90 
	6a a2 ad ad 32 bd 61 83 
	34 1e 8f 8b 7d 6d b7 3d 
	84 58 5b 5f 7e 42 be 91 
	69 6f 8d be 71 63 26 85 
	d8 97 86 ec ab 69 2b 60 
	c3 57 5a 9f 66 84 58 89 
	b5 61 54 48 41 c3 ab 91 

[Cr]:
	cf 92 40 8e 94 82 66 3d 
	71 18 9d 96 83 78 85 bb 
	6f a0 6e 71 20 6b 8e 2a 
	6e 92 b2 ef b2 9f a2 cb 
	3b 75 76 70 15 e0 59 ee 
	62 ad b0 6d 6b 5c ac 7b 
	93 ae 5a 82 2d 48 e3 76 
	c3 ae 99 b0 bd 8c c0 6a 

[MCU #7] Downsampling:
[Y]:
	80 45 ab 50 c1 da cf b2 
	a4 9d a8 9e a7 53 e1 3b 
	9f b8 83 d6 b9 c2 94 90 
	86 76 b5 48 a4 8d 39 57 
	93 eb b2 8f a4 4a b6 5d 
	62 50 38 25 29 33 a2 9d 
	56 8c 89 0e 7c 66 4d 35 
	91 4f c3 b8 92 70 98 73 

[Cb]:
	b3 9f 27 83 1f 3d 2d 90 
	6a a2 ad ad 32 bd 61 83 
	34 1e 8f 8b 7d 6d b7 3d 
	84 58 5b 5f 7e 42 be 91 
	69 6f 8d be 71 63 26 85 
	d8 97 86 ec ab 69 2b 60 
	c3 57 5a 9f 66 84 58 89 
	b5 61 54 48 41 c3 ab 91 

[Cr]:
	cf 92 40 8e 94 82 66 3d 
	71 18 9d 96 83 78 85 bb 
	6f a0 6e 71 20 6b 8e 2a 
	6e 92 b2 ef b2 9f a2 cb 
	3b 75 76 70 15 e0 59 ee 
	62 ad b0 6d 6b 5c ac 7b 
	93 ae 5a 82 2d 48 e3 76 
	c3 ae 99 b0 bd 8c c0 6a 

[MCU #7] DCT:
[Y]:
	0026 0016 ffef 0010 ffcb 0009 ffea 0069 
	008f ffda ffdf 0033 ffff 0009 fffe 0002 
	0018 ffb6 ffe7 000f 0001 003a 002c 0023 
	ffa6 ffb4 0066 0000 ffd6 fff3 ffea 002c 
	0049 0000 ffd4 fff5 0004 fffd 003e 0025 
	ffaf ffda fff7 0032 fff1 ff9a 0077 fffd 
	0022 ff95 0026 fffa 0038 001e 001c ffbe 
	0068 001c ffdc 0005 ffed ffde ffd5 ffe0 

[Cb]:
	ffc6 002a 0015 fffb 0044 0046 001e ffb3 
	ffc9 ffff fff8 ffb9 ffd2 fff8 ffdf fff0 
	fffb 000c 006d 0035 ffe2 fff9 0024 ffae 
	0011 009a fff9 ffda 007c ffc1 0001 ffa7 
	ffce ffe1 006a 0006 0009 ffe5 ffe8 0004 
	ffd1 ffed 003a 0022 003d 0018 ffc9 0036 
	fff0 000e ffe2 001c 0012 0015 ffdd 0028 
	ffc2 ffea ffd2 ffe7 0004 000b 0015 fffd 

[Cr]:
	002e fff6 0020 ffdf ffdd 003d ffdf ffd2 
	ffc1 0000 ffd5 001c 003d fffc 003c fff2 
	0005 005a 0001 006d 0035 002b ffbd 0045 
	ffd2 fff3 002b 0001 fffb ffda 0015 fff1 
	0063 fff7 ffd3 002a 0039 ffcc 002a ffcd 
	0010 0048 000b 001d fff9 001e ff90 fffa 
	ffe6 0069 ffee 0032 ffc6 ffed ffd0 0013 
	ff8d 000c 0051 002a ffc0 0001 0007 ffa8 

[MCU #7] ZZ:
[Y]:
	0026 0016 008f 0018 ffda ffef 0010 ffdf 
	ffb6 ffa6 0049 ffb4 ffe7 0033 ffcb 0009 
	ffff 000f 0066 0000 ffaf 0022 ffda ffd4 
	0000 0001 0009 ffea 0069 fffe 003a ffd6 
	fff5 fff7 ff95 0068 001c 0026 0032 0004 
	fff3 002c 0002 0023 ffea fffd fff1 fffa 
	ffdc 0005 0038 ff9a 003e 002c 0025 0077 
	001e ffed ffde 001c fffd ffbe ffd5 ffe0 

[Cb]:
	ffc6 002a ffc9 fffb ffff 0015 fffb fff8 
	000c 0011 ffce 009a 006d ffb9 0044 0046 
	ffd2 0035 fff9 ffe1 ffd1 fff0 ffed 006a 
	ffda ffe2 fff8 001e ffb3 ffdf fff9 007c 
	0006 003a 000e ffc2 ffea ffe2 0022 0009 
	ffc1 0024 fff0 ffae 0001 ffe5 003d 001c 
	ffd2 ffe7 0012 0018 ffe8 ffa7 0004 ffc9 
	0015 0004 000b ffdd 0036 0028 0015 fffd 

[Cr]:
	002e fff6 ffc1 0005 0000 0020 ffdf ffd5 
	005a ffd2 0063 fff3 0001 001c ffdd 003d 
	003d 006d 002b fff7 0010 ffe6 0048 ffd3 
	0001 0035 fffc ffdf ffd2 003c 002b fffb 
	002a 000b 0069 ff8d 000c ffee 001d 0039 
	ffda ffbd fff2 0045 0015 ffcc fff9 0032 
	0051 002a ffc6 001e 002a fff1 ffcd ff90 
	ffed ffc0 0001 ffd0 fffa 0013 0007 ffa8 

[MCU #7] Quantification:
[Y]:
	0007 0007 002f 0004 fffb ffff 0001 ffff 
	ffee ffea 0012 fff4 fffd 0003 fffe 0000 
	0000 0003 0014 0000 fffa 0002 ffff fffe 
	0000 0000 0001 fffe 0007 0000 0002 fffe 
	fffe ffff fff7 0006 0001 0001 0001 0000 
	ffff 0004 0000 0001 0000 0000 0000 0000 
	fffe 0000 0002 fffd 0002 0001 0001 0003 
	0001 0000 ffff 0000 0000 fffe ffff ffff 

[Cb]:
	fff5 0008 fff9 0000 0000 0000 0000 0000 
	0002 0002 fffa 0007 0003 fffe 0002 0002 
	fffa 0006 0000 ffff ffff 0000 0000 0003 
	fffe ffff 0000 0001 fffe ffff 0000 0004 
	0000 0001 0000 fffe 0000 ffff 0001 0000 
	fffe 0001 0000 fffe 0000 0000 0002 0000 
	ffff 0000 0000 0000 0000 fffe 0000 ffff 
	0000 0000 0000 ffff 0001 0001 0000 0000 

[Cr]:
	0009 fffe fff7 0000 0000 0001 ffff ffff 
	0012 fff9 000c 0000 0000 0000 ffff 0002 
	0008 000d 0002 0000 0000 0000 0002 ffff 
	0000 0002 0000 ffff ffff 0002 0001 0000 
	0001 0000 0003 fffd 0000 0000 0000 0001 
	ffff fffe 0000 0002 0000 ffff 0000 0001 
	0002 0001 ffff 0001 0001 0000 ffff fffd 
	0000 fffe 0000 ffff 0000 0000 0000 fffe 

[MCU #7] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 7, magnitude = 3, index = 7
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits

AC:
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 47, magnitude = 6, index = 47
	RLE code = 6, huffman path = 120, nb_bits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 47 over 6 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 1016, nb_bits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -28, magnitude = 5, index = 3
		bitstream => writing 30 over 5 bits
		bitstream => writing 3 over 5 bits

AC:
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 82, huffman path = 1017, nb_bits = 10
		bitstream => writing 1017 over 10 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = 8, magnitude = 4, index = 8
		bitstream => writing 14 over 4 bits
		bitstream => writing 8 over 4 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 12 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 13 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
[MCU #8] Valeurs RGB initiales:
4cc531 6fb833 23a782 1237bb 2a1d7c 9f1825 f4ffa2 1880f2    
7d1560 d44a27 e5a805 da4b77 514ba2 40a829 bfe2fe cc6c6e    
d7b7b4 00c4cf 143d97 646ead 32fe3b 3bd13f 4d5327 b1903b    
aa983f 663bb9 9265fa 62153d 101bc1 e9ccad a0b63e 4e3d06    
f8abb5 6f75b9 6a03f4 f77027 018800 2802bc b91a62 dd5458    
18127c e6ae97 4d8245 4e1787 116e19 50a25c e707a9 92cc14    
664601 f4c23c c71867 f1b79c c24137 21bce0 a0f6ac edafdd    
807b1f 7bbaea eb52f1 92846b 910b38 88df04 64afac 710e23    

[MCU #8] Conversion RGB -> YCbCr:
[Y]:
	90 93 7b 3b 2c 42 f1 6e 
	3d 6f a8 7b 57 7a db 89 
	c0 8b 3b 72 ab 94 4c 90 
	93 56 83 31 2b d1 a2 3c 
	c3 7b 3d 90 50 23 52 7d 
	20 bc 6b 34 49 82 5c a6 
	48 c2 55 c5 66 92 d4 c7 
	72 ad 92 85 38 ac 98 2e 

[Cb]:
	4a 4a 84 c8 ad 70 53 cb 
	94 57 24 7e aa 52 94 71 
	79 a7 b4 a1 41 50 6b 50 
	50 b8 c3 87 d5 6c 48 62 
	78 a3 e7 45 53 d7 89 6b 
	b4 6b 6a af 65 6b ab 2e 
	58 35 8a 69 65 ac 6a 8d 
	51 a3 b6 71 80 21 8b 7a 

[Cr]:
	50 66 41 63 7f c2 82 43 
	ae c8 ac c4 7c 56 6c b0 
	90 1d 64 76 2a 41 81 97 
	90 8b 8a a3 6d 91 7f 8d 
	a6 77 a0 c9 48 84 ca c4 
	7a 9e 6a 92 58 5d e3 72 
	96 a4 d1 9f c1 30 5b 9b 
	8a 5d c0 89 bf 66 5b b0 

[MCU #8] Downsampling:
[Y]:
	90 93 7b 3b 2c 42 f1 6e 
	3d 6f a8 7b 57 7a db 89 
	c0 8b 3b 72 ab 94 4c 90 
	93 56 83 31 2b d1 a2 3c 
	c3 7b 3d 90 50 23 52 7d 
	20 bc 6b 34 49 82 5c a6 
	48 c2 55 c5 66 92 d4 c7 
	72 ad 92 85 38 ac 98 2e 

[Cb]:
	4a 4a 84 c8 ad 70 53 cb 
	94 57 24 7e aa 52 94 71 
	79 a7 b4 a1 41 50 6b 50 
	50 b8 c3 87 d5 6c 48 62 
	78 a3 e7 45 53 d7 89 6b 
	b4 6b 6a af 65 6b ab 2e 
	58 35 8a 69 65 ac 6a 8d 
	51 a3 b6 71 80 21 8b 7a 

[Cr]:
	50 66 41 63 7f c2 82 43 
	ae c8 ac c4 7c 56 6c b0 
	90 1d 64 76 2a 41 81 97 
	90 8b 8a a3 6d 91 7f 8d 
	a6 77 a0 c9 48 84 ca c4 
	7a 9e 6a 92 58 5d e3 72 
	96 a4 d1 9f c1 30 5b 9b 
	8a 5d c0 89 bf 66 5b b0 

[MCU #8] DCT:
[Y]:
	ffcc ffe9 0065 0002 ff98 0024 ffcd ffcc 
	fff2 fff6 002b 001a 000b 0030 000d 005f 
	0037 ffe0 fff6 ffca ffa1 0030 ffbc 000e 
	ffd7 ffe6 0044 ffa3 0000 ffea ffc3 000f 
	ffc7 0058 0025 0038 ffdd 0061 0017 001d 
	0026 ffd4 001c 002b ffe0 0002 fffb fff2 
	ffd4 0038 0013 002d 000e ffa6 001d 0002 
	0026 0033 0018 0007 00a6 fffc ffbf ffeb 

[Cb]:
	ffe7 0020 ffc3 ffc5 ffee 0009 0002 001e 
	000b fff0 ffe5 0000 005a ffe8 ffe9 ffe8 
	ffd7 ffa8 000a ffd9 0070 0009 ffe0 0005 
	0016 ffbd fffe 0040 001a 0032 0035 ffdc 
	0038 0000 ffd9 ffaf ffdb ff9b 001d 0023 
	0000 ffea ffbd ffd0 0023 ffd8 0031 ffeb 
	0009 004d 0000 ffc7 fffc 003c ffd0 ffed 
	0004 ffed 0022 ffd9 ffa9 0004 0065 ffdb 

[Cr]:
	002f 000b 001b ffb1 002a 003d fff9 0001 
	ffbe ffea 000e 003e ffe1 0013 0003 ffb1 
	ffeb 0018 ffb7 0019 0012 ff9d 0014 0031 
	0015 ffe9 fff6 0030 ffaf 000e ffb2 ffe0 
	000c ffca ffd7 0039 ffe9 fff7 0031 ffe6 
	ffbd 0002 ffd6 002f fff2 ffdc 0004 0012 
	ff8a ffa9 0015 0044 ffdc 003b fff8 0000 
	ffe1 ffe4 0011 ffee 0020 0025 0029 0013 

[MCU #8] ZZ:
[Y]:
	ffcc ffe9 fff2 0037 fff6 0065 0002 002b 
	ffe0 ffd7 ffc7 ffe6 fff6 001a ff98 0024 
	000b ffca 0044 0058 0026 ffd4 ffd4 0025 
	ffa3 ffa1 0030 ffcd ffcc 000d 0030 0000 
	0038 001c 0038 0026 0033 0013 002b ffdd 
	ffea ffbc 005f 000e ffc3 0061 ffe0 002d 
	0018 0007 000e 0002 0017 000f 001d fffb 
	ffa6 00a6 fffc 001d fff2 0002 ffbf ffeb 

[Cb]:
	ffe7 0020 000b ffd7 fff0 ffc3 ffc5 ffe5 
	ffa8 0016 0038 ffbd 000a 0000 ffee 0009 
	005a ffd9 fffe 0000 0000 0009 ffea ffd9 
	0040 0070 ffe8 0002 001e ffe9 0009 001a 
	ffaf ffbd 004d 0004 ffed 0000 ffd0 ffdb 
	0032 ffe0 ffe8 0005 0035 ff9b 0023 ffc7 
	0022 ffd9 fffc ffd8 001d ffdc 0023 0031 
	003c ffa9 0004 ffd0 ffeb ffed 0065 ffdb 

[Cr]:
	002f 000b ffbe ffeb ffea 001b ffb1 000e 
	0018 0015 000c ffe9 ffb7 003e 002a 003d 
	ffe1 0019 fff6 ffca ffbd ff8a 0002 ffd7 
	0030 0012 0013 fff9 0001 0003 ff9d ffaf 
	0039 ffd6 ffa9 ffe1 ffe4 0015 002f ffe9 
	000e 0014 ffb1 0031 ffb2 fff7 fff2 0044 
	0011 ffee ffdc ffdc 0031 ffe0 ffe6 0004 
	003b 0020 0025 fff8 0012 0000 0029 0013 

[MCU #8] Quantification:
[Y]:
	fff6 fff9 fffc 000b ffff 0008 0000 0002 
	fff8 fff6 fff2 fffc ffff 0001 fffb 0002 
	0002 fff3 000d 000c 0003 fffe fffe 0002 
	ffe9 ffed 0006 fffb fffd 0000 0002 0000 
	000b 0004 0005 0002 0002 0000 0001 ffff 
	fffd fffa 0005 0000 fffe 0003 0000 0001 
	0001 0000 0000 0000 0000 0000 0000 0000 
	fffc 0005 0000 0001 0000 0000 fffe 0000 

[Cb]:
	fffb 0006 0001 fffe 0000 fffe ffff 0000 
	ffef 0003 0007 fffd 0000 0000 0000 0000 
	000c fffc 0000 0000 0000 0000 0000 ffff 
	0004 0005 0000 0000 0001 0000 0000 0000 
	fffe fffe 0002 0000 0000 0000 ffff ffff 
	0001 ffff 0000 0000 0001 fffd 0001 ffff 
	0001 ffff 0000 ffff 0000 ffff 0001 0001 
	0002 fffe 0000 ffff 0000 0000 0003 ffff 

[Cr]:
	0009 0002 fff7 ffff 0000 0000 fffe 0000 
	0004 0003 0001 ffff fffe 0002 0001 0002 
	fffc 0003 0000 ffff fffe fffd 0000 ffff 
	0003 0000 0000 0000 0000 0000 fffd fffe 
	0001 ffff fffe ffff 0000 0000 0001 0000 
	0000 0000 fffe 0001 fffe 0000 0000 0002 
	0000 0000 ffff ffff 0001 ffff 0000 0000 
	0001 0001 0001 0000 0000 0000 0001 0000 

[MCU #8] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -17, magnitude = 5, index = 14
		bitstream => writing 6 over 3 bits
		bitstream => writing 14 over 5 bits

AC:
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 8 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 115, huffman path = 65454, nb_bits = 16
		bitstream => writing 65454 over 16 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = 6, magnitude = 3, index = 6
		bitstream => writing 6 over 3 bits
		bitstream => writing 6 over 3 bits

AC:
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 21, huffman path = 2038, nb_bits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 14 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 68, huffman path = 65432, nb_bits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 12 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 82, huffman path = 1017, nb_bits = 10
		bitstream => writing 1017 over 10 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #9] Valeurs RGB initiales:
ff724e e3c8cc 761491 a7844a daa7f1 5cb928 17e345 94835d    
4b0d47 b2da19 a8572e 092b79 301121 35eb6c ac3cb7 4e7d60    
1b6294 32215f fff817 b3f8db 830c19 1a7187 c7a385 02de57    
278266 297e75 08280d 478e49 0021ae fa83c3 3793df f87cab    
bb2e14 5dcfa3 08c74e be37c4 77a1c7 6c9838 939ac0 93c2c2    
aec042 43ab80 10c392 8ca941 23f7c3 6945da f05748 09a7ea    
4b92f3 cc6280 fbc9c6 fcbd88 3884a1 9f7558 3c3799 735856    
7a5dea 7a67c6 6ee741 8e63fc 784e4e 6ae1d2 d572de 0efbbd    

[MCU #9] Conversion RGB -> YCbCr:
[Y]:
	98 d1 40 88 bf 8d 94 84 
	26 b8 6b 2a 1c a6 6c 6c 
	52 2d e0 e0 31 59 aa 8d 
	64 64 1b 71 27 ae 80 a6 
	55 a8 80 6f 99 80 9c b4 
	ac 87 88 94 b2 61 83 7f 
	88 85 d8 ca 71 7e 44 60 
	76 78 b0 81 5b bc 9c ad 

[Cb]:
	56 7d ae 5d 9c 47 53 6a 
	93 26 5e ad 83 5f ab 79 
	a5 9c 0e 7d 72 9a 6b 62 
	81 8a 78 69 cc 8c b6 83 
	5b 7d 64 b0 9a 57 94 88 
	44 7c 86 51 8a c4 5f bc 
	bc 7d 76 5b 9b 6a b0 7a 
	c2 ac 41 c5 79 8d a5 89 

[Cr]:
	c9 8d a7 96 93 5d 27 8c 
	9a 7c ac 69 8e 2f ae 6b 
	58 83 96 60 ba 53 94 1d 
	55 56 72 62 64 b6 4c ba 
	c9 4b 2a b8 68 72 79 69 
	81 4f 2a 7a 1a 86 ce 2c 
	55 b3 99 a4 58 97 7b 8e 
	83 82 51 89 95 46 a9 0f 

[MCU #9] Downsampling:
[Y]:
	98 d1 40 88 bf 8d 94 84 
	26 b8 6b 2a 1c a6 6c 6c 
	52 2d e0 e0 31 59 aa 8d 
	64 64 1b 71 27 ae 80 a6 
	55 a8 80 6f 99 80 9c b4 
	ac 87 88 94 b2 61 83 7f 
	88 85 d8 ca 71 7e 44 60 
	76 78 b0 81 5b bc 9c ad 

[Cb]:
	56 7d ae 5d 9c 47 53 6a 
	93 26 5e ad 83 5f ab 79 
	a5 9c 0e 7d 72 9a 6b 62 
	81 8a 78 69 cc 8c b6 83 
	5b 7d 64 b0 9a 57 94 88 
	44 7c 86 51 8a c4 5f bc 
	bc 7d 76 5b 9b 6a b0 7a 
	c2 ac 41 c5 79 8d a5 89 

[Cr]:
	c9 8d a7 96 93 5d 27 8c 
	9a 7c ac 69 8e 2f ae 6b 
	58 83 96 60 ba 53 94 1d 
	55 56 72 62 64 b6 4c ba 
	c9 4b 2a b8 68 72 79 69 
	81 4f 2a 7a 1a 86 ce 2c 
	55 b3 99 a4 58 97 7b 8e 
	83 82 51 89 95 46 a9 0f 

[MCU #9] DCT:
[Y]:
	000d ffe1 0007 ffc8 ffcf 0008 0008 ffc3 
	ffc4 ffdd 0022 001a ffdd ffe5 ffc1 ffdc 
	0029 0034 ffef 0018 ffe0 ffe1 0006 0000 
	0038 0043 fff9 004e 003d ff9a ffa7 0031 
	0020 ffb1 003c 004d 000d ffc2 ffd7 ffe4 
	000d 002b ffdb 0009 004f 003a 0006 ffe5 
	0046 fff7 ffee fff0 0046 004b ffee 003d 
	003d 0017 ffbe ffa8 000a 0027 0002 002f 

[Cb]:
	0008 ffde 0004 0033 002f 0000 ffc5 000a 
	ffb8 0009 ffd4 ffeb 000b 0005 0009 0024 
	fffa 0036 0013 fff3 000f 0029 0009 0006 
	ffdb ffe3 ffd5 ff9e ffdc ffc3 0043 0042 
	001e 0019 ffdd ffd1 fffe fff4 ffd3 0013 
	0006 001f 0015 001e ffd1 ffc0 000e 0047 
	ffec 0009 0004 0008 ffdf ffa6 0023 ffab 
	ffdd 0035 000d 0005 0015 000d ffd1 ffe6 

[Cr]:
	ffbb 002d fff5 001d 0005 0043 ffd4 0008 
	0025 002d 0005 ffd4 0031 ffc3 003f 0053 
	002a 005b ffef ffd8 fffc ffea ffd9 0038 
	000a 000b 0041 0009 002d 003a 0027 ffa9 
	0003 0010 0006 0018 0066 ffe6 0034 ffd6 
	001f ffe4 ffef ffc0 ffe0 ff9a 005a ffc1 
	ffc2 0014 ffe1 0047 ffe8 0026 ffcf 001c 
	0022 003c ffd6 ffff 0027 fff2 ffe7 0005 

[MCU #9] ZZ:
[Y]:
	000d ffe1 ffc4 0029 ffdd 0007 ffc8 0022 
	0034 0038 0020 0043 ffef 001a ffcf 0008 
	ffdd 0018 fff9 ffb1 000d 0046 002b 003c 
	004e ffe0 ffe5 0008 ffc3 ffc1 ffe1 003d 
	004d ffdb fff7 003d 0017 ffee 0009 000d 
	ff9a 0006 ffdc 0000 ffa7 ffc2 004f fff0 
	ffbe ffa8 0046 003a ffd7 0031 ffe4 0006 
	004b 000a 0027 ffee ffe5 003d 0002 002f 

[Cb]:
	0008 ffde ffb8 fffa 0009 0004 0033 ffd4 
	0036 ffdb 001e ffe3 0013 ffeb 002f 0000 
	000b fff3 ffd5 0019 0006 ffec 001f ffdd 
	ff9e 000f 0005 ffc5 000a 0009 0029 ffdc 
	ffd1 0015 0009 ffdd 0035 0004 001e fffe 
	ffc3 0009 0024 0006 0043 fff4 ffd1 0008 
	000d 0005 ffdf ffc0 ffd3 0042 0013 000e 
	ffa6 0015 000d 0023 0047 ffab ffd1 ffe6 

[Cr]:
	ffbb 002d 0025 002a 002d fff5 001d 0005 
	005b 000a 0003 000b ffef ffd4 0005 0043 
	0031 ffd8 0041 0010 001f ffc2 ffe4 0006 
	0009 fffc ffc3 ffd4 0008 003f ffea 002d 
	0018 ffef 0014 0022 003c ffe1 ffc0 0066 
	003a ffd9 0053 0038 0027 ffe6 ffe0 0047 
	ffd6 ffff ffe8 ff9a 0034 ffa9 ffd6 005a 
	0026 0027 fff2 ffcf ffc1 001c ffe7 0005 

[MCU #9] Quantification:
[Y]:
	0002 fff6 ffec 0008 fffb 0000 fffd 0001 
	000d 000e 0008 000b fffe 0001 fffe 0000 
	fff8 0006 ffff fff5 0001 0004 0002 0003 
	0013 fffa fffd 0000 fffc fffe ffff 0003 
	000f fffb 0000 0003 0001 0000 0000 0000 
	fff2 0000 fffe 0000 fffd fffe 0002 0000 
	fffc fffc 0003 0002 ffff 0001 0000 0000 
	0003 0000 0001 0000 0000 0002 0000 0001 

[Cb]:
	0001 fffa fff6 0000 0000 0000 0001 ffff 
	000a fffa 0003 ffff 0000 0000 0001 0000 
	0001 ffff fffe 0000 0000 0000 0001 ffff 
	fff9 0000 0000 ffff 0000 0000 0001 ffff 
	ffff 0000 0000 ffff 0001 0000 0001 0000 
	fffe 0000 0001 0000 0002 0000 ffff 0000 
	0000 0000 ffff fffe ffff 0002 0000 0000 
	fffd 0000 0000 0001 0002 fffe ffff 0000 

[Cr]:
	fff3 0009 0005 0003 0001 0000 0000 0000 
	0012 0001 0000 0000 0000 ffff 0000 0002 
	0007 fffb 0003 0000 0001 fffe 0000 0000 
	0000 0000 fffe ffff 0000 0002 0000 0001 
	0000 0000 0000 0001 0002 ffff fffe 0003 
	0001 ffff 0002 0001 0001 0000 ffff 0002 
	ffff 0000 0000 fffd 0001 fffe ffff 0003 
	0001 0001 0000 ffff fffe 0000 0000 0000 

[MCU #9] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 5 over 3 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 11 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 7 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 19 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 52, huffman path = 65423, nb_bits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 1 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 6, magnitude = 3, index = 6
		bitstream => writing 6 over 3 bits
		bitstream => writing 6 over 3 bits

AC:
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 5 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 10 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -22, magnitude = 5, index = 9
		bitstream => writing 30 over 5 bits
		bitstream => writing 9 over 5 bits

AC:
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 53, huffman path = 65425, nb_bits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 18 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #10] Valeurs RGB initiales:
b9775c 5b8fdd 4d8e4f 9c7217 68e82c f98fb0 436a57 35c611    
783c42 7608ae e453bb 2b0595 44adec 73b618 ece629 0d1b14    
412baa 68dd3a a4f89c 382abe 9729b6 aeddaf 8a60bb a37a2c    
a51c61 e36b9f ea9221 50bb9f c5c3c8 d30a56 1c0a77 ca04fa    
4f7bdd b15831 0a145f 1e712f c279f6 10372d d4afce 9c1b67    
658ef2 0e20be 23ce7f 65112a e522ed 77ae96 b8d28d 7c3bd3    
53f84c ffe5fc dc308e cffcf1 4ff7ba 16f377 9e2bfb 3fcb70    
125f6d bfd07b e24ad8 ccc53f 933327 d4c18a d03ad8 1fa4b9    

[MCU #10] Conversion RGB -> YCbCr:
[Y]:
	88 88 73 74 ac b2 5c 86 
	4f 3c 8a 21 95 90 d2 16 
	40 a7 d4 3f 5a ca 77 7d 
	4d 95 9f 98 c4 4f 1c 5b 
	79 6e 1a 51 9d 2a be 4a 
	8d 2d 92 2d 73 9b c2 60 
	b3 ef 6e ed be a3 65 97 
	4a c1 88 b8 4e c0 79 7f 

[Cb]:
	67 b0 6b 4b 38 7f 7d 3e 
	79 c0 9c c2 b1 3c 20 7f 
	bc 42 60 c8 b4 71 a6 52 
	8b 86 39 84 82 84 b3 da 
	b8 5d a7 6d b2 82 89 90 
	b9 d2 75 7e c5 7d 62 c1 
	46 87 92 82 7e 67 d5 6a 
	94 58 ad 3c 6a 61 b6 a1 

[Cr]:
	a3 60 65 9c 4f b2 6e 46 
	9e aa c0 87 46 6b 92 7a 
	81 53 5d 7b ac 6c 8e 9b 
	bf b8 b5 4d 81 de 80 cf 
	62 b0 75 5c 9a 6d 90 ba 
	63 6a 31 a8 d1 66 79 94 
	3b 8b ce 6a 31 1c a9 41 
	58 7e c0 8e b1 8e be 3c 

[MCU #10] Downsampling:
[Y]:
	88 88 73 74 ac b2 5c 86 
	4f 3c 8a 21 95 90 d2 16 
	40 a7 d4 3f 5a ca 77 7d 
	4d 95 9f 98 c4 4f 1c 5b 
	79 6e 1a 51 9d 2a be 4a 
	8d 2d 92 2d 73 9b c2 60 
	b3 ef 6e ed be a3 65 97 
	4a c1 88 b8 4e c0 79 7f 

[Cb]:
	67 b0 6b 4b 38 7f 7d 3e 
	79 c0 9c c2 b1 3c 20 7f 
	bc 42 60 c8 b4 71 a6 52 
	8b 86 39 84 82 84 b3 da 
	b8 5d a7 6d b2 82 89 90 
	b9 d2 75 7e c5 7d 62 c1 
	46 87 92 82 7e 67 d5 6a 
	94 58 ad 3c 6a 61 b6 a1 

[Cr]:
	a3 60 65 9c 4f b2 6e 46 
	9e aa c0 87 46 6b 92 7a 
	81 53 5d 7b ac 6c 8e 9b 
	bf b8 b5 4d 81 de 80 cf 
	62 b0 75 5c 9a 6d 90 ba 
	63 6a 31 a8 d1 66 79 94 
	3b 8b ce 6a 31 1c a9 41 
	58 7e c0 8e b1 8e be 3c 

[MCU #10] DCT:
[Y]:
	fff5 fffd ffc2 0030 ffb5 ffd7 ffef 0015 
	ffbc ffe5 ffee 001c ffd5 ffeb 0030 005e 
	0059 fffa fff8 000a ffe8 fffb 0021 ff9f 
	fff0 ffe0 0035 005e 004f 0035 ffe0 0044 
	ffdf 001c ffe9 ffe0 0051 ffd7 ffcb ffd3 
	0070 005a ffd2 ffc4 005a ff9a 0025 ffa9 
	fffa ffd6 002c ffe7 ffae 0003 0069 fff5 
	002c 0005 0030 0004 000a ffe6 ffcd ffc8 

[Cb]:
	002b 000a 001e fffe 0022 fffe ffd0 002e 
	ffd5 0047 ffcd 000d 001b fff4 ffea ffb5 
	ffab 0028 fffe ffd1 ff96 0004 fffb 0006 
	0001 0032 000c 0000 ffce ffa9 0002 ffe8 
	ffd8 ffc8 0058 0014 ffc5 0013 0032 0010 
	ffe1 ffae 0019 001c ffba 0030 ffc0 ffd6 
	000d 0009 0021 0045 0016 0010 0011 0002 
	ffe3 0000 ffc6 0029 ffdc 0066 0012 0039 

[Cr]:
	0019 fffd 0000 ffeb ffd8 0008 ffed 0020 
	0015 0019 0040 0035 0023 000d 0047 ffb9 
	ffc6 003f ffb2 fffb ffbf 0076 fff9 0002 
	ffc6 0000 fff9 0004 002d fffe ffdd ffcc 
	0043 fffc 0006 003c ffd7 ffdf 0037 ffe6 
	ffe4 000c 0013 0007 ffe9 0017 002d fff4 
	fff9 ffb3 ffb3 0061 007c fff3 ffe8 fff4 
	ffb6 ffef fffe ffdd fffc 0010 ffd4 001e 

[MCU #10] ZZ:
[Y]:
	fff5 fffd ffbc 0059 ffe5 ffc2 0030 ffee 
	fffa fff0 ffdf ffe0 fff8 001c ffb5 ffd7 
	ffd5 000a 0035 001c 0070 fffa 005a ffe9 
	005e ffe8 ffeb ffef 0015 0030 fffb 004f 
	ffe0 ffd2 ffd6 002c 0005 002c ffc4 0051 
	0035 0021 005e ff9f ffe0 ffd7 005a ffe7 
	0030 0004 ffae ff9a ffcb 0044 ffd3 0025 
	0003 000a ffe6 0069 ffa9 fff5 ffcd ffc8 

[Cb]:
	002b 000a ffd5 ffab 0047 001e fffe ffcd 
	0028 0001 ffd8 0032 fffe 000d 0022 fffe 
	001b ffd1 000c ffc8 ffe1 000d ffae 0058 
	0000 ff96 fff4 ffd0 002e ffea 0004 ffce 
	0014 0019 0009 ffe3 0000 0021 001c ffc5 
	ffa9 fffb ffb5 0006 0002 0013 ffba 0045 
	ffc6 0029 0016 0030 0032 ffe8 0010 ffc0 
	0010 ffdc 0066 0011 ffd6 0002 0012 0039 

[Cr]:
	0019 fffd 0015 ffc6 0019 0000 ffeb 0040 
	003f ffc6 0043 0000 ffb2 0035 ffd8 0008 
	0023 fffb fff9 fffc ffe4 fff9 000c 0006 
	0004 ffbf 000d ffed 0020 0047 0076 002d 
	003c 0013 ffb3 ffb6 ffef ffb3 0007 ffd7 
	fffe fff9 ffb9 0002 ffdd ffdf ffe9 0061 
	fffe ffdd 007c 0017 0037 ffcc ffe6 002d 
	fff3 fffc 0010 ffe8 fff4 fff4 ffd4 001e 

[MCU #10] Quantification:
[Y]:
	fffe ffff ffea 0011 fffd fffb 0003 ffff 
	ffff fffc fff8 fffb ffff 0001 fffc fffe 
	fff6 0002 000a 0004 0009 0000 0004 ffff 
	0017 fffc fffd ffff 0001 0001 0000 0004 
	fffa fffa fffd 0002 0000 0001 ffff 0003 
	0007 0003 0005 fffb ffff ffff 0002 0000 
	0003 0000 fffd fffd ffff 0001 ffff 0001 
	0000 0000 0000 0003 fffe 0000 ffff ffff 

[Cb]:
	0008 0002 fffa fffa 0002 0001 0000 ffff 
	0008 0000 fffb 0002 0000 0000 0001 0000 
	0003 fffb 0000 ffff ffff 0000 fffe 0002 
	0000 fffb 0000 ffff 0001 0000 0000 ffff 
	0000 0000 0000 0000 0000 0001 0000 ffff 
	fffe 0000 fffe 0000 0000 0000 fffe 0002 
	ffff 0001 0000 0001 0001 0000 0000 fffe 
	0000 ffff 0003 0000 ffff 0000 0000 0001 

[Cr]:
	0005 0000 0003 fffc 0000 0000 0000 0002 
	000c fff7 0008 0000 fffe 0001 ffff 0000 
	0005 0000 0000 0000 0000 0000 0000 0000 
	0000 fffd 0000 0000 0001 0002 0003 0001 
	0002 0000 fffe fffe 0000 fffe 0000 ffff 
	0000 0000 fffe 0000 ffff ffff 0000 0003 
	0000 ffff 0004 0000 0001 ffff 0000 0001 
	0000 0000 0000 0000 0000 0000 ffff 0001 

[MCU #10] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -4, magnitude = 3, index = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = 17, magnitude = 5, index = 17
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 17 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 7, magnitude = 3, index = 7
		bitstream => writing 6 over 3 bits
		bitstream => writing 7 over 3 bits

AC:
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 18, magnitude = 5, index = 18
		bitstream => writing 30 over 5 bits
		bitstream => writing 18 over 5 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 12 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 5 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 130, huffman path = 65463, nb_bits = 16
		bitstream => writing 65463 over 16 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
[MCU #11] Valeurs RGB initiales:
5ddef4 a37277 002bef 5d877e 3ad40d 89707f a1d867 cdd2f6    
79c750 3016cd 908e09 d30411 81e864 3d1469 d25817 bfcbcd    
2a41cf af43ae 0684d9 b0ecb6 ea90ae 87c8d8 456002 fb0edf    
8e3b8d 6d330a 18d826 79bc91 18a623 3af6de d9bca1 a18fab    
d4ae01 9442c3 57913e 344397 654dab c56b1c f42d95 ea3ecd    
562b2a 9f35d1 899a5f 7ba97f 3acc4d b9315e e31680 d08d2f    
9807a7 317aff 87cdf7 d4ccdc d0a80c 5e7709 4fc600 09dcf4    
f1792c cf8727 8d9a86 fa5957 753ba1 4d0866 8d9b9a b46f5b    

[MCU #11] Conversion RGB -> YCbCr:
[Y]:
	ba 81 34 79 8f 79 bb d5 
	a2 33 7f 43 ba 2a 75 c8 
	4a 6f 68 d4 ae b6 4d 6d 
	5d 40 8a a3 6d bb c2 98 
	a6 69 76 48 5f 7d 74 82 
	38 66 8e 96 92 5f 5f 96 
	45 73 bd d0 a2 63 8c a0 
	94 92 94 89 58 27 97 81 

[Cb]:
	a1 7a e9 83 36 83 51 93 
	52 d7 3d 64 4f a4 4b 83 
	cb a3 c0 6f 80 93 56 c1 
	9b 62 47 76 56 94 6e 8b 
	23 b3 60 ad ab 49 92 aa 
	78 bc 65 73 59 80 92 46 
	b8 cf a1 87 2b 4d 31 b0 
	45 44 78 64 a9 a3 82 6a 

[Cr]:
	3e 98 5b 6c 43 8b 6e 7b 
	63 7e 8c e6 57 8e c2 7a 
	69 ad 3a 66 ab 5e 7a e6 
	a3 a0 2e 62 44 24 91 87 
	a1 9f 6a 72 84 b3 db ca 
	96 a8 7c 6c 41 c0 de a9 
	bb 51 5a 83 a1 7c 55 15 
	c2 ac 7b d1 95 9b 79 a4 

[MCU #11] Downsampling:
[Y]:
	ba 81 34 79 8f 79 bb d5 
	a2 33 7f 43 ba 2a 75 c8 
	4a 6f 68 d4 ae b6 4d 6d 
	5d 40 8a a3 6d bb c2 98 
	a6 69 76 48 5f 7d 74 82 
	38 66 8e 96 92 5f 5f 96 
	45 73 bd d0 a2 63 8c a0 
	94 92 94 89 58 27 97 81 

[Cb]:
	a1 7a e9 83 36 83 51 93 
	52 d7 3d 64 4f a4 4b 83 
	cb a3 c0 6f 80 93 56 c1 
	9b 62 47 76 56 94 6e 8b 
	23 b3 60 ad ab 49 92 aa 
	78 bc 65 73 59 80 92 46 
	b8 cf a1 87 2b 4d 31 b0 
	45 44 78 64 a9 a3 82 6a 

[Cr]:
	3e 98 5b 6c 43 8b 6e 7b 
	63 7e 8c e6 57 8e c2 7a 
	69 ad 3a 66 ab 5e 7a e6 
	a3 a0 2e 62 44 24 91 87 
	a1 9f 6a 72 84 b3 db ca 
	96 a8 7c 6c 41 c0 de a9 
	bb 51 5a 83 a1 7c 55 15 
	c2 ac 7b d1 95 9b 79 a4 

[MCU #11] DCT:
[Y]:
	0005 ffb7 fffa ffc6 004d 0018 ffff 001d 
	0011 ffc4 002f 005e 003c ffe9 000e 0002 
	0019 001c 004b ffe0 0035 fffb ffbf 002c 
	fffc ffef 003c 0003 0010 ffe3 fffe 0015 
	000b 0004 007b 0039 ffd2 0038 fff3 fff1 
	004e ffc0 ffaa fff1 ffe1 0020 ffed ffb6 
	fff5 0010 ffd4 0010 fff6 ffea ffe5 ffb2 
	000a 002d fff0 0021 ffff ffeb fffe ffd5 

[Cb]:
	fff1 002e 0037 ffcf ffe9 ffc4 0017 ffb7 
	001b 001a 0024 fff3 fff7 fff8 003e ffe5 
	fff3 001f fff8 fff1 ffdd 0007 0056 000d 
	fff6 002e 0000 ffc5 ffda 0015 ffc7 ffec 
	ffec ffa5 ffb5 fffe 001b 002c 0006 0032 
	001a 005d 0057 ffe1 0023 003d 006c 0003 
	0028 0000 ffe3 001f ffe9 002c 002d 0049 
	004c 001b 0005 ff97 002c ffe2 000d 0026 

[Cr]:
	002a ffe0 0055 0017 0004 0013 ffb7 ffb5 
	ffbf ffc5 0004 ffae ffdf ffe7 ffd9 ffe8 
	fff3 0033 ff8b fffa 0005 0010 002a ffd8 
	fffa ffde 0005 001f ff90 0028 0029 fff9 
	ffff 000b 0030 fff4 0004 ffeb fff7 ffee 
	ff66 0044 0007 002a 0024 ffd6 fff7 0023 
	0027 ffc8 0047 ffe0 ffee ffa7 0000 ffec 
	000b ffe3 ffe4 0023 0028 ffb6 0013 0021 

[MCU #11] ZZ:
[Y]:
	0005 ffb7 0011 0019 ffc4 fffa ffc6 002f 
	001c fffc 000b ffef 004b 005e 004d 0018 
	003c ffe0 003c 0004 004e fff5 ffc0 007b 
	0003 0035 ffe9 ffff 001d 000e fffb 0010 
	0039 ffaa 0010 000a 002d ffd4 fff1 ffd2 
	ffe3 ffbf 0002 002c fffe 0038 ffe1 0010 
	fff0 0021 fff6 0020 fff3 0015 fff1 ffed 
	ffea ffff ffeb ffe5 ffb6 ffb2 fffe ffd5 

[Cb]:
	fff1 002e 001b fff3 001a 0037 ffcf 0024 
	001f fff6 ffec 002e fff8 fff3 ffe9 ffc4 
	fff7 fff1 0000 ffa5 001a 0028 005d ffb5 
	ffc5 ffdd fff8 0017 ffb7 003e 0007 ffda 
	fffe 0057 0000 004c 001b ffe3 ffe1 001b 
	0015 0056 ffe5 000d ffc7 002c 0023 001f 
	0005 ff97 ffe9 003d 0006 ffec 0032 006c 
	002c 002c ffe2 002d 0003 0049 000d 0026 

[Cr]:
	002a ffe0 ffbf fff3 ffc5 0055 0017 0004 
	0033 fffa ffff ffde ff8b ffae 0004 0013 
	ffdf fffa 0005 000b ff66 0027 0044 0030 
	001f 0005 ffe7 ffb7 ffb5 ffd9 0010 ff90 
	fff4 0007 ffc8 000b ffe3 0047 002a 0004 
	0028 002a ffe8 ffd8 0029 ffeb 0024 ffe0 
	ffe4 0023 ffee ffd6 fff7 fff9 ffee fff7 
	ffa7 0028 ffb6 0000 0023 ffec 0013 0021 

[MCU #11] Quantification:
[Y]:
	0001 ffe8 0005 0005 fff8 0000 fffd 0002 
	0007 ffff 0002 fffe 0009 0005 0004 0001 
	000f fff8 000c 0000 0006 0000 fffd 0007 
	0000 000a fffd 0000 0001 0000 0000 0000 
	000b fff4 0001 0000 0002 ffff 0000 fffe 
	fffc fffb 0000 0002 0000 0001 0000 0000 
	ffff 0001 0000 0001 0000 0000 0000 0000 
	ffff 0000 0000 0000 fffe fffe 0000 ffff 

[Cb]:
	fffd 0009 0003 0000 0000 0001 ffff 0001 
	0006 ffff fffe 0002 0000 0000 0000 fffe 
	ffff ffff 0000 fffd 0000 0001 0003 fffe 
	fffc ffff 0000 0000 fffe 0002 0000 ffff 
	0000 0002 0000 0002 0000 0000 ffff 0000 
	0000 0002 0000 0000 ffff 0001 0001 0001 
	0000 fffd 0000 0002 0000 0000 0001 0003 
	0001 0001 ffff 0001 0000 0002 0000 0001 

[Cr]:
	0008 fffa fff7 0000 ffff 0002 0000 0000 
	000a ffff 0000 ffff fffd fffe 0000 0000 
	fffc 0000 0000 0000 fffb 0001 0002 0001 
	0002 0000 0000 fffe fffe ffff 0000 fffd 
	0000 0000 ffff 0000 0000 0002 0001 0000 
	0001 0001 0000 ffff 0001 0000 0001 ffff 
	0000 0001 0000 ffff 0000 0000 0000 0000 
	fffe 0001 fffe 0000 0001 0000 0000 0001 

[MCU #11] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 3, magnitude = 2, index = 3
		bitstream => writing 3 over 3 bits
		bitstream => writing 3 over 2 bits

AC:
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nb_bits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -11, magnitude = 4, index = 4
		bitstream => writing 14 over 4 bits
		bitstream => writing 4 over 4 bits

AC:
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 3, magnitude = 2, index = 3
		bitstream => writing 2 over 2 bits
		bitstream => writing 3 over 2 bits

AC:
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 36, huffman path = 4086, nb_bits = 12
		bitstream => writing 4086 over 12 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 51, huffman path = 1016, nb_bits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
[MCU #12] Valeurs RGB initiales:
3e4095 165f39 d050b3 fc203a 23add4 a9a72d 001c69 a26971    
9c13a3 587266 df5ce4 547ef1 607fbb 057baa e3dc2f 049757    
6f085b d534bb 697e4e 8d66cf 4466e7 735cc6 1edec3 50457d    
959999 b1c97a 83453f 5075ce 8bb5ed 54e261 f941a5 776c6a    
894df9 9ed485 4ea408 24746e 74241a 38f7b0 e6599b c226b6    
83bc7f a6e0e3 0309c2 0e5a35 ffccec bdb883 0943b0 b650a2    
36c0cb b5e476 61552a 39e1d4 fa3ef7 adb145 098a5f c14469    
b66d97 6a49b9 4b40a1 549146 31ecee edddf8 48a7cc a11c1d    

[MCU #12] Conversion RGB -> YCbCr:
[Y]:
	49 45 82 65 88 9a 1c 7b 
	4c 69 93 7f 7d 5d ca 64 
	30 74 72 7e 6b 6f a2 4f 
	98 b9 57 74 af a9 83 6f 
	73 bb 79 5b 3b b6 8b 65 
	a4 cf 1c 3f df b3 3e 78 
	98 c9 54 ad 8b a3 5f 6e 
	88 60 4e 76 b4 e5 8f 44 

[Cb]:
	ab 79 9c 68 ab 43 ab 7a 
	b1 7e ae c1 a3 ab 28 79 
	98 a8 6c ae c6 b1 93 9a 
	81 5d 73 b3 a3 57 93 7d 
	cc 62 41 8a 6e 7d 89 ae 
	6b 8b de 7a 87 65 c0 98 
	9d 51 68 96 bd 4b 80 7d 
	89 b2 af 65 a1 8b a3 6a 

[Cr]:
	78 5f b8 ec 38 8b 6c 9c 
	b9 74 b6 62 6c 41 92 3c 
	ad c6 79 8b 65 83 22 81 
	7e 7a 9f 66 66 43 d4 86 
	90 6b 62 58 a9 26 c1 c2 
	68 63 6e 5d 97 87 5a ac 
	3a 71 89 2d cf 87 43 bb 
	a1 87 7e 68 22 86 4d c2 

[MCU #12] Downsampling:
[Y]:
	49 45 82 65 88 9a 1c 7b 
	4c 69 93 7f 7d 5d ca 64 
	30 74 72 7e 6b 6f a2 4f 
	98 b9 57 74 af a9 83 6f 
	73 bb 79 5b 3b b6 8b 65 
	a4 cf 1c 3f df b3 3e 78 
	98 c9 54 ad 8b a3 5f 6e 
	88 60 4e 76 b4 e5 8f 44 

[Cb]:
	ab 79 9c 68 ab 43 ab 7a 
	b1 7e ae c1 a3 ab 28 79 
	98 a8 6c ae c6 b1 93 9a 
	81 5d 73 b3 a3 57 93 7d 
	cc 62 41 8a 6e 7d 89 ae 
	6b 8b de 7a 87 65 c0 98 
	9d 51 68 96 bd 4b 80 7d 
	89 b2 af 65 a1 8b a3 6a 

[Cr]:
	78 5f b8 ec 38 8b 6c 9c 
	b9 74 b6 62 6c 41 92 3c 
	ad c6 79 8b 65 83 22 81 
	7e 7a 9f 66 66 43 d4 86 
	90 6b 62 58 a9 26 c1 c2 
	68 63 6e 5d 97 87 5a ac 
	3a 71 89 2d cf 87 43 bb 
	a1 87 7e 68 22 86 4d c2 

[MCU #12] DCT:
[Y]:
	ffe6 fff8 ffce 0073 ffcd ffb5 ffe0 ffd0 
	ffb6 ffd7 ffec ff86 ffec 0031 0012 003d 
	ffe3 ffdf ffbc fffc 002c 001d 0038 0013 
	fff6 002a 0024 0008 0024 ff9d 002d ffe1 
	fffe fff7 fffc 0021 ffef ffff 004b fff1 
	000e 0028 fff1 0001 003f ffcb 0008 ffd8 
	ffd1 ffea ffe9 0033 0019 ffc6 0019 000d 
	ffd5 0000 0000 ffb6 ffc5 0039 0014 ffd6 

[Cb]:
	005f 0016 ffef 0008 0047 0017 ffec 0041 
	0013 0019 ffea 000f 0029 fff9 0017 ffe1 
	0006 0033 ffed 0002 ffd4 ffe2 0008 003a 
	ffde fff8 0038 ffd6 0000 0029 0007 003a 
	ffdc fff9 0037 0011 fff9 0019 ffe0 0017 
	ffe0 ffe0 ffee fff8 0024 0017 ffbc 003d 
	0037 ffe4 0018 ffe6 ff9b ffed ffda 0027 
	0000 ffeb 0034 0046 0037 fff8 ffee ffe0 

[Cr]:
	ffe9 0007 0048 ffbb 0020 ffed 0027 0021 
	001e 005f ffda ffeb ffe9 0079 ffe9 ffec 
	fffc 0022 ffe2 ffe2 fff6 000d 0061 ffa6 
	0006 ffa5 ffc6 fff1 0024 0005 ffff 0022 
	001c ffd7 0034 ffc7 0000 0066 ffe5 ffed 
	000c ffd6 ffc3 ffe3 ffee ffd3 0018 ffe4 
	000b 001d 0002 fff9 0019 fff3 002e ff77 
	000f ffff fffd 0000 0032 ffbc fffc ffe6 

[MCU #12] ZZ:
[Y]:
	ffe6 fff8 ffb6 ffe3 ffd7 ffce 0073 ffec 
	ffdf fff6 fffe 002a ffbc ff86 ffcd ffb5 
	ffec fffc 0024 fff7 000e ffd1 0028 fffc 
	0008 002c 0031 ffe0 ffd0 0012 001d 0024 
	0021 fff1 ffea ffd5 0000 ffe9 0001 ffef 
	ff9d 0038 003d 0013 002d ffff 003f 0033 
	0000 ffb6 0019 ffcb 004b ffe1 fff1 0008 
	ffc6 ffc5 0039 0019 ffd8 000d 0014 ffd6 

[Cb]:
	005f 0016 0013 0006 0019 ffef 0008 ffea 
	0033 ffde ffdc fff8 ffed 000f 0047 0017 
	0029 0002 0038 fff9 ffe0 0037 ffe0 0037 
	ffd6 ffd4 fff9 ffec 0041 0017 ffe2 0000 
	0011 ffee ffe4 0000 ffeb 0018 fff8 fff9 
	0029 0008 ffe1 003a 0007 0019 0024 ffe6 
	0034 0046 ff9b 0017 ffe0 003a 0017 ffbc 
	ffed 0037 fff8 ffda 003d 0027 ffee ffe0 

[Cr]:
	ffe9 0007 001e fffc 005f 0048 ffbb ffda 
	0022 0006 001c ffa5 ffe2 ffeb 0020 ffed 
	ffe9 ffe2 ffc6 ffd7 000c 000b ffd6 0034 
	fff1 fff6 0079 0027 0021 ffe9 000d 0024 
	ffc7 ffc3 001d 000f ffff 0002 ffe3 0000 
	0005 0061 ffec ffa6 ffff 0066 ffee fff9 
	fffd 0000 0019 ffd3 ffe5 0022 ffed 0018 
	fff3 0032 ffbc 002e ffe4 ff77 fffc ffe6 

[MCU #12] Quantification:
[Y]:
	fffb fffe ffe8 fffb fffb fffc 0007 ffff 
	fff8 fffe 0000 0007 fff8 fff9 fffe fffc 
	fffb ffff 0007 ffff 0001 fffe 0001 0000 
	0002 0008 0007 fffd fffd 0000 0001 0001 
	0006 fffe fffe fffe 0000 0000 0000 0000 
	fff2 0005 0003 0001 0001 0000 0001 0001 
	0000 fffd 0001 fffe 0002 0000 0000 0000 
	fffe fffe 0001 0000 ffff 0000 0000 ffff 

[Cb]:
	0013 0004 0002 0000 0000 0000 0000 0000 
	000a fffb fffc 0000 0000 0000 0002 0000 
	0005 0000 0003 0000 ffff 0001 ffff 0001 
	fffd fffe 0000 0000 0002 0000 ffff 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0001 0000 ffff 0001 0000 0000 0001 0000 
	0001 0002 fffd 0000 ffff 0001 0000 fffe 
	0000 0001 0000 ffff 0002 0001 0000 ffff 

[Cr]:
	fffc 0001 0004 0000 0003 0002 fffe ffff 
	0006 0001 0003 fffc ffff 0000 0001 0000 
	fffd fffd fffd ffff 0000 0000 ffff 0001 
	ffff 0000 0004 0001 0001 0000 0000 0001 
	ffff fffe 0000 0000 0000 0000 0000 0000 
	0000 0003 0000 fffd 0000 0003 0000 0000 
	0000 0000 0000 ffff 0000 0001 0000 0000 
	0000 0001 fffe 0001 0000 fffc 0000 0000 

[MCU #12] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -6, magnitude = 3, index = 1
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 68, huffman path = 65431, nb_bits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 1 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 22, magnitude = 5, index = 22
		bitstream => writing 30 over 5 bits
		bitstream => writing 22 over 5 bits

AC:
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 84, huffman path = 65440, nb_bits = 16
		bitstream => writing 65440 over 16 bits
		bitstream => writing 10 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 5 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 145, huffman path = 503, nb_bits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -12, magnitude = 4, index = 3
		bitstream => writing 14 over 4 bits
		bitstream => writing 3 over 4 bits

AC:
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 114, huffman path = 2040, nb_bits = 11
		bitstream => writing 2040 over 11 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #13] Valeurs RGB initiales:
08f60c a2aa7b fee8bb 93ff1a cdcf6b 80cb8b baee38 8f97df    
0a589d f307bd 53a3d0 f6fb43 5cda9f 412e1e 328f9d ed9419    
fb98af 747c2b afeb34 0ac068 c629e7 14b64d e3fbb3 ca6e0f    
42dddb 08812c d516c6 6fc78f e94ad4 289a4a f626ff e47ae1    
d3e12f ef9fca 852818 7ec6ec 041590 0c3904 7aae29 94e620    
b47c24 88f14d af7409 2f1aea 121ef3 d42c4d 092c1a f6e9d2    
5fd2b1 91a640 86dc00 5292e4 c8f33a f22d1b c62759 bdd50b    
8ae42b 89daf7 f09064 87fbae 4046ee e19a7f 28cc6c 16b949    

[MCU #13] Conversion RGB -> YCbCr:
[Y]:
	94 a2 e9 c5 c3 ad ca 9d 
	49 62 90 e5 ae 32 75 a1 
	b8 70 c4 80 6e 7a ec 7f 
	ae 53 63 a6 89 6f 7d a5 
	c9 bc 42 b5 1e 26 8f b7 
	83 bf 79 38 33 62 1f ea 
	ac 94 a9 88 d1 66 5c b7 
	b4 c5 a8 d0 57 ac 90 7b 

[Cb]:
	33 6a 66 20 4e 6d 2e a5 
	b0 b3 a4 25 78 75 97 33 
	7b 59 2f 73 c5 67 60 41 
	99 6a b8 73 aa 6b c9 a2 
	29 88 68 9f c0 6d 46 2b 
	4b 40 41 e4 ed 74 7d 72 
	83 51 21 b4 2b 56 7e 1f 
	33 9c 5a 6d d5 67 6c 63 

[Cr]:
	1c 80 8f 5d 87 60 75 76 
	53 e7 54 8c 46 8b 50 b6 
	b0 83 71 2c bf 38 7a b6 
	33 4a d1 59 c4 4e d6 ad 
	87 a5 b0 59 6e 6e 71 67 
	a3 59 a6 7a 69 d1 70 88 
	49 7e 67 59 7a e4 cb 84 
	62 55 b4 4c 6f a6 36 38 

[MCU #13] Downsampling:
[Y]:
	94 a2 e9 c5 c3 ad ca 9d 
	49 62 90 e5 ae 32 75 a1 
	b8 70 c4 80 6e 7a ec 7f 
	ae 53 63 a6 89 6f 7d a5 
	c9 bc 42 b5 1e 26 8f b7 
	83 bf 79 38 33 62 1f ea 
	ac 94 a9 88 d1 66 5c b7 
	b4 c5 a8 d0 57 ac 90 7b 

[Cb]:
	33 6a 66 20 4e 6d 2e a5 
	b0 b3 a4 25 78 75 97 33 
	7b 59 2f 73 c5 67 60 41 
	99 6a b8 73 aa 6b c9 a2 
	29 88 68 9f c0 6d 46 2b 
	4b 40 41 e4 ed 74 7d 72 
	83 51 21 b4 2b 56 7e 1f 
	33 9c 5a 6d d5 67 6c 63 

[Cr]:
	1c 80 8f 5d 87 60 75 76 
	53 e7 54 8c 46 8b 50 b6 
	b0 83 71 2c bf 38 7a b6 
	33 4a d1 59 c4 4e d6 ad 
	87 a5 b0 59 6e 6e 71 67 
	a3 59 a6 7a 69 d1 70 88 
	49 7e 67 59 7a e4 cb 84 
	62 55 b4 4c 6f a6 36 38 

[MCU #13] DCT:
[Y]:
	0080 002b 003f ff9c 0045 0022 fff3 fff0 
	0027 ffbf ffa8 fff2 fffc 004a ffe4 0048 
	0073 0006 ff7f fffa ffca fff3 0011 001c 
	ffeb 0007 0036 ffd0 0013 ff98 0007 ffe8 
	0038 0015 0004 0025 fff4 0044 ffe3 ffbf 
	003d ffea ffe1 003e ffff ffe6 0039 0056 
	0017 0009 0049 0014 ff8a 0008 002f fff6 
	003d 001c 0022 0011 ffdc 0042 ffd6 0021 

[Cb]:
	ff89 fffc ff9d 0030 0022 ffde ffb1 0029 
	fffa 0016 006b fffd ffc1 ffd2 0052 0035 
	ffaf 0008 004c fff8 ffd0 ffd2 0015 ffe0 
	ffd2 ffe3 ffda ffd5 0018 0004 0015 ffbe 
	000d ffda 0003 ffb5 ffdd ffa3 001f 001c 
	ffe4 ffd4 0044 ffe9 0026 0052 001f ffde 
	fffc ffab ffb0 0001 0062 ffb6 fff6 0000 
	ff85 0022 ffd6 0019 000b ffed fff0 ffb9 

[Cr]:
	ffe5 ffd2 0003 ffe5 ffb2 ffba 0029 0036 
	fff7 0000 002b ffaa 0038 ffc0 ff9f 0008 
	ffbd 0002 ffd5 0013 ffda ffe4 000c ffa5 
	000d 0000 ffec 0006 ffd3 001e 0012 ffb9 
	ffca 0016 ffb4 ffc5 ffdf 0010 0007 005c 
	0017 ff80 ffe4 0007 fff4 001d ffdd 0065 
	ffeb 0031 0000 001a 0041 000b 0040 0048 
	ffed 0027 0029 0027 0004 ffe5 ffdc 0012 

[MCU #13] ZZ:
[Y]:
	0080 002b 0027 0073 ffbf 003f ff9c ffa8 
	0006 ffeb 0038 0007 ff7f fff2 0045 0022 
	fffc fffa 0036 0015 003d 0017 ffea 0004 
	ffd0 ffca 004a fff3 fff0 ffe4 fff3 0013 
	0025 ffe1 0009 003d 001c 0049 003e fff4 
	ff98 0011 0048 001c 0007 0044 ffff 0014 
	0022 0011 ff8a ffe6 ffe3 ffe8 ffbf 0039 
	0008 ffdc 0042 002f 0056 fff6 ffd6 0021 

[Cb]:
	ff89 fffc fffa ffaf 0016 ff9d 0030 006b 
	0008 ffd2 000d ffe3 004c fffd 0022 ffde 
	ffc1 fff8 ffda ffda ffe4 fffc ffd4 0003 
	ffd5 ffd0 ffd2 ffb1 0029 0052 ffd2 0018 
	ffb5 0044 ffab ff85 0022 ffb0 ffe9 ffdd 
	0004 0015 0035 ffe0 0015 ffa3 0026 0001 
	ffd6 0019 0062 0052 001f ffbe 001c 001f 
	ffb6 000b ffed fff6 ffde 0000 fff0 ffb9 

[Cr]:
	ffe5 ffd2 fff7 ffbd 0000 0003 ffe5 002b 
	0002 000d ffca 0000 ffd5 ffaa ffb2 ffba 
	0038 0013 ffec 0016 0017 ffeb ff80 ffb4 
	0006 ffda ffc0 0029 0036 ff9f ffe4 ffd3 
	ffc5 ffe4 0031 ffed 0027 0000 0007 ffdf 
	001e 000c 0008 ffa5 0012 0010 fff4 001a 
	0029 0027 0041 001d 0007 ffb9 005c ffdd 
	000b 0004 ffe5 0040 0065 0048 ffdc 0012 

[MCU #13] Quantification:
[Y]:
	0019 000e 000d 0017 fff7 0005 fffa fffc 
	0001 fffb 000e 0001 fff0 0000 0003 0002 
	ffff ffff 000a 0003 0005 0001 ffff 0000 
	fff4 fff6 000a ffff ffff ffff 0000 0001 
	0007 fffc 0000 0003 0001 0002 0002 0000 
	fff2 0001 0004 0001 0000 0002 0000 0000 
	0002 0000 fffb ffff 0000 0000 ffff 0001 
	0000 ffff 0002 0001 0002 0000 ffff 0001 

[Cb]:
	ffe9 0000 0000 fffb 0000 fffd 0001 0003 
	0001 fff9 0001 ffff 0002 0000 0001 ffff 
	fff7 ffff fffe ffff 0000 0000 ffff 0000 
	fffd fffe ffff fffe 0001 0002 ffff 0000 
	fffe 0002 fffe fffc 0001 fffe 0000 ffff 
	0000 0000 0001 ffff 0000 fffd 0001 0000 
	ffff 0000 0003 0002 0001 fffe 0000 0001 
	fffe 0000 0000 0000 ffff 0000 0000 fffe 

[Cr]:
	fffb fff7 ffff fffc 0000 0000 0000 0001 
	0000 0002 fffa 0000 ffff fffe fffe fffe 
	0008 0002 ffff 0000 0000 0000 fffc fffe 
	0000 ffff fffe 0001 0001 fffd 0000 ffff 
	ffff 0000 0001 0000 0001 0000 0000 ffff 
	0001 0000 0000 fffd 0000 0000 0000 0000 
	0001 0001 0002 0000 0000 fffe 0003 ffff 
	0000 0000 0000 0002 0003 0002 ffff 0000 

[MCU #13] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 30, magnitude = 5, index = 30
		bitstream => writing 6 over 3 bits
		bitstream => writing 30 over 5 bits

AC:
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = -42, magnitude = 6, index = 21
		bitstream => writing 62 over 6 bits
		bitstream => writing 21 over 6 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
[acdc] block 0
DC:
	value = -1, magnitude = 1, index = 0
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits

AC:
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 1016, nb_bits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #14] Valeurs RGB initiales:
bc98fb 253a64 96425b a2e505 1ee3ee d976ed f443bc 5fc387    
9777f5 c77c8c 1e86e5 bc7aec 79cd90 49c38b 8c1f66 2c6094    
908ded 54dd32 d1d8cb 804c47 acfc32 e006f2 48cc1b 2fe1d2    
457322 eaeb8e 552d6c 3035ed 5d0b03 237acb b26315 868cb0    
44cc79 df8ea0 966181 c55020 8fd548 a7540e 935823 24645d    
79f215 2aa865 cc5de2 f0e5d3 3d9447 47c361 31d67f 24aaac    
02de95 619fd9 cbfeab 7c8f52 bd162e bd68c0 a230b4 dc22e1    
0e01f0 dba20c f82df0 24b6ca 1ba75b 7f2e56 2d6f9c 1c5037    

[MCU #14] Conversion RGB -> YCbCr:
[Y]:
	ae 39 5e b7 a9 a1 86 9e 
	8f 94 72 9b ad 98 48 56 
	99 a1 d4 5b cd 62 90 aa 
	5c e0 40 48 23 69 72 8e 
	9a a8 74 6e b0 65 64 50 
	b5 7b 8d e6 71 93 9b 82 
	94 93 e5 82 4b 8b 61 6f 
	20 a2 80 8d 74 4b 60 3e 

[Cb]:
	ab 99 7e 1b a7 ab 9f 73 
	ba 7b c1 ae 70 79 91 a3 
	af 42 7b 75 28 d1 3e 97 
	5f 52 99 dd 6e b7 4c 93 
	6d 7b 87 54 45 4f 5c 87 
	26 74 b0 75 68 64 70 98 
	81 a7 5f 65 70 9e af c0 
	f5 2b bf a3 72 86 a2 7c 

[Cr]:
	8a 72 a8 71 1d a8 cf 53 
	86 a4 44 98 5b 48 b1 62 
	7a 49 7e 9a 68 da 4c 28 
	70 87 8f 6f aa 4e ae 7a 
	43 a7 98 be 68 af a2 61 
	55 46 ad 87 5b 4a 35 3d 
	18 5c 6d 7b d2 a3 ae cd 
	73 a9 d6 35 40 a5 5b 68 

[MCU #14] Downsampling:
[Y]:
	ae 39 5e b7 a9 a1 86 9e 
	8f 94 72 9b ad 98 48 56 
	99 a1 d4 5b cd 62 90 aa 
	5c e0 40 48 23 69 72 8e 
	9a a8 74 6e b0 65 64 50 
	b5 7b 8d e6 71 93 9b 82 
	94 93 e5 82 4b 8b 61 6f 
	20 a2 80 8d 74 4b 60 3e 

[Cb]:
	ab 99 7e 1b a7 ab 9f 73 
	ba 7b c1 ae 70 79 91 a3 
	af 42 7b 75 28 d1 3e 97 
	5f 52 99 dd 6e b7 4c 93 
	6d 7b 87 54 45 4f 5c 87 
	26 74 b0 75 68 64 70 98 
	81 a7 5f 65 70 9e af c0 
	f5 2b bf a3 72 86 a2 7c 

[Cr]:
	8a 72 a8 71 1d a8 cf 53 
	86 a4 44 98 5b 48 b1 62 
	7a 49 7e 9a 68 da 4c 28 
	70 87 8f 6f aa 4e ae 7a 
	43 a7 98 be 68 af a2 61 
	55 46 ad 87 5b 4a 35 3d 
	18 5c 6d 7b d2 a3 ae cd 
	73 a9 d6 35 40 a5 5b 68 

[MCU #14] DCT:
[Y]:
	0016 004e ffe8 fff1 0001 ffe9 fff2 fff3 
	002e ffcf 0010 0046 004d ffe7 000d 0014 
	fff8 ffe7 ffac fffc 001e 002b 0026 fffc 
	003c fff4 ffed 003c 004d 0063 0029 ffd8 
	ff9f ffe0 0011 0012 fffe ffe0 ffbc ffdf 
	000e ffe3 0055 ffd5 ffdc 0017 002f fff1 
	003c ffcd fff8 ffef 002d 0029 ffee 0025 
	002b 0016 ffec 0000 000c ffe9 0027 0071 

[Cb]:
	0015 fff5 002f ffe8 fffb 002b 0071 fff1 
	0008 0016 0000 002c fff6 ffe1 001b fff5 
	005d 0011 003a 005c fffb 001e ffe8 0056 
	ffd4 ffe8 0011 ffe4 ffba ff94 ff9e 0041 
	fffb 001e ffe7 0027 000e 0013 0003 0026 
	000c ffc3 fff4 0038 ffe9 ffc3 fff4 ffcb 
	ffca 0001 fff2 0018 fff2 0002 003c 000d 
	ffcf 0004 0063 0041 ffeb ffdf 0001 fffc 

[Cr]:
	ffd8 fff5 ffc6 ffec ff95 002f 0008 fff6 
	0001 0020 0026 0039 fffd 0067 ffcc ffdc 
	0000 fff9 0050 0006 ffc8 0004 0024 0000 
	fff5 ffea fff7 ffd0 fffe 002f ffea 0000 
	0037 001f 0035 ffed ffa2 000a 0006 000e 
	0019 ff9f ffef 000f 001e ffee 0010 003f 
	ffb4 0068 ffdd 0012 ffd8 0029 0089 ffec 
	0034 ffc0 ffc7 002a ffd9 0003 0028 ffb4 

[MCU #14] ZZ:
[Y]:
	0016 004e 002e fff8 ffcf ffe8 fff1 0010 
	ffe7 003c ff9f fff4 ffac 0046 0001 ffe9 
	004d fffc ffed ffe0 000e 003c ffe3 0011 
	003c 001e ffe7 fff2 fff3 000d 002b 004d 
	0012 0055 ffcd 002b 0016 fff8 ffd5 fffe 
	0063 0026 0014 fffc 0029 ffe0 ffdc ffef 
	ffec 0000 002d 0017 ffbc ffd8 ffdf 002f 
	0029 000c ffe9 ffee fff1 0025 0027 0071 

[Cb]:
	0015 fff5 0008 005d 0016 002f ffe8 0000 
	0011 ffd4 fffb ffe8 003a 002c fffb 002b 
	fff6 005c 0011 001e 000c ffca ffc3 ffe7 
	ffe4 fffb ffe1 0071 fff1 001b 001e ffba 
	0027 fff4 0001 ffcf 0004 fff2 0038 000e 
	ff94 ffe8 fff5 0056 ff9e 0013 ffe9 0018 
	0063 0041 fff2 ffc3 0003 0041 0026 fff4 
	0002 ffeb ffdf 003c ffcb 000d 0001 fffc 

[Cr]:
	ffd8 fff5 0001 0000 0020 ffc6 ffec 0026 
	fff9 fff5 0037 ffea 0050 0039 ff95 002f 
	fffd 0006 fff7 001f 0019 ffb4 ff9f 0035 
	ffd0 ffc8 0067 0008 fff6 ffcc 0004 fffe 
	ffed ffef 0068 0034 ffc0 ffdd 000f ffa2 
	002f 0024 ffdc 0000 ffea 000a 001e 0012 
	ffc7 002a ffd8 ffee 0006 0000 000e 0010 
	0029 ffd9 0003 0089 003f ffec 0028 ffb4 

[MCU #14] Quantification:
[Y]:
	0004 001a 000f ffff fff9 fffe ffff 0000 
	fffa 000f ffe8 fffe fff6 0004 0000 ffff 
	0013 ffff fffd fffc 0001 0003 ffff 0001 
	000f 0006 fffd ffff 0000 0000 0001 0004 
	0003 000c fffc 0002 0001 0000 ffff 0000 
	000e 0003 0001 0000 0001 ffff ffff 0000 
	ffff 0000 0001 0000 fffe ffff 0000 0001 
	0001 0000 0000 0000 0000 0001 0001 0003 

[Cb]:
	0004 fffe 0001 0006 0000 0001 0000 0000 
	0003 fff9 0000 ffff 0001 0001 0000 0001 
	ffff 000b 0001 0001 0000 ffff fffe 0000 
	fffe 0000 ffff 0003 0000 0000 0001 fffe 
	0001 0000 0000 ffff 0000 0000 0001 0000 
	fffd 0000 0000 0002 fffd 0000 0000 0000 
	0003 0002 0000 fffe 0000 0002 0001 0000 
	0000 0000 ffff 0002 ffff 0000 0000 0000 

[Cr]:
	fff8 fffe 0000 0000 0001 ffff 0000 0001 
	ffff ffff 0006 ffff 0002 0001 fffd 0001 
	0000 0000 0000 0001 0000 fffe fffd 0001 
	fffd fffe 0003 0000 0000 ffff 0000 0000 
	0000 0000 0003 0001 fffe ffff 0000 fffd 
	0001 0001 ffff 0000 0000 0000 0001 0000 
	ffff 0001 ffff 0000 0000 0000 0000 0000 
	0001 ffff 0000 0004 0002 0000 0001 fffe 

[MCU #14] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -21, magnitude = 5, index = 10
		bitstream => writing 6 over 3 bits
		bitstream => writing 10 over 5 bits

AC:
	value = 26, magnitude = 5, index = 26
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 26 over 5 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 19 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 14 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
[acdc] block 0
DC:
	value = 27, magnitude = 5, index = 27
		bitstream => writing 30 over 5 bits
		bitstream => writing 27 over 5 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -3, magnitude = 2, index = 0
		bitstream => writing 2 over 2 bits
		bitstream => writing 0 over 2 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
[MCU #15] Valeurs RGB initiales:
ea7e75 220d0c 01c9a4 fcefde 608521 bb2806 c146e9 af1f5f    
4a9323 e780b7 00182f f5dfab 82fd31 67b9ab 533278 e37c3b    
7cc4cd 308f3b 3f1fc8 2d73a5 5f447e 2ac5ca 7171c6 a351cd    
d082d6 cf6650 b0abc3 d396ae 61ebdb cd1b11 ba781c be9b96    
28de0b 5173f1 72b7bd eb974c 8b2dad 0cf2fe 2c81d3 742927    
71b4d8 8baac1 5d23b3 734d5b d81ab8 ba0a9d 8d4832 d48ff5    
f7e808 50a5dd 5ba8bb f0095b cad459 7551e9 c70eff f6cb67    
9b7803 078fbc 509dbd 40785f 4d718c 3d9543 08b0ea 632f18    

[MCU #15] Conversion RGB -> YCbCr:
[Y]:
	9d 13 89 f1 6f 50 7d 51 
	70 a5 13 e0 c1 9f 44 93 
	af 69 3c 64 53 97 7b 78 
	a3 83 af ab c0 4f 81 a5 
	90 77 a3 a8 58 af 71 3f 
	a4 a3 45 5a 65 4f 5a af 
	d3 92 93 57 c3 6d 61 cc 
	75 6b 8a 64 69 71 84 3c 

[Cb]:
	69 7c 8f 75 54 56 bd 88 
	54 8a 90 62 2f 87 9d 4e 
	91 66 cf a5 98 9d ab b0 
	9d 63 8b 82 8f 5d 47 78 
	35 c5 8f 4c b0 ad b7 72 
	9d 91 be 81 af ac 69 a7 
	0d aa 96 82 44 c6 d9 47 
	40 ad 9d 7d 94 66 b9 6c 

[Cr]:
	b7 8b 1f 88 76 cc b0 c3 
	65 af 72 8f 53 58 8b b9 
	5b 57 82 59 89 32 79 9f 
	a0 b6 81 9d 3c da a8 92 
	36 65 5d b0 a5 0c 4f a6 
	5c 6f 91 92 d2 cc a4 9a 
	9a 51 58 ed 85 86 c9 9e 
	9b 38 57 66 6c 5b 27 9c 

[MCU #15] Downsampling:
[Y]:
	9d 13 89 f1 6f 50 7d 51 
	70 a5 13 e0 c1 9f 44 93 
	af 69 3c 64 53 97 7b 78 
	a3 83 af ab c0 4f 81 a5 
	90 77 a3 a8 58 af 71 3f 
	a4 a3 45 5a 65 4f 5a af 
	d3 92 93 57 c3 6d 61 cc 
	75 6b 8a 64 69 71 84 3c 

[Cb]:
	69 7c 8f 75 54 56 bd 88 
	54 8a 90 62 2f 87 9d 4e 
	91 66 cf a5 98 9d ab b0 
	9d 63 8b 82 8f 5d 47 78 
	35 c5 8f 4c b0 ad b7 72 
	9d 91 be 81 af ac 69 a7 
	0d aa 96 82 44 c6 d9 47 
	40 ad 9d 7d 94 66 b9 6c 

[Cr]:
	b7 8b 1f 88 76 cc b0 c3 
	65 af 72 8f 53 58 8b b9 
	5b 57 82 59 89 32 79 9f 
	a0 b6 81 9d 3c da a8 92 
	36 65 5d b0 a5 0c 4f a6 
	5c 6f 91 92 d2 cc a4 9a 
	9a 51 58 ed 85 86 c9 9e 
	9b 38 57 66 6c 5b 27 9c 

[MCU #15] DCT:
[Y]:
	0000 0033 0000 001a 0066 0018 0004 ffe8 
	0002 ffe7 ffae 0005 0045 0042 ffe7 ffb4 
	ffda fff4 ffd9 0005 001c 0020 fff5 0006 
	0000 0015 0000 ffdd 0022 0018 000a fff4 
	fff8 001f ff9e ffcf ffc9 007d 0019 0030 
	0033 0005 0035 ffd7 003c 000b 001c 0069 
	ff9d fffe 003f 000a ffd4 0042 0004 ffff 
	ffee 000a 0001 002e ffc7 003e 003f fff9 

[Cb]:
	0029 ffdb ffe0 ffd0 ff76 0005 ffec 0021 
	ffdd 0010 0036 fff3 0035 0037 0023 0009 
	ffd3 ffe9 0013 ffd9 ffb7 003c ffc0 fff0 
	0003 fff4 0011 0012 ffde ffdf fffc fff5 
	ffdb 000b 000b fffe 0025 ffde ffc5 0028 
	fffa 0000 fffd fff3 0024 002e 0015 ffef 
	0063 0009 000b ffea 006e fff6 0032 0032 
	002c ffb6 ffed fffe ffa5 0003 ffd0 0000 

[Cr]:
	0013 ffa5 001f ffe4 0054 000d ffe7 ffcc 
	0015 fffd 004e fffe ffc4 ffe3 ffde ffe2 
	fffa fff6 003f 003d 002c 0014 0017 ffe4 
	0058 ffc3 ffcd 002d 0007 fffe ffd9 ffea 
	ffe0 001e 0029 0022 0018 ffee 001b ffcb 
	006b ffe5 0016 005f ffd1 0053 0009 ffc9 
	ffe6 ffe8 ffee 002e fffe ffc8 0037 0045 
	ffa7 fff7 ffec ffc5 006a 0007 ffcd 003b 

[MCU #15] ZZ:
[Y]:
	0000 0033 0002 ffda ffe7 0000 001a ffae 
	fff4 0000 fff8 0015 ffd9 0005 0066 0018 
	0045 0005 0000 001f 0033 ff9d 0005 ff9e 
	ffdd 001c 0042 0004 ffe8 ffe7 0020 0022 
	ffcf 0035 fffe ffee 000a 003f ffd7 ffc9 
	0018 fff5 ffb4 0006 000a 007d 003c 000a 
	0001 002e ffd4 000b 0019 fff4 0030 001c 
	0042 ffc7 003e 0004 0069 ffff 003f fff9 

[Cb]:
	0029 ffdb ffdd ffd3 0010 ffe0 ffd0 0036 
	ffe9 0003 ffdb fff4 0013 fff3 ff76 0005 
	0035 ffd9 0011 000b fffa 0063 0000 000b 
	0012 ffb7 0037 ffec 0021 0023 003c ffde 
	fffe fffd 0009 002c ffb6 000b fff3 0025 
	ffdf ffc0 0009 fff0 fffc ffde 0024 ffea 
	ffed fffe 006e 002e ffc5 fff5 0028 0015 
	fff6 ffa5 0003 0032 ffef 0032 ffd0 0000 

[Cr]:
	0013 ffa5 0015 fffa fffd 001f ffe4 004e 
	fff6 0058 ffe0 ffc3 003f fffe 0054 000d 
	ffc4 003d ffcd 001e 006b ffe6 ffe5 0029 
	002d 002c ffe3 ffe7 ffcc ffde 0014 0007 
	0022 0016 ffe8 ffa7 fff7 ffee 005f 0018 
	fffe 0017 ffe2 ffe4 ffd9 ffee ffd1 002e 
	ffec ffc5 fffe 0053 001b ffea ffcb 0009 
	ffc8 006a 0007 0037 ffc9 0045 ffcd 003b 

[MCU #15] Quantification:
[Y]:
	0000 0011 0000 fff9 fffd 0000 0001 fffc 
	fffd 0000 fffe 0003 fffc 0000 0005 0001 
	0011 0001 0000 0004 0004 fffb 0000 fffb 
	fff8 0005 0009 0000 ffff 0000 0001 0001 
	fff7 0007 0000 ffff 0000 0001 ffff fffe 
	0003 ffff fffc 0000 0000 0004 0001 0000 
	0000 0002 ffff 0000 0000 0000 0001 0000 
	0003 fffe 0002 0000 0003 0000 0002 0000 

[Cb]:
	0008 fff9 fffb fffd 0000 ffff ffff 0001 
	fffc 0000 fffc 0000 0000 0000 fffc 0000 
	0007 fffc 0001 0000 0000 0003 0000 0000 
	0001 fffd 0001 0000 0001 0001 0002 ffff 
	0000 0000 0000 0001 fffe 0000 0000 0001 
	ffff fffe 0000 0000 0000 ffff 0001 0000 
	0000 0000 0003 0001 ffff 0000 0001 0000 
	0000 fffd 0000 0001 0000 0001 ffff 0000 

[Cr]:
	0003 ffee 0003 0000 0000 0001 0000 0002 
	fffe 000e fffc fffd 0002 0000 0002 0000 
	fff8 0007 fffd 0001 0003 0000 0000 0001 
	0003 0002 0000 0000 ffff ffff 0000 0000 
	0001 0000 0000 fffe 0000 0000 0003 0000 
	0000 0000 ffff 0000 ffff 0000 ffff 0001 
	0000 ffff 0000 0002 0000 0000 ffff 0000 
	ffff 0003 0000 0001 ffff 0002 ffff 0001 

[MCU #15] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -4, magnitude = 3, index = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits

AC:
	value = 17, magnitude = 5, index = 17
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 17 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 17, magnitude = 5, index = 17
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 17 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = 4, magnitude = 3, index = 4
		bitstream => writing 6 over 3 bits
		bitstream => writing 4 over 3 bits

AC:
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 1016, nb_bits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 7 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = 11, magnitude = 4, index = 11
		bitstream => writing 14 over 4 bits
		bitstream => writing 11 over 4 bits

AC:
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 13 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 14 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 7 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
[MCU #16] Valeurs RGB initiales:
b95d87 5579d8 8c1450 8f1cdf 4b6c7d 08adf5 68fa66 f437fb    
1eba3f 778d94 9c41b3 da4419 3941ba 2134fe 8753e0 a1de0c    
845386 4907ef 959160 a33192 931b85 eca319 51a75a 539da4    
2b14a1 e8d060 19d9e7 5049ba 7ac4f4 e8f1ef ed6d50 0f3b16    
29ed62 c7aceb e95535 0bac33 13a2d5 f0a56b b0ef0b f64b26    
694aa0 ab615e 5382ee 745127 fe7372 a1d6dc 53c789 db041a    
739080 c7c73b 860ed7 b0d8c5 e5fce3 7940b9 47a862 c943dc    
d21eeb eea569 303a50 7eda83 51c5ba efa257 23b637 35a111    

[MCU #16] Conversion RGB -> YCbCr:
[Y]:
	7d 79 3f 55 64 84 bd 86 
	7d 87 69 6c 4c 45 73 b4 
	67 35 8d 5e 4b a9 85 88 
	2b ca a1 58 b3 ee 90 2a 
	a3 bb 7e 6e 7d b5 c2 7a 
	5d 77 80 57 9c c7 9d 47 
	86 b7 49 ca f2 5f 83 7d 
	6b b4 3a b5 a1 b0 7c 70 

[Cb]:
	85 b6 8a ce 8e c0 4f c2 
	5d 87 aa 51 be e8 be 21 
	91 e9 67 9d a1 2f 68 90 
	c3 44 a7 b7 a4 81 5c 75 
	5c 9b 57 5f b2 56 19 51 
	a6 72 be 65 68 8c 75 67 
	7d 3a d0 7d 77 b3 6d b6 
	c8 56 8d 64 8e 4e 59 4a 

[Cr]:
	ab 66 b7 aa 6e 28 43 cf 
	3c 74 a4 ce 72 66 8f 73 
	94 8e 86 b1 b3 b0 5b 5a 
	80 95 1f 7a 57 7c c2 6d 
	29 88 cd 39 34 aa 73 d9 
	89 a5 60 95 c6 65 4b ea 
	73 8b ac 6e 77 93 55 b7 
	c9 a9 79 59 47 ad 41 56 

[MCU #16] Downsampling:
[Y]:
	7d 79 3f 55 64 84 bd 86 
	7d 87 69 6c 4c 45 73 b4 
	67 35 8d 5e 4b a9 85 88 
	2b ca a1 58 b3 ee 90 2a 
	a3 bb 7e 6e 7d b5 c2 7a 
	5d 77 80 57 9c c7 9d 47 
	86 b7 49 ca f2 5f 83 7d 
	6b b4 3a b5 a1 b0 7c 70 

[Cb]:
	85 b6 8a ce 8e c0 4f c2 
	5d 87 aa 51 be e8 be 21 
	91 e9 67 9d a1 2f 68 90 
	c3 44 a7 b7 a4 81 5c 75 
	5c 9b 57 5f b2 56 19 51 
	a6 72 be 65 68 8c 75 67 
	7d 3a d0 7d 77 b3 6d b6 
	c8 56 8d 64 8e 4e 59 4a 

[Cr]:
	ab 66 b7 aa 6e 28 43 cf 
	3c 74 a4 ce 72 66 8f 73 
	94 8e 86 b1 b3 b0 5b 5a 
	80 95 1f 7a 57 7c c2 6d 
	29 88 cd 39 34 aa 73 d9 
	89 a5 60 95 c6 65 4b ea 
	73 8b ac 6e 77 93 55 b7 
	c9 a9 79 59 47 ad 41 56 

[MCU #16] DCT:
[Y]:
	0015 ffcd ffe8 0051 ffb6 ffda ffc6 ffe0 
	ffb0 ffdb 0068 ffd0 ffde 002b 0040 001a 
	ffe3 fff8 0029 ffe4 007b 000b ffc0 ffdd 
	0010 fffe 0026 0022 fffd 0010 ffdc 0026 
	002a 0002 fffa 0036 ffb5 ffec ffdf ffe0 
	000c fffa ffac 001f fff6 ffe3 ffe5 0018 
	ffd1 ffc8 fff6 002a ffc7 002d 004e 0001 
	0019 fffb 003d fff5 0043 0034 fffc ffff 

[Cb]:
	0020 004e ffc6 0012 0019 ffdd 003e 001d 
	0051 ffec ffd9 000a ffe2 ffcb ffb3 ffbb 
	0031 ffd9 0008 0009 ffd9 0015 0027 fff0 
	000a ffd8 fff5 fff1 ffd7 ffe6 003e ffcf 
	ffdf 002a fff2 0004 0064 fff2 0000 ffe2 
	0050 ffe2 001b ffad 004c 0029 0046 ffca 
	0001 004d 0048 ffd2 0035 fff2 ffbd ffe0 
	ffdd 0004 0013 ffc8 002a ff99 ffb9 ffd2 

[Cr]:
	0013 000c 0019 ffb8 0014 ffd0 002e ffcd 
	0002 fffa ffc0 ffc5 002a 0051 ffd2 0015 
	0000 0062 fffa ffe8 0037 001a 0030 000c 
	0014 ffca 002d ff74 0047 ffc5 0025 002a 
	ffcc 0009 0063 0006 ffcd 001d 0018 fff9 
	0008 000b 001d 0024 003b 0007 ffe3 0009 
	0026 003d 0000 003a 005f ffd5 0001 fffe 
	000d 0002 ffef ffd3 ffc8 ffe1 0073 0013 

[MCU #16] ZZ:
[Y]:
	0015 ffcd ffb0 ffe3 ffdb ffe8 0051 0068 
	fff8 0010 002a fffe 0029 ffd0 ffb6 ffda 
	ffde ffe4 0026 0002 000c ffd1 fffa fffa 
	0022 007b 002b ffc6 ffe0 0040 000b fffd 
	0036 ffac ffc8 0019 fffb fff6 001f ffb5 
	0010 ffc0 001a ffdd ffdc ffec fff6 002a 
	003d fff5 ffc7 ffe3 ffdf 0026 ffe0 ffe5 
	002d 0043 0034 004e 0018 0001 fffc ffff 

[Cb]:
	0020 004e 0051 0031 ffec ffc6 0012 ffd9 
	ffd9 000a ffdf ffd8 0008 000a 0019 ffdd 
	ffe2 0009 fff5 002a 0050 0001 ffe2 fff2 
	fff1 ffd9 ffcb 003e 001d ffb3 0015 ffd7 
	0004 001b 004d ffdd 0004 0048 ffad 0064 
	ffe6 0027 ffbb fff0 003e fff2 004c ffd2 
	0013 ffc8 0035 0029 0000 ffcf ffe2 0046 
	fff2 002a ff99 ffbd ffca ffe0 ffb9 ffd2 

[Cr]:
	0013 000c 0002 0000 fffa 0019 ffb8 ffc0 
	0062 0014 ffcc ffca fffa ffc5 0014 ffd0 
	002a ffe8 002d 0009 0008 0026 000b 0063 
	ff74 0037 0051 002e ffcd ffd2 001a 0047 
	0006 001d 003d 000d 0002 0000 0024 ffcd 
	ffc5 0030 0015 000c 0025 001d 003b 003a 
	ffef ffd3 005f 0007 0018 002a fff9 ffe3 
	ffd5 ffc8 ffe1 0001 0009 fffe 0073 0013 

[MCU #16] Quantification:
[Y]:
	0004 ffef ffe6 fffb fffb fffe 0005 0005 
	fffe 0004 000a 0000 0005 fffe fffc fffe 
	fff8 fff9 0007 0000 0001 fffe 0000 0000 
	0008 0018 0006 fffa fffe 0002 0000 0000 
	000a fff4 fffb 0001 0000 0000 0001 fffd 
	0002 fffb 0001 ffff ffff 0000 0000 0001 
	0004 0000 fffe ffff ffff 0001 0000 0000 
	0002 0002 0001 0002 0000 0000 0000 0000 

[Cb]:
	0006 000f 000b 0003 0000 ffff 0000 ffff 
	fff9 0001 fffc fffe 0000 0000 0000 ffff 
	fffc 0001 0000 0001 0002 0000 ffff 0000 
	ffff ffff ffff 0002 0000 fffe 0000 ffff 
	0000 0000 0002 ffff 0000 0002 fffe 0003 
	0000 0001 fffe 0000 0002 0000 0002 ffff 
	0000 ffff 0001 0001 0000 ffff ffff 0002 
	0000 0001 fffd fffe ffff ffff fffe ffff 

[Cr]:
	0003 0002 0000 0000 0000 0000 fffe fffe 
	0013 0003 fffa fffe 0000 ffff 0000 ffff 
	0006 fffd 0002 0000 0000 0001 0000 0003 
	fff6 0002 0002 0001 ffff ffff 0000 0002 
	0000 0000 0002 0000 0000 0000 0001 ffff 
	ffff 0001 0000 0000 0001 0000 0001 0001 
	0000 ffff 0003 0000 0000 0001 0000 0000 
	ffff ffff ffff 0000 0000 0000 0003 0000 

[MCU #16] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 4, magnitude = 3, index = 4
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits

AC:
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -26, magnitude = 5, index = 5
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 5 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 36, huffman path = 4084, nb_bits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 8 over 4 bits
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 36, huffman path = 4084, nb_bits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 10 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -2, magnitude = 2, index = 1
		bitstream => writing 2 over 2 bits
		bitstream => writing 1 over 2 bits

AC:
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 15 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 19 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[MCU #17] Valeurs RGB initiales:
373fab 21a2db 3a5b38 c1b1b1 993dc5 eacde1 c9184e 4621fb    
92775c 947b08 6799c2 a6104f 3bad91 ee87d5 07c116 c2e24a    
860200 536e2f 5ff282 e53b8a d5d01b 35734c c70667 4df30b    
a2c971 0508e3 1c33f7 be1cc8 1e35a1 0585ea c0ffae b4e79f    
c7bf9f 3f806f 1daa5c 7f7109 6b5a5e a0650b d379ad a86952    
790efe 498f90 ccf8db 6da33c cbf7be b96b10 e06a83 530b59    
48a0b7 91b6cf 102960 90f027 cc7636 a3260e 680b0a 4b844a    
b618b5 b64482 c616a0 b10445 1a357f 6bb35a ee041f a8f4c1    

[MCU #17] Conversion RGB -> YCbCr:
[Y]:
	49 82 4d b6 68 d8 53 45 
	7c 75 8f 44 88 af 76 c7 
	29 5f b9 77 bd 5c 4b a7 
	b3 20 42 60 3a 6a e3 d0 
	be 6b 77 69 60 6c 9a 79 
	49 7a e8 87 e3 78 90 29 
	88 ae 28 bc 88 49 27 6c 
	59 6d 5a 3f 35 93 4d d7 

[Cb]:
	b7 b2 74 7d b4 85 7d e7 
	6e 42 9d 86 85 96 4a 39 
	69 65 61 8b 25 77 90 28 
	5b ee e6 bb ba c8 62 65 
	6f 82 71 4a 7f 49 8b 6a 
	e6 8c 79 56 6b 45 79 9b 
	9a 93 a0 2c 51 5f 70 6d 
	b4 8c a7 83 aa 60 66 73 

[Cr]:
	73 3b 72 88 a3 8d d4 81 
	90 96 64 c6 49 ad 31 7c 
	c2 78 40 cf 91 64 d9 40 
	74 6d 65 c3 6c 38 67 6c 
	87 61 40 8f 88 a5 a9 a1 
	a2 5d 6c 6d 6f ae b9 9e 
	52 6b 6f 60 b0 c0 af 68 
	c2 b4 cd d1 6c 63 f3 5e 

[MCU #17] Downsampling:
[Y]:
	49 82 4d b6 68 d8 53 45 
	7c 75 8f 44 88 af 76 c7 
	29 5f b9 77 bd 5c 4b a7 
	b3 20 42 60 3a 6a e3 d0 
	be 6b 77 69 60 6c 9a 79 
	49 7a e8 87 e3 78 90 29 
	88 ae 28 bc 88 49 27 6c 
	59 6d 5a 3f 35 93 4d d7 

[Cb]:
	b7 b2 74 7d b4 85 7d e7 
	6e 42 9d 86 85 96 4a 39 
	69 65 61 8b 25 77 90 28 
	5b ee e6 bb ba c8 62 65 
	6f 82 71 4a 7f 49 8b 6a 
	e6 8c 79 56 6b 45 79 9b 
	9a 93 a0 2c 51 5f 70 6d 
	b4 8c a7 83 aa 60 66 73 

[Cr]:
	73 3b 72 88 a3 8d d4 81 
	90 96 64 c6 49 ad 31 7c 
	c2 78 40 cf 91 64 d9 40 
	74 6d 65 c3 6c 38 67 6c 
	87 61 40 8f 88 a5 a9 a1 
	a2 5d 6c 6d 6f ae b9 9e 
	52 6b 6f 60 b0 c0 af 68 
	c2 b4 cd d1 6c 63 f3 5e 

[MCU #17] DCT:
[Y]:
	ffcd ffcb 0000 fff4 0018 ffe7 0023 fff7 
	001d ffcc ffe3 0012 ffe4 0008 0024 fffb 
	ffdb 0008 ffd4 0005 fff1 ffa0 0016 ff7d 
	0020 0062 ff87 0041 ffd2 0023 ffcd fff7 
	ffdd ffc6 007c 0033 fff5 005a 0013 ffb4 
	ffe1 0010 ffdb 0008 003b 0023 ffba ffbf 
	0000 fffa ff78 ffce ffc3 ffe3 0015 003f 
	ffe3 0047 ffdb fff0 0027 ffd7 ffea ffd1 

[Cb]:
	fffe 005f 0013 0000 fff0 ffeb 000f 0025 
	0011 ffcb ffbb 0008 fffe 0001 0005 ffc3 
	0019 fffa 0028 000d 0048 fff4 0021 0017 
	0017 ffe7 0083 0003 0045 ffd3 fff7 0029 
	007a fff5 ffdc ffe7 0015 ffa9 ffe1 0007 
	004f 000b 0019 ffe7 ffd3 ffd1 fffd ffdd 
	000f fffd 004a 000b 0036 0026 ffd9 ffec 
	ff95 ffd4 003d 0009 ffed 002a ffd7 0008 

[Cr]:
	0037 ffd5 ffef 003a 0014 007f ffc0 ffe1 
	ffc9 0007 ffe9 0002 0043 0000 0002 ffd0 
	003c 000d ffee fff6 ffbe 0013 0008 0025 
	ffea ff7b 0016 002d fff0 ffc3 004f 0018 
	000c 0000 0000 ffc5 000d 0022 ffe3 0028 
	ffd3 ffd1 ffd3 000c fffc fff9 ffe2 004b 
	0037 0000 002b 0015 0001 005d ffcc 003f 
	0019 ffc2 fff2 0049 fff8 0009 ffd5 0025 

[MCU #17] ZZ:
[Y]:
	ffcd ffcb 001d ffdb ffcc 0000 fff4 ffe3 
	0008 0020 ffdd 0062 ffd4 0012 0018 ffe7 
	ffe4 0005 ff87 ffc6 ffe1 0000 0010 007c 
	0041 fff1 0008 0023 fff7 0024 ffa0 ffd2 
	0033 ffdb fffa ffe3 0047 ff78 0008 fff5 
	0023 0016 fffb ff7d ffcd 005a 003b ffce 
	ffdb fff0 ffc3 0023 0013 fff7 ffb4 ffba 
	ffe3 0027 ffd7 0015 ffbf 003f ffea ffd1 

[Cb]:
	fffe 005f 0011 0019 ffcb 0013 0000 ffbb 
	fffa 0017 007a ffe7 0028 0008 fff0 ffeb 
	fffe 000d 0083 fff5 004f 000f 000b ffdc 
	0003 0048 0001 000f 0025 0005 fff4 0045 
	ffe7 0019 fffd ff95 ffd4 004a ffe7 0015 
	ffd3 0021 ffc3 0017 fff7 ffa9 ffd3 000b 
	003d 0009 0036 ffd1 ffe1 0029 0007 fffd 
	0026 ffed 002a ffd9 ffdd ffec ffd7 0008 

[Cr]:
	0037 ffd5 ffc9 003c 0007 ffef 003a ffe9 
	000d ffea 000c ff7b ffee 0002 0014 007f 
	0043 fff6 0016 0000 ffd3 0037 ffd1 0000 
	002d ffbe 0000 ffc0 ffe1 0002 0013 fff0 
	ffc5 ffd3 0000 0019 ffc2 002b 000c 000d 
	ffc3 0008 ffd0 0025 004f 0022 fffc 0015 
	fff2 0049 0001 fff9 ffe3 0018 0028 ffe2 
	005d fff8 0009 ffcc 004b 003f ffd5 0025 

[MCU #17] Quantification:
[Y]:
	fff6 ffef 0009 fff9 fff9 0000 0000 ffff 
	0002 0008 fff8 0010 fffb 0001 0001 ffff 
	fff9 0001 ffe8 fff8 fffe 0000 0000 0007 
	0010 fffd 0001 0003 0000 0001 fffc fffe 
	000a fffb 0000 ffff 0003 fffc 0000 0000 
	0005 0002 0000 fffa fffe 0002 0001 ffff 
	fffe 0000 fffe 0001 0000 0000 fffe fffe 
	ffff 0001 ffff 0000 ffff 0002 0000 ffff 

[Cb]:
	0000 0013 0002 0001 ffff 0000 0000 fffe 
	ffff 0003 000f ffff 0001 0000 0000 0000 
	0000 0001 0007 0000 0002 0000 0000 ffff 
	0000 0003 0000 0000 0001 0000 0000 0002 
	0000 0000 0000 fffd ffff 0002 0000 0000 
	ffff 0001 fffe 0000 0000 fffe ffff 0000 
	0002 0000 0001 ffff ffff 0001 0000 0000 
	0001 0000 0001 ffff ffff 0000 ffff 0000 

[Cr]:
	000b fff8 fff9 0004 0000 0000 0001 0000 
	0002 fffd 0001 fffa 0000 0000 0000 0004 
	0009 ffff 0001 0000 ffff 0001 ffff 0000 
	0003 fffd 0000 fffe ffff 0000 0000 0000 
	ffff ffff 0000 0000 fffe 0001 0000 0000 
	fffe 0000 ffff 0001 0002 0001 0000 0000 
	0000 0002 0000 0000 0000 0000 0001 ffff 
	0003 0000 0000 ffff 0002 0002 ffff 0001 

[MCU #17] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -14, magnitude = 4, index = 1
		bitstream => writing 5 over 3 bits
		bitstream => writing 1 over 4 bits

AC:
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nb_bits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -6, magnitude = 3, index = 1
		bitstream => writing 6 over 3 bits
		bitstream => writing 1 over 3 bits

AC:
	value = 19, magnitude = 5, index = 19
	RLE code = 5, huffman path = 25, nb_bits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 19 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 15 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = 8, magnitude = 4, index = 8
		bitstream => writing 14 over 4 bits
		bitstream => writing 8 over 4 bits

AC:
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 51, huffman path = 1016, nb_bits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 4 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
[MCU #18] Valeurs RGB initiales:
3c89f5 a27d2c 9eb56c 49d60e 24106a 5cd21b 0d6b58 d35525    
c0699d a10b7b ad9df3 09316e 119907 d43f18 237ac5 b4694c    
6644b2 c1974f 651d51 6570bf 95cfb1 17b5ec a18abd bcbf30    
a4d40c f4e348 0a8611 7b8b19 5ea74c 566568 1e849d bf8922    
131942 1e0f8d 44d64c e315cd 523377 afb2e8 b81d42 16bda8    
2f5f20 b83a24 d3b332 d1fdc1 61c9b9 3c365d 780154 37bbbf    
04ccf3 669536 42ded6 fa6f8c c97fb5 290fa5 51db1c 877e42    
ff1778 374d19 480331 fdba75 7f808c 1f3190 644bc5 e4b679    

[MCU #18] Conversion RGB -> YCbCr:
[Y]:
	7e 7f a6 95 20 9a 4d 75 
	89 45 ac 2c 60 67 69 7c 
	5b 9b 38 76 ba 8c 97 ae 
	af d6 54 79 87 61 68 8d 
	1c 22 9b 68 44 b7 50 89 
	49 5d ae e9 a8 3c 2e 94 
	95 7c ae 9c 9b 28 9c 7a 
	67 40 1d c6 81 36 60 bd 

[Cb]:
	c3 51 5f 34 aa 38 86 53 
	8b 9f a8 a5 4e 53 b4 65 
	b1 55 8e a9 7b b6 96 39 
	24 30 5a 4a 5f 84 9e 43 
	96 bc 54 b9 9d 9c 78 92 
	69 60 3a 69 8a 92 95 98 
	b5 58 96 77 8f c7 38 60 
	89 6a 8b 52 86 b3 b9 5a 

[Cr]:
	51 99 7a 4a 83 54 53 c3 
	a7 c2 81 67 48 ce 4e a8 
	88 9b a0 74 65 2d 87 8a 
	78 95 4c 81 63 78 4b a3 
	7a 7d 42 d8 8a 7a ca 2e 
	6d c1 9a 6f 4d 80 b5 3e 
	19 70 33 c3 a1 81 4b 89 
	ec 79 9f a7 7f 6f 83 9c 

[MCU #18] Downsampling:
[Y]:
	7e 7f a6 95 20 9a 4d 75 
	89 45 ac 2c 60 67 69 7c 
	5b 9b 38 76 ba 8c 97 ae 
	af d6 54 79 87 61 68 8d 
	1c 22 9b 68 44 b7 50 89 
	49 5d ae e9 a8 3c 2e 94 
	95 7c ae 9c 9b 28 9c 7a 
	67 40 1d c6 81 36 60 bd 

[Cb]:
	c3 51 5f 34 aa 38 86 53 
	8b 9f a8 a5 4e 53 b4 65 
	b1 55 8e a9 7b b6 96 39 
	24 30 5a 4a 5f 84 9e 43 
	96 bc 54 b9 9d 9c 78 92 
	69 60 3a 69 8a 92 95 98 
	b5 58 96 77 8f c7 38 60 
	89 6a 8b 52 86 b3 b9 5a 

[Cr]:
	51 99 7a 4a 83 54 53 c3 
	a7 c2 81 67 48 ce 4e a8 
	88 9b a0 74 65 2d 87 8a 
	78 95 4c 81 63 78 4b a3 
	7a 7d 42 d8 8a 7a ca 2e 
	6d c1 9a 6f 4d 80 b5 3e 
	19 70 33 c3 a1 81 4b 89 
	ec 79 9f a7 7f 6f 83 9c 

[MCU #18] DCT:
[Y]:
	ffbe fff2 ffed ffa8 0049 fff8 0013 fff0 
	ffff 0015 003c 003b ff8f ffe4 003f fff4 
	ffef 0013 0017 ffeb 0021 0040 0002 0002 
	ffec 0031 ffb1 ffac ffcc 0031 006e fffa 
	ffd8 fff6 001c 000f fff1 0008 0020 ff9e 
	005b 0059 0021 000e ffff fff5 ffa3 fffb 
	0013 ffd7 ffc4 ffeb 0042 ffdf ffd6 ffb1 
	fff4 ffab fff0 0013 ffc2 000d 001b fffc 

[Cb]:
	ffe1 fff9 ffef 0066 ffef 003d 0007 0017 
	ffe3 0030 0013 ffdc 000c 0035 ffc7 002c 
	000a 0037 0027 0014 0000 000c 001b 0054 
	fffc 0000 002e 0000 0058 ffb7 ffe0 0002 
	ffd7 ffe1 000f 0014 fffa ffe2 ffd6 002a 
	ffa4 fff4 ffe4 003a 0010 fffb 004d 002e 
	fff7 ffd2 0009 0037 000f 000c fff5 001b 
	005d 0058 ffeb 0028 0037 fff3 0025 ffdb 

[Cr]:
	fff5 001b 001b ffdf 0006 ffed ffd2 ffbf 
	ffeb 0000 004e ffdf ffe6 ffaa 002a 0005 
	001a fffb 0023 ffe3 0029 ffc2 004d 0012 
	ffde ffd7 ffc7 0011 ffbc fff5 ffc8 fff6 
	000c fff9 0009 0010 0044 0019 fff9 0012 
	ffac ffc3 ffdf ffc0 0035 ffaa fff2 ffff 
	000a 0038 0039 ffd2 ffce 002a ffee 0069 
	ffee ffe0 ffb8 fff3 0030 002c ffba 001f 

[MCU #18] ZZ:
[Y]:
	ffbe fff2 ffff ffef 0015 ffed ffa8 003c 
	0013 ffec ffd8 0031 0017 003b 0049 fff8 
	ff8f ffeb ffb1 fff6 005b 0013 0059 001c 
	ffac 0021 ffe4 0013 fff0 003f 0040 ffcc 
	000f 0021 ffd7 fff4 ffab ffc4 000e fff1 
	0031 0002 fff4 0002 006e 0008 ffff ffeb 
	fff0 0013 0042 fff5 0020 fffa ff9e ffa3 
	ffdf ffc2 000d ffd6 fffb ffb1 001b fffc 

[Cb]:
	ffe1 fff9 ffe3 000a 0030 ffef 0066 0013 
	0037 fffc ffd7 0000 0027 ffdc ffef 003d 
	000c 0014 002e ffe1 ffa4 fff7 fff4 000f 
	0000 0000 0035 0007 0017 ffc7 000c 0058 
	0014 ffe4 ffd2 005d 0058 0009 003a fffa 
	ffb7 001b 002c 0054 ffe0 ffe2 0010 0037 
	ffeb 0028 000f fffb ffd6 0002 002a 004d 
	000c 0037 fff3 fff5 002e 001b 0025 ffdb 

[Cr]:
	fff5 001b ffeb 001a 0000 001b ffdf 004e 
	fffb ffde 000c ffd7 0023 ffdf 0006 ffed 
	ffe6 ffe3 ffc7 fff9 ffac 000a ffc3 0009 
	0011 0029 ffaa ffd2 ffbf 002a ffc2 ffbc 
	0010 ffdf 0038 ffee ffe0 0039 ffc0 0044 
	fff5 004d 0005 0012 ffc8 0019 0035 ffd2 
	ffb8 fff3 ffce ffaa fff9 fff6 0012 fff2 
	002a 0030 002c ffee ffff 0069 ffba 001f 

[MCU #18] Quantification:
[Y]:
	fff3 fffc 0000 fffd 0003 ffff fffb 0003 
	0004 fffb fff6 0008 0002 0003 0004 0000 
	ffe4 fffb fff1 ffff 0007 0001 0004 0001 
	ffeb 0006 fffc 0002 ffff 0002 0002 fffe 
	0003 0004 fffd 0000 fffc ffff 0000 0000 
	0007 0000 0000 0000 0004 0000 0000 0000 
	ffff 0001 0002 0000 0001 0000 fffe fffd 
	ffff fffe 0000 ffff 0000 fffe 0000 0000 

[Cb]:
	fffa ffff fffc 0000 0001 0000 0003 0000 
	000b 0000 fffb 0000 0001 ffff 0000 0002 
	0001 0002 0002 ffff fffd 0000 0000 0000 
	0000 0000 0001 0000 0000 ffff 0000 0002 
	0000 0000 ffff 0003 0002 0000 0001 0000 
	fffe 0000 0001 0002 ffff ffff 0000 0001 
	0000 0001 0000 0000 ffff 0000 0001 0002 
	0000 0001 0000 0000 0001 0000 0001 ffff 

[Cr]:
	fffe 0005 fffd 0001 0000 0000 ffff 0002 
	ffff fffb 0001 fffe 0001 ffff 0000 0000 
	fffd fffd fffd 0000 fffe 0000 fffe 0000 
	0001 0002 fffe ffff fffe 0001 fffe fffe 
	0000 ffff 0001 0000 ffff 0001 fffe 0002 
	0000 0002 0000 0000 ffff 0000 0001 ffff 
	fffe 0000 ffff fffe 0000 0000 0000 0000 
	0001 0001 0001 0000 0000 0003 fffe 0001 

[MCU #18] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -3, magnitude = 2, index = 0
		bitstream => writing 3 over 3 bits
		bitstream => writing 0 over 2 bits

AC:
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -28, magnitude = 5, index = 3
	RLE code = 21, huffman path = 2038, nb_bits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 3 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -21, magnitude = 5, index = 10
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 10 over 5 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nb_bits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nb_bits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 51, huffman path = 4085, nb_bits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -6, magnitude = 3, index = 1
		bitstream => writing 6 over 3 bits
		bitstream => writing 1 over 3 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 501, nb_bits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 11 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nb_bits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = -13, magnitude = 4, index = 2
		bitstream => writing 14 over 4 bits
		bitstream => writing 2 over 4 bits

AC:
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
[MCU #19] Valeurs RGB initiales:
b41f3e 02655f fda1e8 f24465 1fe21a 8b2bf1 995001 03acd3    
89700d a032f0 eaf359 889464 034102 f64a33 645bcc 6c2f0c    
088637 70d32a 7b3a6e 2dfb05 7c6022 cec693 8d5b62 3f7217    
a94921 57fe08 f6a2dc 0296c0 4aa046 5b1bd1 747978 c1cfde    
219021 cf388a 214ba3 6369b2 f0ad88 3d919d 0ae3d0 819283    
479b29 caee35 231d94 44d6ce 68a982 9b7a7f 5cdb48 16187f    
95e74e a032d2 ea379e dd9d34 14e012 eada81 77a300 2ccd0f    
3ea47d 5d4c71 1e4c89 9683d6 afcbd9 e0c993 564813 e26844    

[MCU #19] Conversion RGB -> YCbCr:
[Y]:
	4f 47 c5 7c 91 5e 5d 7e 
	6c 69 df 8b 27 7b 6b 3d 
	57 a2 53 a1 61 c3 6b 58 
	61 b0 c2 6f 7c 43 77 cd 
	62 6e 48 70 bd 79 a0 8b 
	75 ce 2c a9 91 84 a4 23 
	bd 65 78 a4 8c d5 83 87 
	81 55 45 92 c4 ca 46 88 

[Cb]:
	76 8e 94 73 3d d3 4c b0 
	4a cc 35 6a 6b 57 b7 64 
	6e 3c 8f 28 5c 65 7b 5b 
	5c 21 8f ae 62 d0 80 8a 
	5b 90 b3 a6 62 94 9b 7b 
	55 2a ba 95 77 7d 4c b4 
	41 bd 95 41 3b 51 36 3c 
	7e 90 a6 a6 8c 61 63 59 

[Cr]:
	c8 4f a8 d4 2f a0 ab 28 
	95 a8 88 7e 66 d8 7b a1 
	47 5c 9c 2d 93 88 98 6e 
	b3 40 a5 33 5c 91 7e 78 
	52 c5 64 77 a5 55 15 79 
	5f 7d 79 38 63 90 4c 77 
	63 aa d1 a9 2b 8f 77 3f 
	50 85 64 83 71 90 8b c0 

[MCU #19] Downsampling:
[Y]:
	4f 47 c5 7c 91 5e 5d 7e 
	6c 69 df 8b 27 7b 6b 3d 
	57 a2 53 a1 61 c3 6b 58 
	61 b0 c2 6f 7c 43 77 cd 
	62 6e 48 70 bd 79 a0 8b 
	75 ce 2c a9 91 84 a4 23 
	bd 65 78 a4 8c d5 83 87 
	81 55 45 92 c4 ca 46 88 

[Cb]:
	76 8e 94 73 3d d3 4c b0 
	4a cc 35 6a 6b 57 b7 64 
	6e 3c 8f 28 5c 65 7b 5b 
	5c 21 8f ae 62 d0 80 8a 
	5b 90 b3 a6 62 94 9b 7b 
	55 2a ba 95 77 7d 4c b4 
	41 bd 95 41 3b 51 36 3c 
	7e 90 a6 a6 8c 61 63 59 

[Cr]:
	c8 4f a8 d4 2f a0 ab 28 
	95 a8 88 7e 66 d8 7b a1 
	47 5c 9c 2d 93 88 98 6e 
	b3 40 a5 33 5c 91 7e 78 
	52 c5 64 77 a5 55 15 79 
	5f 7d 79 38 63 90 4c 77 
	63 aa d1 a9 2b 8f 77 3f 
	50 85 64 83 71 90 8b c0 

[MCU #19] DCT:
[Y]:
	fffb fffa ffb7 000e fff6 fff6 0004 ffdb 
	ffc4 0029 ffff ff73 ffb6 001c 002a 002f 
	fff2 0009 ffca 0017 001a 0022 006d 0001 
	fff8 0007 fff7 000b 0000 001d ffc1 0034 
	fffc ffbf 000a ffc5 004a ffb7 0013 005d 
	0034 0000 0020 ffd7 0010 ffee 001a 0006 
	ffe6 fffb ffd5 003a 0002 ffd6 ffaa ffc8 
	0004 ffc0 ffec 004b 0020 0001 0015 ffec 

[Cb]:
	ffb0 fffa ffe1 ffba ffb5 0003 003a ffe0 
	0008 ffb9 003c 0037 ffe9 0001 fffa ffdf 
	fff3 004e 0028 0005 fff2 ffb8 ffce ffe9 
	0028 ffef 0006 ffcd 0000 ffe0 0035 ffcc 
	0068 fff0 ffd7 0006 000d 0026 0038 ffc4 
	ffcd 0000 0001 0007 fff3 fff3 006e ffea 
	000b ffe3 fff6 fff5 0041 001a 0076 0030 
	ffe0 0040 0025 ffff ffbf ffe8 fff1 001a 

[Cr]:
	ffda 0015 0001 fffa ffab 0000 0048 ffe3 
	0029 000c 0004 0042 ffff 0054 0023 0016 
	004b fff7 fff4 fff3 ffe8 0076 fff3 ffb2 
	ffef 0060 ffe1 ffff 0008 001c fff9 ffc8 
	0000 000d 0007 0006 0048 0024 fff1 fffe 
	fff2 002f fff5 0000 ffc6 0093 002d 002d 
	ffc9 ffbf 0000 0015 000b ffff fffa 003b 
	fff4 0026 ffb8 ffd2 fffd ffe9 ffbc ffff 

[MCU #19] ZZ:
[Y]:
	fffb fffa ffc4 fff2 0029 ffb7 000e ffff 
	0009 fff8 fffc 0007 ffca ff73 fff6 fff6 
	ffb6 0017 fff7 ffbf 0034 ffe6 0000 000a 
	000b 001a 001c 0004 ffdb 002a 0022 0000 
	ffc5 0020 fffb 0004 ffc0 ffd5 ffd7 004a 
	001d 006d 002f 0001 ffc1 ffb7 0010 003a 
	ffec 004b 0002 ffee 0013 0034 005d 001a 
	ffd6 0020 0001 ffaa 0006 ffc8 0015 ffec 

[Cb]:
	ffb0 fffa 0008 fff3 ffb9 ffe1 ffba 003c 
	004e 0028 0068 ffef 0028 0037 ffb5 0003 
	ffe9 0005 0006 fff0 ffcd 000b 0000 ffd7 
	ffcd fff2 0001 003a ffe0 fffa ffb8 0000 
	0006 0001 ffe3 ffe0 0040 fff6 0007 000d 
	ffe0 ffce ffdf ffe9 0035 0026 fff3 fff5 
	0025 ffff 0041 fff3 0038 ffcc ffc4 006e 
	001a ffbf ffe8 0076 ffea 0030 fff1 001a 

[Cr]:
	ffda 0015 0029 004b 000c 0001 fffa 0004 
	fff7 ffef 0000 0060 fff4 0042 ffab 0000 
	ffff fff3 ffe1 000d fff2 ffc9 002f 0007 
	ffff ffe8 0054 0048 ffe3 0023 0076 0008 
	0006 fff5 ffbf fff4 0026 0000 0000 0048 
	001c fff3 0016 ffb2 fff9 0024 ffc6 0015 
	ffb8 ffd2 000b 0093 fff1 ffc8 fffe 002d 
	ffff fffd ffe9 fffa 002d 003b ffbc ffff 

[MCU #19] Quantification:
[Y]:
	ffff fffe ffec fffe 0005 fffa 0000 0000 
	0002 fffe ffff 0001 fffa fff8 0000 0000 
	ffee 0005 ffff fff7 0004 ffff 0000 0000 
	0002 0005 0004 0000 fffe 0001 0001 0000 
	fff5 0004 0000 0000 fffd ffff ffff 0003 
	0004 0009 0002 0000 fffe fffe 0000 0002 
	ffff 0003 0000 0000 0000 0001 0002 0000 
	ffff 0001 0000 fffe 0000 ffff 0000 0000 

[Cb]:
	fff0 ffff 0001 0000 fffe ffff fffe 0002 
	000f 0006 000d 0000 0001 0001 fffe 0000 
	fffd 0000 0000 0000 ffff 0000 0000 ffff 
	fffd 0000 0000 0001 ffff 0000 fffe 0000 
	0000 0000 0000 ffff 0002 0000 0000 0000 
	ffff ffff ffff 0000 0001 0001 0000 0000 
	0001 0000 0002 0000 0001 ffff fffe 0003 
	0000 fffe 0000 0003 0000 0001 0000 0000 

[Cr]:
	fff9 0004 0005 0005 0000 0000 0000 0000 
	ffff fffe 0000 0004 0000 0002 fffe 0000 
	0000 ffff ffff 0000 0000 ffff 0001 0000 
	0000 ffff 0002 0002 0000 0001 0003 0000 
	0000 0000 fffe 0000 0001 0000 0000 0002 
	0000 0000 0000 fffe 0000 0001 ffff 0000 
	fffe ffff 0000 0004 0000 ffff 0000 0001 
	0000 0000 0000 0000 0001 0001 fffe 0000 

[MCU #19] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 5 over 3 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 5, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 11 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 37, huffman path = 65417, nb_bits = 16
		bitstream => writing 65417 over 16 bits
		bitstream => writing 13 over 5 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nb_bits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nb_bits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nb_bits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -10, magnitude = 4, index = 5
		bitstream => writing 14 over 4 bits
		bitstream => writing 5 over 4 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 15 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 24, nb_bits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 13 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nb_bits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -5, magnitude = 3, index = 2
		bitstream => writing 6 over 3 bits
		bitstream => writing 2 over 3 bits

AC:
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nb_bits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nb_bits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nb_bits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 248, nb_bits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nb_bits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 246, nb_bits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nb_bits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nb_bits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nb_bits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nb_bits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 0, nb_bits = 2
		bitstream => writing 0 over 2 bits
